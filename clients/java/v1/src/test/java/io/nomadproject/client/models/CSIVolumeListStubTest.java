/*
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.CSITopology;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CSIVolumeListStub
 */
public class CSIVolumeListStubTest {
    private final CSIVolumeListStub model = new CSIVolumeListStub();

    /**
     * Model tests for CSIVolumeListStub
     */
    @Test
    public void testCSIVolumeListStub() {
        // TODO: test CSIVolumeListStub
    }

    /**
     * Test the property 'accessMode'
     */
    @Test
    public void accessModeTest() {
        // TODO: test accessMode
    }

    /**
     * Test the property 'attachmentMode'
     */
    @Test
    public void attachmentModeTest() {
        // TODO: test attachmentMode
    }

    /**
     * Test the property 'controllerRequired'
     */
    @Test
    public void controllerRequiredTest() {
        // TODO: test controllerRequired
    }

    /**
     * Test the property 'controllersExpected'
     */
    @Test
    public void controllersExpectedTest() {
        // TODO: test controllersExpected
    }

    /**
     * Test the property 'controllersHealthy'
     */
    @Test
    public void controllersHealthyTest() {
        // TODO: test controllersHealthy
    }

    /**
     * Test the property 'createIndex'
     */
    @Test
    public void createIndexTest() {
        // TODO: test createIndex
    }

    /**
     * Test the property 'currentReaders'
     */
    @Test
    public void currentReadersTest() {
        // TODO: test currentReaders
    }

    /**
     * Test the property 'currentWriters'
     */
    @Test
    public void currentWritersTest() {
        // TODO: test currentWriters
    }

    /**
     * Test the property 'externalID'
     */
    @Test
    public void externalIDTest() {
        // TODO: test externalID
    }

    /**
     * Test the property 'ID'
     */
    @Test
    public void IDTest() {
        // TODO: test ID
    }

    /**
     * Test the property 'modifyIndex'
     */
    @Test
    public void modifyIndexTest() {
        // TODO: test modifyIndex
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'nodesExpected'
     */
    @Test
    public void nodesExpectedTest() {
        // TODO: test nodesExpected
    }

    /**
     * Test the property 'nodesHealthy'
     */
    @Test
    public void nodesHealthyTest() {
        // TODO: test nodesHealthy
    }

    /**
     * Test the property 'pluginID'
     */
    @Test
    public void pluginIDTest() {
        // TODO: test pluginID
    }

    /**
     * Test the property 'provider'
     */
    @Test
    public void providerTest() {
        // TODO: test provider
    }

    /**
     * Test the property 'resourceExhausted'
     */
    @Test
    public void resourceExhaustedTest() {
        // TODO: test resourceExhausted
    }

    /**
     * Test the property 'schedulable'
     */
    @Test
    public void schedulableTest() {
        // TODO: test schedulable
    }

    /**
     * Test the property 'topologies'
     */
    @Test
    public void topologiesTest() {
        // TODO: test topologies
    }

}
