/*
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.api;

import io.nomadproject.client.ApiException;
import io.nomadproject.client.models.AllocationListStub;
import io.nomadproject.client.models.Deployment;
import io.nomadproject.client.models.Evaluation;
import io.nomadproject.client.models.Job;
import io.nomadproject.client.models.JobDeregisterResponse;
import io.nomadproject.client.models.JobDispatchRequest;
import io.nomadproject.client.models.JobDispatchResponse;
import io.nomadproject.client.models.JobEvaluateRequest;
import io.nomadproject.client.models.JobListStub;
import io.nomadproject.client.models.JobPlanRequest;
import io.nomadproject.client.models.JobPlanResponse;
import io.nomadproject.client.models.JobRegisterRequest;
import io.nomadproject.client.models.JobRegisterResponse;
import io.nomadproject.client.models.JobRevertRequest;
import io.nomadproject.client.models.JobScaleStatusResponse;
import io.nomadproject.client.models.JobStabilityRequest;
import io.nomadproject.client.models.JobStabilityResponse;
import io.nomadproject.client.models.JobSummary;
import io.nomadproject.client.models.JobValidateRequest;
import io.nomadproject.client.models.JobValidateResponse;
import io.nomadproject.client.models.JobVersionsResponse;
import io.nomadproject.client.models.JobsParseRequest;
import io.nomadproject.client.models.PeriodicForceResponse;
import io.nomadproject.client.models.ScalingRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Ignore
public class JobsApiTest {

    private final JobsApi api = new JobsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteJobTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        Boolean purge = null;
        Boolean global = null;
        JobDeregisterResponse response = api.deleteJob(jobName, region, namespace, xNomadToken, idempotencyToken, purge, global);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        Job response = api.getJob(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobAllocationsTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        Boolean all = null;
        List<AllocationListStub> response = api.getJobAllocations(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken, all);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobDeploymentTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        Deployment response = api.getJobDeployment(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobDeploymentsTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        Integer all = null;
        List<Deployment> response = api.getJobDeployments(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken, all);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobEvaluationsTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        List<Evaluation> response = api.getJobEvaluations(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobScaleStatusTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        JobScaleStatusResponse response = api.getJobScaleStatus(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobSummaryTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        JobSummary response = api.getJobSummary(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobVersionsTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        Boolean diffs = null;
        JobVersionsResponse response = api.getJobVersions(jobName, region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken, diffs);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobsTest() throws ApiException {
        String region = null;
        String namespace = null;
        Integer index = null;
        String wait = null;
        String stale = null;
        String prefix = null;
        String xNomadToken = null;
        Integer perPage = null;
        String nextToken = null;
        List<JobListStub> response = api.getJobs(region, namespace, index, wait, stale, prefix, xNomadToken, perPage, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobTest() throws ApiException {
        String jobName = null;
        JobRegisterRequest jobRegisterRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobRegisterResponse response = api.postJob(jobName, jobRegisterRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobDispatchTest() throws ApiException {
        String jobName = null;
        JobDispatchRequest jobDispatchRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobDispatchResponse response = api.postJobDispatch(jobName, jobDispatchRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobEvaluateTest() throws ApiException {
        String jobName = null;
        JobEvaluateRequest jobEvaluateRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobRegisterResponse response = api.postJobEvaluate(jobName, jobEvaluateRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobParseTest() throws ApiException {
        JobsParseRequest jobsParseRequest = null;
        Job response = api.postJobParse(jobsParseRequest);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobPeriodicForceTest() throws ApiException {
        String jobName = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        PeriodicForceResponse response = api.postJobPeriodicForce(jobName, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobPlanTest() throws ApiException {
        String jobName = null;
        JobPlanRequest jobPlanRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobPlanResponse response = api.postJobPlan(jobName, jobPlanRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobRevertTest() throws ApiException {
        String jobName = null;
        JobRevertRequest jobRevertRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobRegisterResponse response = api.postJobRevert(jobName, jobRevertRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobScalingRequestTest() throws ApiException {
        String jobName = null;
        ScalingRequest scalingRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobRegisterResponse response = api.postJobScalingRequest(jobName, scalingRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobStabilityTest() throws ApiException {
        String jobName = null;
        JobStabilityRequest jobStabilityRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobStabilityResponse response = api.postJobStability(jobName, jobStabilityRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobValidateRequestTest() throws ApiException {
        JobValidateRequest jobValidateRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobValidateResponse response = api.postJobValidateRequest(jobValidateRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registerJobTest() throws ApiException {
        JobRegisterRequest jobRegisterRequest = null;
        String region = null;
        String namespace = null;
        String xNomadToken = null;
        String idempotencyToken = null;
        JobRegisterResponse response = api.registerJob(jobRegisterRequest, region, namespace, xNomadToken, idempotencyToken);

        // TODO: test validations
    }
    
}
