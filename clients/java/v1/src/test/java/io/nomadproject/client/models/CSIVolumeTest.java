/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.Allocation;
import io.nomadproject.client.models.AllocationListStub;
import io.nomadproject.client.models.CSIMountOptions;
import io.nomadproject.client.models.CSITopology;
import io.nomadproject.client.models.CSIVolumeCapability;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CSIVolume
 */
public class CSIVolumeTest {
    private final CSIVolume model = new CSIVolume();

    /**
     * Model tests for CSIVolume
     */
    @Test
    public void testCSIVolume() {
        // TODO: test CSIVolume
    }

    /**
     * Test the property 'accessMode'
     */
    @Test
    public void accessModeTest() {
        // TODO: test accessMode
    }

    /**
     * Test the property 'allocations'
     */
    @Test
    public void allocationsTest() {
        // TODO: test allocations
    }

    /**
     * Test the property 'attachmentMode'
     */
    @Test
    public void attachmentModeTest() {
        // TODO: test attachmentMode
    }

    /**
     * Test the property 'capacity'
     */
    @Test
    public void capacityTest() {
        // TODO: test capacity
    }

    /**
     * Test the property 'cloneID'
     */
    @Test
    public void cloneIDTest() {
        // TODO: test cloneID
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'controllerRequired'
     */
    @Test
    public void controllerRequiredTest() {
        // TODO: test controllerRequired
    }

    /**
     * Test the property 'controllersExpected'
     */
    @Test
    public void controllersExpectedTest() {
        // TODO: test controllersExpected
    }

    /**
     * Test the property 'controllersHealthy'
     */
    @Test
    public void controllersHealthyTest() {
        // TODO: test controllersHealthy
    }

    /**
     * Test the property 'createIndex'
     */
    @Test
    public void createIndexTest() {
        // TODO: test createIndex
    }

    /**
     * Test the property 'externalID'
     */
    @Test
    public void externalIDTest() {
        // TODO: test externalID
    }

    /**
     * Test the property 'ID'
     */
    @Test
    public void IDTest() {
        // TODO: test ID
    }

    /**
     * Test the property 'modifyIndex'
     */
    @Test
    public void modifyIndexTest() {
        // TODO: test modifyIndex
    }

    /**
     * Test the property 'mountOptions'
     */
    @Test
    public void mountOptionsTest() {
        // TODO: test mountOptions
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'nodesExpected'
     */
    @Test
    public void nodesExpectedTest() {
        // TODO: test nodesExpected
    }

    /**
     * Test the property 'nodesHealthy'
     */
    @Test
    public void nodesHealthyTest() {
        // TODO: test nodesHealthy
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'pluginID'
     */
    @Test
    public void pluginIDTest() {
        // TODO: test pluginID
    }

    /**
     * Test the property 'provider'
     */
    @Test
    public void providerTest() {
        // TODO: test provider
    }

    /**
     * Test the property 'providerVersion'
     */
    @Test
    public void providerVersionTest() {
        // TODO: test providerVersion
    }

    /**
     * Test the property 'readAllocs'
     */
    @Test
    public void readAllocsTest() {
        // TODO: test readAllocs
    }

    /**
     * Test the property 'requestedCapabilities'
     */
    @Test
    public void requestedCapabilitiesTest() {
        // TODO: test requestedCapabilities
    }

    /**
     * Test the property 'requestedCapacityMax'
     */
    @Test
    public void requestedCapacityMaxTest() {
        // TODO: test requestedCapacityMax
    }

    /**
     * Test the property 'requestedCapacityMin'
     */
    @Test
    public void requestedCapacityMinTest() {
        // TODO: test requestedCapacityMin
    }

    /**
     * Test the property 'resourceExhausted'
     */
    @Test
    public void resourceExhaustedTest() {
        // TODO: test resourceExhausted
    }

    /**
     * Test the property 'schedulable'
     */
    @Test
    public void schedulableTest() {
        // TODO: test schedulable
    }

    /**
     * Test the property 'secrets'
     */
    @Test
    public void secretsTest() {
        // TODO: test secrets
    }

    /**
     * Test the property 'snapshotID'
     */
    @Test
    public void snapshotIDTest() {
        // TODO: test snapshotID
    }

    /**
     * Test the property 'topologies'
     */
    @Test
    public void topologiesTest() {
        // TODO: test topologies
    }

    /**
     * Test the property 'writeAllocs'
     */
    @Test
    public void writeAllocsTest() {
        // TODO: test writeAllocs
    }

}
