/*
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Vault
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Vault {
  public static final String SERIALIZED_NAME_CHANGE_MODE = "ChangeMode";
  @SerializedName(SERIALIZED_NAME_CHANGE_MODE)
  private String changeMode;

  public static final String SERIALIZED_NAME_CHANGE_SIGNAL = "ChangeSignal";
  @SerializedName(SERIALIZED_NAME_CHANGE_SIGNAL)
  private String changeSignal;

  public static final String SERIALIZED_NAME_ENV = "Env";
  @SerializedName(SERIALIZED_NAME_ENV)
  private Boolean env;

  public static final String SERIALIZED_NAME_NAMESPACE = "Namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_POLICIES = "Policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private List<String> policies = null;


  public Vault changeMode(String changeMode) {
    
    this.changeMode = changeMode;
    return this;
  }

   /**
   * Get changeMode
   * @return changeMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChangeMode() {
    return changeMode;
  }


  public void setChangeMode(String changeMode) {
    this.changeMode = changeMode;
  }


  public Vault changeSignal(String changeSignal) {
    
    this.changeSignal = changeSignal;
    return this;
  }

   /**
   * Get changeSignal
   * @return changeSignal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChangeSignal() {
    return changeSignal;
  }


  public void setChangeSignal(String changeSignal) {
    this.changeSignal = changeSignal;
  }


  public Vault env(Boolean env) {
    
    this.env = env;
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnv() {
    return env;
  }


  public void setEnv(Boolean env) {
    this.env = env;
  }


  public Vault namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public Vault policies(List<String> policies) {
    
    this.policies = policies;
    return this;
  }

  public Vault addPoliciesItem(String policiesItem) {
    if (this.policies == null) {
      this.policies = new ArrayList<String>();
    }
    this.policies.add(policiesItem);
    return this;
  }

   /**
   * Get policies
   * @return policies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPolicies() {
    return policies;
  }


  public void setPolicies(List<String> policies) {
    this.policies = policies;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vault vault = (Vault) o;
    return Objects.equals(this.changeMode, vault.changeMode) &&
        Objects.equals(this.changeSignal, vault.changeSignal) &&
        Objects.equals(this.env, vault.env) &&
        Objects.equals(this.namespace, vault.namespace) &&
        Objects.equals(this.policies, vault.policies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeMode, changeSignal, env, namespace, policies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vault {\n");
    sb.append("    changeMode: ").append(toIndentedString(changeMode)).append("\n");
    sb.append("    changeSignal: ").append(toIndentedString(changeSignal)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

