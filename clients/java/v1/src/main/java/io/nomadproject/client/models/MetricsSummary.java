/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.GaugeValue;
import io.nomadproject.client.models.PointValue;
import io.nomadproject.client.models.SampledValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MetricsSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MetricsSummary {
  public static final String SERIALIZED_NAME_COUNTERS = "Counters";
  @SerializedName(SERIALIZED_NAME_COUNTERS)
  private List<SampledValue> counters = null;

  public static final String SERIALIZED_NAME_GAUGES = "Gauges";
  @SerializedName(SERIALIZED_NAME_GAUGES)
  private List<GaugeValue> gauges = null;

  public static final String SERIALIZED_NAME_POINTS = "Points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private List<PointValue> points = null;

  public static final String SERIALIZED_NAME_SAMPLES = "Samples";
  @SerializedName(SERIALIZED_NAME_SAMPLES)
  private List<SampledValue> samples = null;

  public static final String SERIALIZED_NAME_TIMESTAMP = "Timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;


  public MetricsSummary counters(List<SampledValue> counters) {
    
    this.counters = counters;
    return this;
  }

  public MetricsSummary addCountersItem(SampledValue countersItem) {
    if (this.counters == null) {
      this.counters = new ArrayList<SampledValue>();
    }
    this.counters.add(countersItem);
    return this;
  }

   /**
   * Get counters
   * @return counters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SampledValue> getCounters() {
    return counters;
  }


  public void setCounters(List<SampledValue> counters) {
    this.counters = counters;
  }


  public MetricsSummary gauges(List<GaugeValue> gauges) {
    
    this.gauges = gauges;
    return this;
  }

  public MetricsSummary addGaugesItem(GaugeValue gaugesItem) {
    if (this.gauges == null) {
      this.gauges = new ArrayList<GaugeValue>();
    }
    this.gauges.add(gaugesItem);
    return this;
  }

   /**
   * Get gauges
   * @return gauges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GaugeValue> getGauges() {
    return gauges;
  }


  public void setGauges(List<GaugeValue> gauges) {
    this.gauges = gauges;
  }


  public MetricsSummary points(List<PointValue> points) {
    
    this.points = points;
    return this;
  }

  public MetricsSummary addPointsItem(PointValue pointsItem) {
    if (this.points == null) {
      this.points = new ArrayList<PointValue>();
    }
    this.points.add(pointsItem);
    return this;
  }

   /**
   * Get points
   * @return points
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PointValue> getPoints() {
    return points;
  }


  public void setPoints(List<PointValue> points) {
    this.points = points;
  }


  public MetricsSummary samples(List<SampledValue> samples) {
    
    this.samples = samples;
    return this;
  }

  public MetricsSummary addSamplesItem(SampledValue samplesItem) {
    if (this.samples == null) {
      this.samples = new ArrayList<SampledValue>();
    }
    this.samples.add(samplesItem);
    return this;
  }

   /**
   * Get samples
   * @return samples
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SampledValue> getSamples() {
    return samples;
  }


  public void setSamples(List<SampledValue> samples) {
    this.samples = samples;
  }


  public MetricsSummary timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetricsSummary metricsSummary = (MetricsSummary) o;
    return Objects.equals(this.counters, metricsSummary.counters) &&
        Objects.equals(this.gauges, metricsSummary.gauges) &&
        Objects.equals(this.points, metricsSummary.points) &&
        Objects.equals(this.samples, metricsSummary.samples) &&
        Objects.equals(this.timestamp, metricsSummary.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(counters, gauges, points, samples, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetricsSummary {\n");
    sb.append("    counters: ").append(toIndentedString(counters)).append("\n");
    sb.append("    gauges: ").append(toIndentedString(gauges)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    samples: ").append(toIndentedString(samples)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

