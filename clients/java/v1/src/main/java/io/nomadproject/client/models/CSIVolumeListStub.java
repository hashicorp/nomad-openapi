/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.CSITopology;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * CSIVolumeListStub
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CSIVolumeListStub {
  public static final String SERIALIZED_NAME_ACCESS_MODE = "AccessMode";
  @SerializedName(SERIALIZED_NAME_ACCESS_MODE)
  private String accessMode;

  public static final String SERIALIZED_NAME_ATTACHMENT_MODE = "AttachmentMode";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_MODE)
  private String attachmentMode;

  public static final String SERIALIZED_NAME_CONTROLLER_REQUIRED = "ControllerRequired";
  @SerializedName(SERIALIZED_NAME_CONTROLLER_REQUIRED)
  private Boolean controllerRequired;

  public static final String SERIALIZED_NAME_CONTROLLERS_EXPECTED = "ControllersExpected";
  @SerializedName(SERIALIZED_NAME_CONTROLLERS_EXPECTED)
  private Integer controllersExpected;

  public static final String SERIALIZED_NAME_CONTROLLERS_HEALTHY = "ControllersHealthy";
  @SerializedName(SERIALIZED_NAME_CONTROLLERS_HEALTHY)
  private Integer controllersHealthy;

  public static final String SERIALIZED_NAME_CREATE_INDEX = "CreateIndex";
  @SerializedName(SERIALIZED_NAME_CREATE_INDEX)
  private Integer createIndex;

  public static final String SERIALIZED_NAME_EXTERNAL_I_D = "ExternalID";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_I_D)
  private String externalID;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private String ID;

  public static final String SERIALIZED_NAME_MODIFY_INDEX = "ModifyIndex";
  @SerializedName(SERIALIZED_NAME_MODIFY_INDEX)
  private Integer modifyIndex;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAMESPACE = "Namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_NODES_EXPECTED = "NodesExpected";
  @SerializedName(SERIALIZED_NAME_NODES_EXPECTED)
  private Integer nodesExpected;

  public static final String SERIALIZED_NAME_NODES_HEALTHY = "NodesHealthy";
  @SerializedName(SERIALIZED_NAME_NODES_HEALTHY)
  private Integer nodesHealthy;

  public static final String SERIALIZED_NAME_PLUGIN_I_D = "PluginID";
  @SerializedName(SERIALIZED_NAME_PLUGIN_I_D)
  private String pluginID;

  public static final String SERIALIZED_NAME_PROVIDER = "Provider";
  @SerializedName(SERIALIZED_NAME_PROVIDER)
  private String provider;

  public static final String SERIALIZED_NAME_RESOURCE_EXHAUSTED = "ResourceExhausted";
  @SerializedName(SERIALIZED_NAME_RESOURCE_EXHAUSTED)
  private OffsetDateTime resourceExhausted;

  public static final String SERIALIZED_NAME_SCHEDULABLE = "Schedulable";
  @SerializedName(SERIALIZED_NAME_SCHEDULABLE)
  private Boolean schedulable;

  public static final String SERIALIZED_NAME_TOPOLOGIES = "Topologies";
  @SerializedName(SERIALIZED_NAME_TOPOLOGIES)
  private List<CSITopology> topologies = null;

  public CSIVolumeListStub() { 
  }

  public CSIVolumeListStub accessMode(String accessMode) {
    
    this.accessMode = accessMode;
    return this;
  }

   /**
   * Get accessMode
   * @return accessMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessMode() {
    return accessMode;
  }


  public void setAccessMode(String accessMode) {
    this.accessMode = accessMode;
  }


  public CSIVolumeListStub attachmentMode(String attachmentMode) {
    
    this.attachmentMode = attachmentMode;
    return this;
  }

   /**
   * Get attachmentMode
   * @return attachmentMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAttachmentMode() {
    return attachmentMode;
  }


  public void setAttachmentMode(String attachmentMode) {
    this.attachmentMode = attachmentMode;
  }


  public CSIVolumeListStub controllerRequired(Boolean controllerRequired) {
    
    this.controllerRequired = controllerRequired;
    return this;
  }

   /**
   * Get controllerRequired
   * @return controllerRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getControllerRequired() {
    return controllerRequired;
  }


  public void setControllerRequired(Boolean controllerRequired) {
    this.controllerRequired = controllerRequired;
  }


  public CSIVolumeListStub controllersExpected(Integer controllersExpected) {
    
    this.controllersExpected = controllersExpected;
    return this;
  }

   /**
   * Get controllersExpected
   * @return controllersExpected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getControllersExpected() {
    return controllersExpected;
  }


  public void setControllersExpected(Integer controllersExpected) {
    this.controllersExpected = controllersExpected;
  }


  public CSIVolumeListStub controllersHealthy(Integer controllersHealthy) {
    
    this.controllersHealthy = controllersHealthy;
    return this;
  }

   /**
   * Get controllersHealthy
   * @return controllersHealthy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getControllersHealthy() {
    return controllersHealthy;
  }


  public void setControllersHealthy(Integer controllersHealthy) {
    this.controllersHealthy = controllersHealthy;
  }


  public CSIVolumeListStub createIndex(Integer createIndex) {
    
    this.createIndex = createIndex;
    return this;
  }

   /**
   * Get createIndex
   * minimum: 0
   * maximum: 384
   * @return createIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateIndex() {
    return createIndex;
  }


  public void setCreateIndex(Integer createIndex) {
    this.createIndex = createIndex;
  }


  public CSIVolumeListStub externalID(String externalID) {
    
    this.externalID = externalID;
    return this;
  }

   /**
   * Get externalID
   * @return externalID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalID() {
    return externalID;
  }


  public void setExternalID(String externalID) {
    this.externalID = externalID;
  }


  public CSIVolumeListStub ID(String ID) {
    
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getID() {
    return ID;
  }


  public void setID(String ID) {
    this.ID = ID;
  }


  public CSIVolumeListStub modifyIndex(Integer modifyIndex) {
    
    this.modifyIndex = modifyIndex;
    return this;
  }

   /**
   * Get modifyIndex
   * minimum: 0
   * maximum: 384
   * @return modifyIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getModifyIndex() {
    return modifyIndex;
  }


  public void setModifyIndex(Integer modifyIndex) {
    this.modifyIndex = modifyIndex;
  }


  public CSIVolumeListStub name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CSIVolumeListStub namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public CSIVolumeListStub nodesExpected(Integer nodesExpected) {
    
    this.nodesExpected = nodesExpected;
    return this;
  }

   /**
   * Get nodesExpected
   * @return nodesExpected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodesExpected() {
    return nodesExpected;
  }


  public void setNodesExpected(Integer nodesExpected) {
    this.nodesExpected = nodesExpected;
  }


  public CSIVolumeListStub nodesHealthy(Integer nodesHealthy) {
    
    this.nodesHealthy = nodesHealthy;
    return this;
  }

   /**
   * Get nodesHealthy
   * @return nodesHealthy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodesHealthy() {
    return nodesHealthy;
  }


  public void setNodesHealthy(Integer nodesHealthy) {
    this.nodesHealthy = nodesHealthy;
  }


  public CSIVolumeListStub pluginID(String pluginID) {
    
    this.pluginID = pluginID;
    return this;
  }

   /**
   * Get pluginID
   * @return pluginID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPluginID() {
    return pluginID;
  }


  public void setPluginID(String pluginID) {
    this.pluginID = pluginID;
  }


  public CSIVolumeListStub provider(String provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProvider() {
    return provider;
  }


  public void setProvider(String provider) {
    this.provider = provider;
  }


  public CSIVolumeListStub resourceExhausted(OffsetDateTime resourceExhausted) {
    
    this.resourceExhausted = resourceExhausted;
    return this;
  }

   /**
   * Get resourceExhausted
   * @return resourceExhausted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getResourceExhausted() {
    return resourceExhausted;
  }


  public void setResourceExhausted(OffsetDateTime resourceExhausted) {
    this.resourceExhausted = resourceExhausted;
  }


  public CSIVolumeListStub schedulable(Boolean schedulable) {
    
    this.schedulable = schedulable;
    return this;
  }

   /**
   * Get schedulable
   * @return schedulable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSchedulable() {
    return schedulable;
  }


  public void setSchedulable(Boolean schedulable) {
    this.schedulable = schedulable;
  }


  public CSIVolumeListStub topologies(List<CSITopology> topologies) {
    
    this.topologies = topologies;
    return this;
  }

  public CSIVolumeListStub addTopologiesItem(CSITopology topologiesItem) {
    if (this.topologies == null) {
      this.topologies = new ArrayList<CSITopology>();
    }
    this.topologies.add(topologiesItem);
    return this;
  }

   /**
   * Get topologies
   * @return topologies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CSITopology> getTopologies() {
    return topologies;
  }


  public void setTopologies(List<CSITopology> topologies) {
    this.topologies = topologies;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CSIVolumeListStub csIVolumeListStub = (CSIVolumeListStub) o;
    return Objects.equals(this.accessMode, csIVolumeListStub.accessMode) &&
        Objects.equals(this.attachmentMode, csIVolumeListStub.attachmentMode) &&
        Objects.equals(this.controllerRequired, csIVolumeListStub.controllerRequired) &&
        Objects.equals(this.controllersExpected, csIVolumeListStub.controllersExpected) &&
        Objects.equals(this.controllersHealthy, csIVolumeListStub.controllersHealthy) &&
        Objects.equals(this.createIndex, csIVolumeListStub.createIndex) &&
        Objects.equals(this.externalID, csIVolumeListStub.externalID) &&
        Objects.equals(this.ID, csIVolumeListStub.ID) &&
        Objects.equals(this.modifyIndex, csIVolumeListStub.modifyIndex) &&
        Objects.equals(this.name, csIVolumeListStub.name) &&
        Objects.equals(this.namespace, csIVolumeListStub.namespace) &&
        Objects.equals(this.nodesExpected, csIVolumeListStub.nodesExpected) &&
        Objects.equals(this.nodesHealthy, csIVolumeListStub.nodesHealthy) &&
        Objects.equals(this.pluginID, csIVolumeListStub.pluginID) &&
        Objects.equals(this.provider, csIVolumeListStub.provider) &&
        Objects.equals(this.resourceExhausted, csIVolumeListStub.resourceExhausted) &&
        Objects.equals(this.schedulable, csIVolumeListStub.schedulable) &&
        Objects.equals(this.topologies, csIVolumeListStub.topologies);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessMode, attachmentMode, controllerRequired, controllersExpected, controllersHealthy, createIndex, externalID, ID, modifyIndex, name, namespace, nodesExpected, nodesHealthy, pluginID, provider, resourceExhausted, schedulable, topologies);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CSIVolumeListStub {\n");
    sb.append("    accessMode: ").append(toIndentedString(accessMode)).append("\n");
    sb.append("    attachmentMode: ").append(toIndentedString(attachmentMode)).append("\n");
    sb.append("    controllerRequired: ").append(toIndentedString(controllerRequired)).append("\n");
    sb.append("    controllersExpected: ").append(toIndentedString(controllersExpected)).append("\n");
    sb.append("    controllersHealthy: ").append(toIndentedString(controllersHealthy)).append("\n");
    sb.append("    createIndex: ").append(toIndentedString(createIndex)).append("\n");
    sb.append("    externalID: ").append(toIndentedString(externalID)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    modifyIndex: ").append(toIndentedString(modifyIndex)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    nodesExpected: ").append(toIndentedString(nodesExpected)).append("\n");
    sb.append("    nodesHealthy: ").append(toIndentedString(nodesHealthy)).append("\n");
    sb.append("    pluginID: ").append(toIndentedString(pluginID)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    resourceExhausted: ").append(toIndentedString(resourceExhausted)).append("\n");
    sb.append("    schedulable: ").append(toIndentedString(schedulable)).append("\n");
    sb.append("    topologies: ").append(toIndentedString(topologies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

