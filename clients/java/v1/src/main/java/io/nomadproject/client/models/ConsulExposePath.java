/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConsulExposePath
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConsulExposePath {
  public static final String SERIALIZED_NAME_LISTENER_PORT = "ListenerPort";
  @SerializedName(SERIALIZED_NAME_LISTENER_PORT)
  private String listenerPort;

  public static final String SERIALIZED_NAME_LOCAL_PATH_PORT = "LocalPathPort";
  @SerializedName(SERIALIZED_NAME_LOCAL_PATH_PORT)
  private Integer localPathPort;

  public static final String SERIALIZED_NAME_PATH = "Path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_PROTOCOL = "Protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private String protocol;

  public ConsulExposePath() { 
  }

  public ConsulExposePath listenerPort(String listenerPort) {
    
    this.listenerPort = listenerPort;
    return this;
  }

   /**
   * Get listenerPort
   * @return listenerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getListenerPort() {
    return listenerPort;
  }


  public void setListenerPort(String listenerPort) {
    this.listenerPort = listenerPort;
  }


  public ConsulExposePath localPathPort(Integer localPathPort) {
    
    this.localPathPort = localPathPort;
    return this;
  }

   /**
   * Get localPathPort
   * @return localPathPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLocalPathPort() {
    return localPathPort;
  }


  public void setLocalPathPort(Integer localPathPort) {
    this.localPathPort = localPathPort;
  }


  public ConsulExposePath path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public ConsulExposePath protocol(String protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProtocol() {
    return protocol;
  }


  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsulExposePath consulExposePath = (ConsulExposePath) o;
    return Objects.equals(this.listenerPort, consulExposePath.listenerPort) &&
        Objects.equals(this.localPathPort, consulExposePath.localPathPort) &&
        Objects.equals(this.path, consulExposePath.path) &&
        Objects.equals(this.protocol, consulExposePath.protocol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listenerPort, localPathPort, path, protocol);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsulExposePath {\n");
    sb.append("    listenerPort: ").append(toIndentedString(listenerPort)).append("\n");
    sb.append("    localPathPort: ").append(toIndentedString(localPathPort)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

