/*
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.Affinity;
import io.nomadproject.client.models.Constraint;
import io.nomadproject.client.models.DispatchPayloadConfig;
import io.nomadproject.client.models.LogConfig;
import io.nomadproject.client.models.Resources;
import io.nomadproject.client.models.RestartPolicy;
import io.nomadproject.client.models.ScalingPolicy;
import io.nomadproject.client.models.Service;
import io.nomadproject.client.models.TaskArtifact;
import io.nomadproject.client.models.TaskCSIPluginConfig;
import io.nomadproject.client.models.TaskLifecycle;
import io.nomadproject.client.models.Template;
import io.nomadproject.client.models.Vault;
import io.nomadproject.client.models.VolumeMount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Task
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Task {
  public static final String SERIALIZED_NAME_AFFINITIES = "Affinities";
  @SerializedName(SERIALIZED_NAME_AFFINITIES)
  private List<Affinity> affinities = null;

  public static final String SERIALIZED_NAME_ARTIFACTS = "Artifacts";
  @SerializedName(SERIALIZED_NAME_ARTIFACTS)
  private List<TaskArtifact> artifacts = null;

  public static final String SERIALIZED_NAME_CS_I_PLUGIN_CONFIG = "CSIPluginConfig";
  @SerializedName(SERIALIZED_NAME_CS_I_PLUGIN_CONFIG)
  private TaskCSIPluginConfig csIPluginConfig;

  public static final String SERIALIZED_NAME_CONFIG = "Config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private Map<String, Object> config = null;

  public static final String SERIALIZED_NAME_CONSTRAINTS = "Constraints";
  @SerializedName(SERIALIZED_NAME_CONSTRAINTS)
  private List<Constraint> constraints = null;

  public static final String SERIALIZED_NAME_DISPATCH_PAYLOAD = "DispatchPayload";
  @SerializedName(SERIALIZED_NAME_DISPATCH_PAYLOAD)
  private DispatchPayloadConfig dispatchPayload;

  public static final String SERIALIZED_NAME_DRIVER = "Driver";
  @SerializedName(SERIALIZED_NAME_DRIVER)
  private String driver;

  public static final String SERIALIZED_NAME_ENV = "Env";
  @SerializedName(SERIALIZED_NAME_ENV)
  private Map<String, String> env = null;

  public static final String SERIALIZED_NAME_KILL_SIGNAL = "KillSignal";
  @SerializedName(SERIALIZED_NAME_KILL_SIGNAL)
  private String killSignal;

  public static final String SERIALIZED_NAME_KILL_TIMEOUT = "KillTimeout";
  @SerializedName(SERIALIZED_NAME_KILL_TIMEOUT)
  private Long killTimeout;

  public static final String SERIALIZED_NAME_KIND = "Kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LEADER = "Leader";
  @SerializedName(SERIALIZED_NAME_LEADER)
  private Boolean leader;

  public static final String SERIALIZED_NAME_LIFECYCLE = "Lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private TaskLifecycle lifecycle;

  public static final String SERIALIZED_NAME_LOG_CONFIG = "LogConfig";
  @SerializedName(SERIALIZED_NAME_LOG_CONFIG)
  private LogConfig logConfig;

  public static final String SERIALIZED_NAME_META = "Meta";
  @SerializedName(SERIALIZED_NAME_META)
  private Map<String, String> meta = null;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RESOURCES = "Resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private Resources resources;

  public static final String SERIALIZED_NAME_RESTART_POLICY = "RestartPolicy";
  @SerializedName(SERIALIZED_NAME_RESTART_POLICY)
  private RestartPolicy restartPolicy;

  public static final String SERIALIZED_NAME_SCALING_POLICIES = "ScalingPolicies";
  @SerializedName(SERIALIZED_NAME_SCALING_POLICIES)
  private List<ScalingPolicy> scalingPolicies = null;

  public static final String SERIALIZED_NAME_SERVICES = "Services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private List<Service> services = null;

  public static final String SERIALIZED_NAME_SHUTDOWN_DELAY = "ShutdownDelay";
  @SerializedName(SERIALIZED_NAME_SHUTDOWN_DELAY)
  private Long shutdownDelay;

  public static final String SERIALIZED_NAME_TEMPLATES = "Templates";
  @SerializedName(SERIALIZED_NAME_TEMPLATES)
  private List<Template> templates = null;

  public static final String SERIALIZED_NAME_USER = "User";
  @SerializedName(SERIALIZED_NAME_USER)
  private String user;

  public static final String SERIALIZED_NAME_VAULT = "Vault";
  @SerializedName(SERIALIZED_NAME_VAULT)
  private Vault vault;

  public static final String SERIALIZED_NAME_VOLUME_MOUNTS = "VolumeMounts";
  @SerializedName(SERIALIZED_NAME_VOLUME_MOUNTS)
  private List<VolumeMount> volumeMounts = null;


  public Task affinities(List<Affinity> affinities) {
    
    this.affinities = affinities;
    return this;
  }

  public Task addAffinitiesItem(Affinity affinitiesItem) {
    if (this.affinities == null) {
      this.affinities = new ArrayList<Affinity>();
    }
    this.affinities.add(affinitiesItem);
    return this;
  }

   /**
   * Get affinities
   * @return affinities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Affinity> getAffinities() {
    return affinities;
  }


  public void setAffinities(List<Affinity> affinities) {
    this.affinities = affinities;
  }


  public Task artifacts(List<TaskArtifact> artifacts) {
    
    this.artifacts = artifacts;
    return this;
  }

  public Task addArtifactsItem(TaskArtifact artifactsItem) {
    if (this.artifacts == null) {
      this.artifacts = new ArrayList<TaskArtifact>();
    }
    this.artifacts.add(artifactsItem);
    return this;
  }

   /**
   * Get artifacts
   * @return artifacts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TaskArtifact> getArtifacts() {
    return artifacts;
  }


  public void setArtifacts(List<TaskArtifact> artifacts) {
    this.artifacts = artifacts;
  }


  public Task csIPluginConfig(TaskCSIPluginConfig csIPluginConfig) {
    
    this.csIPluginConfig = csIPluginConfig;
    return this;
  }

   /**
   * Get csIPluginConfig
   * @return csIPluginConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TaskCSIPluginConfig getCsIPluginConfig() {
    return csIPluginConfig;
  }


  public void setCsIPluginConfig(TaskCSIPluginConfig csIPluginConfig) {
    this.csIPluginConfig = csIPluginConfig;
  }


  public Task config(Map<String, Object> config) {
    
    this.config = config;
    return this;
  }

  public Task putConfigItem(String key, Object configItem) {
    if (this.config == null) {
      this.config = new HashMap<String, Object>();
    }
    this.config.put(key, configItem);
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getConfig() {
    return config;
  }


  public void setConfig(Map<String, Object> config) {
    this.config = config;
  }


  public Task constraints(List<Constraint> constraints) {
    
    this.constraints = constraints;
    return this;
  }

  public Task addConstraintsItem(Constraint constraintsItem) {
    if (this.constraints == null) {
      this.constraints = new ArrayList<Constraint>();
    }
    this.constraints.add(constraintsItem);
    return this;
  }

   /**
   * Get constraints
   * @return constraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Constraint> getConstraints() {
    return constraints;
  }


  public void setConstraints(List<Constraint> constraints) {
    this.constraints = constraints;
  }


  public Task dispatchPayload(DispatchPayloadConfig dispatchPayload) {
    
    this.dispatchPayload = dispatchPayload;
    return this;
  }

   /**
   * Get dispatchPayload
   * @return dispatchPayload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DispatchPayloadConfig getDispatchPayload() {
    return dispatchPayload;
  }


  public void setDispatchPayload(DispatchPayloadConfig dispatchPayload) {
    this.dispatchPayload = dispatchPayload;
  }


  public Task driver(String driver) {
    
    this.driver = driver;
    return this;
  }

   /**
   * Get driver
   * @return driver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDriver() {
    return driver;
  }


  public void setDriver(String driver) {
    this.driver = driver;
  }


  public Task env(Map<String, String> env) {
    
    this.env = env;
    return this;
  }

  public Task putEnvItem(String key, String envItem) {
    if (this.env == null) {
      this.env = new HashMap<String, String>();
    }
    this.env.put(key, envItem);
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getEnv() {
    return env;
  }


  public void setEnv(Map<String, String> env) {
    this.env = env;
  }


  public Task killSignal(String killSignal) {
    
    this.killSignal = killSignal;
    return this;
  }

   /**
   * Get killSignal
   * @return killSignal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKillSignal() {
    return killSignal;
  }


  public void setKillSignal(String killSignal) {
    this.killSignal = killSignal;
  }


  public Task killTimeout(Long killTimeout) {
    
    this.killTimeout = killTimeout;
    return this;
  }

   /**
   * Get killTimeout
   * @return killTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getKillTimeout() {
    return killTimeout;
  }


  public void setKillTimeout(Long killTimeout) {
    this.killTimeout = killTimeout;
  }


  public Task kind(String kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKind() {
    return kind;
  }


  public void setKind(String kind) {
    this.kind = kind;
  }


  public Task leader(Boolean leader) {
    
    this.leader = leader;
    return this;
  }

   /**
   * Get leader
   * @return leader
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLeader() {
    return leader;
  }


  public void setLeader(Boolean leader) {
    this.leader = leader;
  }


  public Task lifecycle(TaskLifecycle lifecycle) {
    
    this.lifecycle = lifecycle;
    return this;
  }

   /**
   * Get lifecycle
   * @return lifecycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TaskLifecycle getLifecycle() {
    return lifecycle;
  }


  public void setLifecycle(TaskLifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public Task logConfig(LogConfig logConfig) {
    
    this.logConfig = logConfig;
    return this;
  }

   /**
   * Get logConfig
   * @return logConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LogConfig getLogConfig() {
    return logConfig;
  }


  public void setLogConfig(LogConfig logConfig) {
    this.logConfig = logConfig;
  }


  public Task meta(Map<String, String> meta) {
    
    this.meta = meta;
    return this;
  }

  public Task putMetaItem(String key, String metaItem) {
    if (this.meta == null) {
      this.meta = new HashMap<String, String>();
    }
    this.meta.put(key, metaItem);
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getMeta() {
    return meta;
  }


  public void setMeta(Map<String, String> meta) {
    this.meta = meta;
  }


  public Task name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Task resources(Resources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Resources getResources() {
    return resources;
  }


  public void setResources(Resources resources) {
    this.resources = resources;
  }


  public Task restartPolicy(RestartPolicy restartPolicy) {
    
    this.restartPolicy = restartPolicy;
    return this;
  }

   /**
   * Get restartPolicy
   * @return restartPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RestartPolicy getRestartPolicy() {
    return restartPolicy;
  }


  public void setRestartPolicy(RestartPolicy restartPolicy) {
    this.restartPolicy = restartPolicy;
  }


  public Task scalingPolicies(List<ScalingPolicy> scalingPolicies) {
    
    this.scalingPolicies = scalingPolicies;
    return this;
  }

  public Task addScalingPoliciesItem(ScalingPolicy scalingPoliciesItem) {
    if (this.scalingPolicies == null) {
      this.scalingPolicies = new ArrayList<ScalingPolicy>();
    }
    this.scalingPolicies.add(scalingPoliciesItem);
    return this;
  }

   /**
   * Get scalingPolicies
   * @return scalingPolicies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ScalingPolicy> getScalingPolicies() {
    return scalingPolicies;
  }


  public void setScalingPolicies(List<ScalingPolicy> scalingPolicies) {
    this.scalingPolicies = scalingPolicies;
  }


  public Task services(List<Service> services) {
    
    this.services = services;
    return this;
  }

  public Task addServicesItem(Service servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<Service>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Service> getServices() {
    return services;
  }


  public void setServices(List<Service> services) {
    this.services = services;
  }


  public Task shutdownDelay(Long shutdownDelay) {
    
    this.shutdownDelay = shutdownDelay;
    return this;
  }

   /**
   * Get shutdownDelay
   * @return shutdownDelay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getShutdownDelay() {
    return shutdownDelay;
  }


  public void setShutdownDelay(Long shutdownDelay) {
    this.shutdownDelay = shutdownDelay;
  }


  public Task templates(List<Template> templates) {
    
    this.templates = templates;
    return this;
  }

  public Task addTemplatesItem(Template templatesItem) {
    if (this.templates == null) {
      this.templates = new ArrayList<Template>();
    }
    this.templates.add(templatesItem);
    return this;
  }

   /**
   * Get templates
   * @return templates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Template> getTemplates() {
    return templates;
  }


  public void setTemplates(List<Template> templates) {
    this.templates = templates;
  }


  public Task user(String user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUser() {
    return user;
  }


  public void setUser(String user) {
    this.user = user;
  }


  public Task vault(Vault vault) {
    
    this.vault = vault;
    return this;
  }

   /**
   * Get vault
   * @return vault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Vault getVault() {
    return vault;
  }


  public void setVault(Vault vault) {
    this.vault = vault;
  }


  public Task volumeMounts(List<VolumeMount> volumeMounts) {
    
    this.volumeMounts = volumeMounts;
    return this;
  }

  public Task addVolumeMountsItem(VolumeMount volumeMountsItem) {
    if (this.volumeMounts == null) {
      this.volumeMounts = new ArrayList<VolumeMount>();
    }
    this.volumeMounts.add(volumeMountsItem);
    return this;
  }

   /**
   * Get volumeMounts
   * @return volumeMounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<VolumeMount> getVolumeMounts() {
    return volumeMounts;
  }


  public void setVolumeMounts(List<VolumeMount> volumeMounts) {
    this.volumeMounts = volumeMounts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Task task = (Task) o;
    return Objects.equals(this.affinities, task.affinities) &&
        Objects.equals(this.artifacts, task.artifacts) &&
        Objects.equals(this.csIPluginConfig, task.csIPluginConfig) &&
        Objects.equals(this.config, task.config) &&
        Objects.equals(this.constraints, task.constraints) &&
        Objects.equals(this.dispatchPayload, task.dispatchPayload) &&
        Objects.equals(this.driver, task.driver) &&
        Objects.equals(this.env, task.env) &&
        Objects.equals(this.killSignal, task.killSignal) &&
        Objects.equals(this.killTimeout, task.killTimeout) &&
        Objects.equals(this.kind, task.kind) &&
        Objects.equals(this.leader, task.leader) &&
        Objects.equals(this.lifecycle, task.lifecycle) &&
        Objects.equals(this.logConfig, task.logConfig) &&
        Objects.equals(this.meta, task.meta) &&
        Objects.equals(this.name, task.name) &&
        Objects.equals(this.resources, task.resources) &&
        Objects.equals(this.restartPolicy, task.restartPolicy) &&
        Objects.equals(this.scalingPolicies, task.scalingPolicies) &&
        Objects.equals(this.services, task.services) &&
        Objects.equals(this.shutdownDelay, task.shutdownDelay) &&
        Objects.equals(this.templates, task.templates) &&
        Objects.equals(this.user, task.user) &&
        Objects.equals(this.vault, task.vault) &&
        Objects.equals(this.volumeMounts, task.volumeMounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinities, artifacts, csIPluginConfig, config, constraints, dispatchPayload, driver, env, killSignal, killTimeout, kind, leader, lifecycle, logConfig, meta, name, resources, restartPolicy, scalingPolicies, services, shutdownDelay, templates, user, vault, volumeMounts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Task {\n");
    sb.append("    affinities: ").append(toIndentedString(affinities)).append("\n");
    sb.append("    artifacts: ").append(toIndentedString(artifacts)).append("\n");
    sb.append("    csIPluginConfig: ").append(toIndentedString(csIPluginConfig)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    dispatchPayload: ").append(toIndentedString(dispatchPayload)).append("\n");
    sb.append("    driver: ").append(toIndentedString(driver)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    killSignal: ").append(toIndentedString(killSignal)).append("\n");
    sb.append("    killTimeout: ").append(toIndentedString(killTimeout)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    leader: ").append(toIndentedString(leader)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    logConfig: ").append(toIndentedString(logConfig)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    restartPolicy: ").append(toIndentedString(restartPolicy)).append("\n");
    sb.append("    scalingPolicies: ").append(toIndentedString(scalingPolicies)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    shutdownDelay: ").append(toIndentedString(shutdownDelay)).append("\n");
    sb.append("    templates: ").append(toIndentedString(templates)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    vault: ").append(toIndentedString(vault)).append("\n");
    sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

