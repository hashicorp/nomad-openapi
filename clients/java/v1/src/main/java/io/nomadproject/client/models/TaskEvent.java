/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * TaskEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TaskEvent {
  public static final String SERIALIZED_NAME_DETAILS = "Details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private Map<String, String> details = null;

  public static final String SERIALIZED_NAME_DISK_LIMIT = "DiskLimit";
  @SerializedName(SERIALIZED_NAME_DISK_LIMIT)
  private Long diskLimit;

  public static final String SERIALIZED_NAME_DISK_SIZE = "DiskSize";
  @SerializedName(SERIALIZED_NAME_DISK_SIZE)
  private Long diskSize;

  public static final String SERIALIZED_NAME_DISPLAY_MESSAGE = "DisplayMessage";
  @SerializedName(SERIALIZED_NAME_DISPLAY_MESSAGE)
  private String displayMessage;

  public static final String SERIALIZED_NAME_DOWNLOAD_ERROR = "DownloadError";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_ERROR)
  private String downloadError;

  public static final String SERIALIZED_NAME_DRIVER_ERROR = "DriverError";
  @SerializedName(SERIALIZED_NAME_DRIVER_ERROR)
  private String driverError;

  public static final String SERIALIZED_NAME_DRIVER_MESSAGE = "DriverMessage";
  @SerializedName(SERIALIZED_NAME_DRIVER_MESSAGE)
  private String driverMessage;

  public static final String SERIALIZED_NAME_EXIT_CODE = "ExitCode";
  @SerializedName(SERIALIZED_NAME_EXIT_CODE)
  private Integer exitCode;

  public static final String SERIALIZED_NAME_FAILED_SIBLING = "FailedSibling";
  @SerializedName(SERIALIZED_NAME_FAILED_SIBLING)
  private String failedSibling;

  public static final String SERIALIZED_NAME_FAILS_TASK = "FailsTask";
  @SerializedName(SERIALIZED_NAME_FAILS_TASK)
  private Boolean failsTask;

  public static final String SERIALIZED_NAME_GENERIC_SOURCE = "GenericSource";
  @SerializedName(SERIALIZED_NAME_GENERIC_SOURCE)
  private String genericSource;

  public static final String SERIALIZED_NAME_KILL_ERROR = "KillError";
  @SerializedName(SERIALIZED_NAME_KILL_ERROR)
  private String killError;

  public static final String SERIALIZED_NAME_KILL_REASON = "KillReason";
  @SerializedName(SERIALIZED_NAME_KILL_REASON)
  private String killReason;

  public static final String SERIALIZED_NAME_KILL_TIMEOUT = "KillTimeout";
  @SerializedName(SERIALIZED_NAME_KILL_TIMEOUT)
  private Long killTimeout;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_RESTART_REASON = "RestartReason";
  @SerializedName(SERIALIZED_NAME_RESTART_REASON)
  private String restartReason;

  public static final String SERIALIZED_NAME_SETUP_ERROR = "SetupError";
  @SerializedName(SERIALIZED_NAME_SETUP_ERROR)
  private String setupError;

  public static final String SERIALIZED_NAME_SIGNAL = "Signal";
  @SerializedName(SERIALIZED_NAME_SIGNAL)
  private Integer signal;

  public static final String SERIALIZED_NAME_START_DELAY = "StartDelay";
  @SerializedName(SERIALIZED_NAME_START_DELAY)
  private Long startDelay;

  public static final String SERIALIZED_NAME_TASK_SIGNAL = "TaskSignal";
  @SerializedName(SERIALIZED_NAME_TASK_SIGNAL)
  private String taskSignal;

  public static final String SERIALIZED_NAME_TASK_SIGNAL_REASON = "TaskSignalReason";
  @SerializedName(SERIALIZED_NAME_TASK_SIGNAL_REASON)
  private String taskSignalReason;

  public static final String SERIALIZED_NAME_TIME = "Time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Long time;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VALIDATION_ERROR = "ValidationError";
  @SerializedName(SERIALIZED_NAME_VALIDATION_ERROR)
  private String validationError;

  public static final String SERIALIZED_NAME_VAULT_ERROR = "VaultError";
  @SerializedName(SERIALIZED_NAME_VAULT_ERROR)
  private String vaultError;

  public TaskEvent() { 
  }

  public TaskEvent details(Map<String, String> details) {
    
    this.details = details;
    return this;
  }

  public TaskEvent putDetailsItem(String key, String detailsItem) {
    if (this.details == null) {
      this.details = new HashMap<String, String>();
    }
    this.details.put(key, detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getDetails() {
    return details;
  }


  public void setDetails(Map<String, String> details) {
    this.details = details;
  }


  public TaskEvent diskLimit(Long diskLimit) {
    
    this.diskLimit = diskLimit;
    return this;
  }

   /**
   * Get diskLimit
   * @return diskLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDiskLimit() {
    return diskLimit;
  }


  public void setDiskLimit(Long diskLimit) {
    this.diskLimit = diskLimit;
  }


  public TaskEvent diskSize(Long diskSize) {
    
    this.diskSize = diskSize;
    return this;
  }

   /**
   * Get diskSize
   * @return diskSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDiskSize() {
    return diskSize;
  }


  public void setDiskSize(Long diskSize) {
    this.diskSize = diskSize;
  }


  public TaskEvent displayMessage(String displayMessage) {
    
    this.displayMessage = displayMessage;
    return this;
  }

   /**
   * Get displayMessage
   * @return displayMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayMessage() {
    return displayMessage;
  }


  public void setDisplayMessage(String displayMessage) {
    this.displayMessage = displayMessage;
  }


  public TaskEvent downloadError(String downloadError) {
    
    this.downloadError = downloadError;
    return this;
  }

   /**
   * Get downloadError
   * @return downloadError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDownloadError() {
    return downloadError;
  }


  public void setDownloadError(String downloadError) {
    this.downloadError = downloadError;
  }


  public TaskEvent driverError(String driverError) {
    
    this.driverError = driverError;
    return this;
  }

   /**
   * Get driverError
   * @return driverError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDriverError() {
    return driverError;
  }


  public void setDriverError(String driverError) {
    this.driverError = driverError;
  }


  public TaskEvent driverMessage(String driverMessage) {
    
    this.driverMessage = driverMessage;
    return this;
  }

   /**
   * Get driverMessage
   * @return driverMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDriverMessage() {
    return driverMessage;
  }


  public void setDriverMessage(String driverMessage) {
    this.driverMessage = driverMessage;
  }


  public TaskEvent exitCode(Integer exitCode) {
    
    this.exitCode = exitCode;
    return this;
  }

   /**
   * Get exitCode
   * @return exitCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getExitCode() {
    return exitCode;
  }


  public void setExitCode(Integer exitCode) {
    this.exitCode = exitCode;
  }


  public TaskEvent failedSibling(String failedSibling) {
    
    this.failedSibling = failedSibling;
    return this;
  }

   /**
   * Get failedSibling
   * @return failedSibling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFailedSibling() {
    return failedSibling;
  }


  public void setFailedSibling(String failedSibling) {
    this.failedSibling = failedSibling;
  }


  public TaskEvent failsTask(Boolean failsTask) {
    
    this.failsTask = failsTask;
    return this;
  }

   /**
   * Get failsTask
   * @return failsTask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFailsTask() {
    return failsTask;
  }


  public void setFailsTask(Boolean failsTask) {
    this.failsTask = failsTask;
  }


  public TaskEvent genericSource(String genericSource) {
    
    this.genericSource = genericSource;
    return this;
  }

   /**
   * Get genericSource
   * @return genericSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGenericSource() {
    return genericSource;
  }


  public void setGenericSource(String genericSource) {
    this.genericSource = genericSource;
  }


  public TaskEvent killError(String killError) {
    
    this.killError = killError;
    return this;
  }

   /**
   * Get killError
   * @return killError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKillError() {
    return killError;
  }


  public void setKillError(String killError) {
    this.killError = killError;
  }


  public TaskEvent killReason(String killReason) {
    
    this.killReason = killReason;
    return this;
  }

   /**
   * Get killReason
   * @return killReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKillReason() {
    return killReason;
  }


  public void setKillReason(String killReason) {
    this.killReason = killReason;
  }


  public TaskEvent killTimeout(Long killTimeout) {
    
    this.killTimeout = killTimeout;
    return this;
  }

   /**
   * Get killTimeout
   * @return killTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getKillTimeout() {
    return killTimeout;
  }


  public void setKillTimeout(Long killTimeout) {
    this.killTimeout = killTimeout;
  }


  public TaskEvent message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public TaskEvent restartReason(String restartReason) {
    
    this.restartReason = restartReason;
    return this;
  }

   /**
   * Get restartReason
   * @return restartReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRestartReason() {
    return restartReason;
  }


  public void setRestartReason(String restartReason) {
    this.restartReason = restartReason;
  }


  public TaskEvent setupError(String setupError) {
    
    this.setupError = setupError;
    return this;
  }

   /**
   * Get setupError
   * @return setupError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSetupError() {
    return setupError;
  }


  public void setSetupError(String setupError) {
    this.setupError = setupError;
  }


  public TaskEvent signal(Integer signal) {
    
    this.signal = signal;
    return this;
  }

   /**
   * Get signal
   * @return signal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSignal() {
    return signal;
  }


  public void setSignal(Integer signal) {
    this.signal = signal;
  }


  public TaskEvent startDelay(Long startDelay) {
    
    this.startDelay = startDelay;
    return this;
  }

   /**
   * Get startDelay
   * @return startDelay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getStartDelay() {
    return startDelay;
  }


  public void setStartDelay(Long startDelay) {
    this.startDelay = startDelay;
  }


  public TaskEvent taskSignal(String taskSignal) {
    
    this.taskSignal = taskSignal;
    return this;
  }

   /**
   * Get taskSignal
   * @return taskSignal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaskSignal() {
    return taskSignal;
  }


  public void setTaskSignal(String taskSignal) {
    this.taskSignal = taskSignal;
  }


  public TaskEvent taskSignalReason(String taskSignalReason) {
    
    this.taskSignalReason = taskSignalReason;
    return this;
  }

   /**
   * Get taskSignalReason
   * @return taskSignalReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaskSignalReason() {
    return taskSignalReason;
  }


  public void setTaskSignalReason(String taskSignalReason) {
    this.taskSignalReason = taskSignalReason;
  }


  public TaskEvent time(Long time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getTime() {
    return time;
  }


  public void setTime(Long time) {
    this.time = time;
  }


  public TaskEvent type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public TaskEvent validationError(String validationError) {
    
    this.validationError = validationError;
    return this;
  }

   /**
   * Get validationError
   * @return validationError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getValidationError() {
    return validationError;
  }


  public void setValidationError(String validationError) {
    this.validationError = validationError;
  }


  public TaskEvent vaultError(String vaultError) {
    
    this.vaultError = vaultError;
    return this;
  }

   /**
   * Get vaultError
   * @return vaultError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVaultError() {
    return vaultError;
  }


  public void setVaultError(String vaultError) {
    this.vaultError = vaultError;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskEvent taskEvent = (TaskEvent) o;
    return Objects.equals(this.details, taskEvent.details) &&
        Objects.equals(this.diskLimit, taskEvent.diskLimit) &&
        Objects.equals(this.diskSize, taskEvent.diskSize) &&
        Objects.equals(this.displayMessage, taskEvent.displayMessage) &&
        Objects.equals(this.downloadError, taskEvent.downloadError) &&
        Objects.equals(this.driverError, taskEvent.driverError) &&
        Objects.equals(this.driverMessage, taskEvent.driverMessage) &&
        Objects.equals(this.exitCode, taskEvent.exitCode) &&
        Objects.equals(this.failedSibling, taskEvent.failedSibling) &&
        Objects.equals(this.failsTask, taskEvent.failsTask) &&
        Objects.equals(this.genericSource, taskEvent.genericSource) &&
        Objects.equals(this.killError, taskEvent.killError) &&
        Objects.equals(this.killReason, taskEvent.killReason) &&
        Objects.equals(this.killTimeout, taskEvent.killTimeout) &&
        Objects.equals(this.message, taskEvent.message) &&
        Objects.equals(this.restartReason, taskEvent.restartReason) &&
        Objects.equals(this.setupError, taskEvent.setupError) &&
        Objects.equals(this.signal, taskEvent.signal) &&
        Objects.equals(this.startDelay, taskEvent.startDelay) &&
        Objects.equals(this.taskSignal, taskEvent.taskSignal) &&
        Objects.equals(this.taskSignalReason, taskEvent.taskSignalReason) &&
        Objects.equals(this.time, taskEvent.time) &&
        Objects.equals(this.type, taskEvent.type) &&
        Objects.equals(this.validationError, taskEvent.validationError) &&
        Objects.equals(this.vaultError, taskEvent.vaultError);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, diskLimit, diskSize, displayMessage, downloadError, driverError, driverMessage, exitCode, failedSibling, failsTask, genericSource, killError, killReason, killTimeout, message, restartReason, setupError, signal, startDelay, taskSignal, taskSignalReason, time, type, validationError, vaultError);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskEvent {\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    diskLimit: ").append(toIndentedString(diskLimit)).append("\n");
    sb.append("    diskSize: ").append(toIndentedString(diskSize)).append("\n");
    sb.append("    displayMessage: ").append(toIndentedString(displayMessage)).append("\n");
    sb.append("    downloadError: ").append(toIndentedString(downloadError)).append("\n");
    sb.append("    driverError: ").append(toIndentedString(driverError)).append("\n");
    sb.append("    driverMessage: ").append(toIndentedString(driverMessage)).append("\n");
    sb.append("    exitCode: ").append(toIndentedString(exitCode)).append("\n");
    sb.append("    failedSibling: ").append(toIndentedString(failedSibling)).append("\n");
    sb.append("    failsTask: ").append(toIndentedString(failsTask)).append("\n");
    sb.append("    genericSource: ").append(toIndentedString(genericSource)).append("\n");
    sb.append("    killError: ").append(toIndentedString(killError)).append("\n");
    sb.append("    killReason: ").append(toIndentedString(killReason)).append("\n");
    sb.append("    killTimeout: ").append(toIndentedString(killTimeout)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    restartReason: ").append(toIndentedString(restartReason)).append("\n");
    sb.append("    setupError: ").append(toIndentedString(setupError)).append("\n");
    sb.append("    signal: ").append(toIndentedString(signal)).append("\n");
    sb.append("    startDelay: ").append(toIndentedString(startDelay)).append("\n");
    sb.append("    taskSignal: ").append(toIndentedString(taskSignal)).append("\n");
    sb.append("    taskSignalReason: ").append(toIndentedString(taskSignalReason)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validationError: ").append(toIndentedString(validationError)).append("\n");
    sb.append("    vaultError: ").append(toIndentedString(vaultError)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

