/*
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PeriodicConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PeriodicConfig {
  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_PROHIBIT_OVERLAP = "ProhibitOverlap";
  @SerializedName(SERIALIZED_NAME_PROHIBIT_OVERLAP)
  private Boolean prohibitOverlap;

  public static final String SERIALIZED_NAME_SPEC = "Spec";
  @SerializedName(SERIALIZED_NAME_SPEC)
  private String spec;

  public static final String SERIALIZED_NAME_SPEC_TYPE = "SpecType";
  @SerializedName(SERIALIZED_NAME_SPEC_TYPE)
  private String specType;

  public static final String SERIALIZED_NAME_TIME_ZONE = "TimeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;


  public PeriodicConfig enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public PeriodicConfig prohibitOverlap(Boolean prohibitOverlap) {
    
    this.prohibitOverlap = prohibitOverlap;
    return this;
  }

   /**
   * Get prohibitOverlap
   * @return prohibitOverlap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getProhibitOverlap() {
    return prohibitOverlap;
  }


  public void setProhibitOverlap(Boolean prohibitOverlap) {
    this.prohibitOverlap = prohibitOverlap;
  }


  public PeriodicConfig spec(String spec) {
    
    this.spec = spec;
    return this;
  }

   /**
   * Get spec
   * @return spec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSpec() {
    return spec;
  }


  public void setSpec(String spec) {
    this.spec = spec;
  }


  public PeriodicConfig specType(String specType) {
    
    this.specType = specType;
    return this;
  }

   /**
   * Get specType
   * @return specType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSpecType() {
    return specType;
  }


  public void setSpecType(String specType) {
    this.specType = specType;
  }


  public PeriodicConfig timeZone(String timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimeZone() {
    return timeZone;
  }


  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeriodicConfig periodicConfig = (PeriodicConfig) o;
    return Objects.equals(this.enabled, periodicConfig.enabled) &&
        Objects.equals(this.prohibitOverlap, periodicConfig.prohibitOverlap) &&
        Objects.equals(this.spec, periodicConfig.spec) &&
        Objects.equals(this.specType, periodicConfig.specType) &&
        Objects.equals(this.timeZone, periodicConfig.timeZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, prohibitOverlap, spec, specType, timeZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeriodicConfig {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    prohibitOverlap: ").append(toIndentedString(prohibitOverlap)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("    specType: ").append(toIndentedString(specType)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

