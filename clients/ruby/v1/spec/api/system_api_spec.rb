=begin
#Nomad

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.1.4
Contact: support@hashicorp.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NomadClient::SystemApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SystemApi' do
  before do
    # run before each test
    @api_instance = NomadClient::SystemApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SystemApi' do
    it 'should create an instance of SystemApi' do
      expect(@api_instance).to be_instance_of(NomadClient::SystemApi)
    end
  end

  # unit tests for put_system_gc
  # @param [Hash] opts the optional parameters
  # @option opts [String] :region Filters results based on the specified region.
  # @option opts [String] :namespace Filters results based on the specified namespace.
  # @option opts [String] :x_nomad_token A Nomad ACL token.
  # @option opts [String] :idempotency_token Can be used to ensure operations are only run once.
  # @return [nil]
  describe 'put_system_gc test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_system_reconcile_summaries
  # @param [Hash] opts the optional parameters
  # @option opts [String] :region Filters results based on the specified region.
  # @option opts [String] :namespace Filters results based on the specified namespace.
  # @option opts [String] :x_nomad_token A Nomad ACL token.
  # @option opts [String] :idempotency_token Can be used to ensure operations are only run once.
  # @return [nil]
  describe 'put_system_reconcile_summaries test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
