/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AllocationMetric } from './AllocationMetric';
import { EvaluationStub } from './EvaluationStub';
import { HttpFile } from '../http/http';

export class Evaluation {
    'annotatePlan'?: boolean;
    'blockedEval'?: string;
    'classEligibility'?: { [key: string]: boolean; };
    'createIndex'?: number;
    'createTime'?: number;
    'deploymentID'?: string;
    'escapedComputedClass'?: boolean;
    'failedTGAllocs'?: { [key: string]: AllocationMetric; };
    'ID'?: string;
    'jobID'?: string;
    'jobModifyIndex'?: number;
    'modifyIndex'?: number;
    'modifyTime'?: number;
    'namespace'?: string;
    'nextEval'?: string;
    'nodeID'?: string;
    'nodeModifyIndex'?: number;
    'previousEval'?: string;
    'priority'?: number;
    'queuedAllocations'?: { [key: string]: number; };
    'quotaLimitReached'?: string;
    'relatedEvals'?: Array<EvaluationStub>;
    'snapshotIndex'?: number;
    'status'?: string;
    'statusDescription'?: string;
    'triggeredBy'?: string;
    'type'?: string;
    'wait'?: number;
    'waitUntil'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "annotatePlan",
            "baseName": "AnnotatePlan",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "blockedEval",
            "baseName": "BlockedEval",
            "type": "string",
            "format": ""
        },
        {
            "name": "classEligibility",
            "baseName": "ClassEligibility",
            "type": "{ [key: string]: boolean; }",
            "format": ""
        },
        {
            "name": "createIndex",
            "baseName": "CreateIndex",
            "type": "number",
            "format": ""
        },
        {
            "name": "createTime",
            "baseName": "CreateTime",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "deploymentID",
            "baseName": "DeploymentID",
            "type": "string",
            "format": ""
        },
        {
            "name": "escapedComputedClass",
            "baseName": "EscapedComputedClass",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "failedTGAllocs",
            "baseName": "FailedTGAllocs",
            "type": "{ [key: string]: AllocationMetric; }",
            "format": ""
        },
        {
            "name": "ID",
            "baseName": "ID",
            "type": "string",
            "format": ""
        },
        {
            "name": "jobID",
            "baseName": "JobID",
            "type": "string",
            "format": ""
        },
        {
            "name": "jobModifyIndex",
            "baseName": "JobModifyIndex",
            "type": "number",
            "format": ""
        },
        {
            "name": "modifyIndex",
            "baseName": "ModifyIndex",
            "type": "number",
            "format": ""
        },
        {
            "name": "modifyTime",
            "baseName": "ModifyTime",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "namespace",
            "baseName": "Namespace",
            "type": "string",
            "format": ""
        },
        {
            "name": "nextEval",
            "baseName": "NextEval",
            "type": "string",
            "format": ""
        },
        {
            "name": "nodeID",
            "baseName": "NodeID",
            "type": "string",
            "format": ""
        },
        {
            "name": "nodeModifyIndex",
            "baseName": "NodeModifyIndex",
            "type": "number",
            "format": ""
        },
        {
            "name": "previousEval",
            "baseName": "PreviousEval",
            "type": "string",
            "format": ""
        },
        {
            "name": "priority",
            "baseName": "Priority",
            "type": "number",
            "format": ""
        },
        {
            "name": "queuedAllocations",
            "baseName": "QueuedAllocations",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "quotaLimitReached",
            "baseName": "QuotaLimitReached",
            "type": "string",
            "format": ""
        },
        {
            "name": "relatedEvals",
            "baseName": "RelatedEvals",
            "type": "Array<EvaluationStub>",
            "format": ""
        },
        {
            "name": "snapshotIndex",
            "baseName": "SnapshotIndex",
            "type": "number",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "Status",
            "type": "string",
            "format": ""
        },
        {
            "name": "statusDescription",
            "baseName": "StatusDescription",
            "type": "string",
            "format": ""
        },
        {
            "name": "triggeredBy",
            "baseName": "TriggeredBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "Type",
            "type": "string",
            "format": ""
        },
        {
            "name": "wait",
            "baseName": "Wait",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "waitUntil",
            "baseName": "WaitUntil",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return Evaluation.attributeTypeMap;
    }
    
    public constructor() {
    }
}

