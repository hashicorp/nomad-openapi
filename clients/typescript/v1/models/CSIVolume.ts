/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Allocation } from './Allocation';
import { AllocationListStub } from './AllocationListStub';
import { CSIMountOptions } from './CSIMountOptions';
import { CSITopology } from './CSITopology';
import { CSIVolumeCapability } from './CSIVolumeCapability';
import { HttpFile } from '../http/http';

export class CSIVolume {
    'accessMode'?: string;
    'allocations'?: Array<AllocationListStub>;
    'attachmentMode'?: string;
    'capacity'?: number;
    'cloneID'?: string;
    'context'?: { [key: string]: string; };
    'controllerRequired'?: boolean;
    'controllersExpected'?: number;
    'controllersHealthy'?: number;
    'createIndex'?: number;
    'externalID'?: string;
    'ID'?: string;
    'modifyIndex'?: number;
    'mountOptions'?: CSIMountOptions;
    'name'?: string;
    'namespace'?: string;
    'nodesExpected'?: number;
    'nodesHealthy'?: number;
    'parameters'?: { [key: string]: string; };
    'pluginID'?: string;
    'provider'?: string;
    'providerVersion'?: string;
    'readAllocs'?: { [key: string]: Allocation; };
    'requestedCapabilities'?: Array<CSIVolumeCapability>;
    'requestedCapacityMax'?: number;
    'requestedCapacityMin'?: number;
    'resourceExhausted'?: Date;
    'schedulable'?: boolean;
    'secrets'?: { [key: string]: string; };
    'snapshotID'?: string;
    'topologies'?: Array<CSITopology>;
    'writeAllocs'?: { [key: string]: Allocation; };

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accessMode",
            "baseName": "AccessMode",
            "type": "string",
            "format": ""
        },
        {
            "name": "allocations",
            "baseName": "Allocations",
            "type": "Array<AllocationListStub>",
            "format": ""
        },
        {
            "name": "attachmentMode",
            "baseName": "AttachmentMode",
            "type": "string",
            "format": ""
        },
        {
            "name": "capacity",
            "baseName": "Capacity",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "cloneID",
            "baseName": "CloneID",
            "type": "string",
            "format": ""
        },
        {
            "name": "context",
            "baseName": "Context",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "controllerRequired",
            "baseName": "ControllerRequired",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "controllersExpected",
            "baseName": "ControllersExpected",
            "type": "number",
            "format": ""
        },
        {
            "name": "controllersHealthy",
            "baseName": "ControllersHealthy",
            "type": "number",
            "format": ""
        },
        {
            "name": "createIndex",
            "baseName": "CreateIndex",
            "type": "number",
            "format": ""
        },
        {
            "name": "externalID",
            "baseName": "ExternalID",
            "type": "string",
            "format": ""
        },
        {
            "name": "ID",
            "baseName": "ID",
            "type": "string",
            "format": ""
        },
        {
            "name": "modifyIndex",
            "baseName": "ModifyIndex",
            "type": "number",
            "format": ""
        },
        {
            "name": "mountOptions",
            "baseName": "MountOptions",
            "type": "CSIMountOptions",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string",
            "format": ""
        },
        {
            "name": "namespace",
            "baseName": "Namespace",
            "type": "string",
            "format": ""
        },
        {
            "name": "nodesExpected",
            "baseName": "NodesExpected",
            "type": "number",
            "format": ""
        },
        {
            "name": "nodesHealthy",
            "baseName": "NodesHealthy",
            "type": "number",
            "format": ""
        },
        {
            "name": "parameters",
            "baseName": "Parameters",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "pluginID",
            "baseName": "PluginID",
            "type": "string",
            "format": ""
        },
        {
            "name": "provider",
            "baseName": "Provider",
            "type": "string",
            "format": ""
        },
        {
            "name": "providerVersion",
            "baseName": "ProviderVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "readAllocs",
            "baseName": "ReadAllocs",
            "type": "{ [key: string]: Allocation; }",
            "format": ""
        },
        {
            "name": "requestedCapabilities",
            "baseName": "RequestedCapabilities",
            "type": "Array<CSIVolumeCapability>",
            "format": ""
        },
        {
            "name": "requestedCapacityMax",
            "baseName": "RequestedCapacityMax",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "requestedCapacityMin",
            "baseName": "RequestedCapacityMin",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "resourceExhausted",
            "baseName": "ResourceExhausted",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "schedulable",
            "baseName": "Schedulable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "secrets",
            "baseName": "Secrets",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "snapshotID",
            "baseName": "SnapshotID",
            "type": "string",
            "format": ""
        },
        {
            "name": "topologies",
            "baseName": "Topologies",
            "type": "Array<CSITopology>",
            "format": ""
        },
        {
            "name": "writeAllocs",
            "baseName": "WriteAllocs",
            "type": "{ [key: string]: Allocation; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CSIVolume.attributeTypeMap;
    }
    
    public constructor() {
    }
}

