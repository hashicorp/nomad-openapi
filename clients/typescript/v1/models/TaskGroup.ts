/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Affinity } from './Affinity';
import { Constraint } from './Constraint';
import { Consul } from './Consul';
import { EphemeralDisk } from './EphemeralDisk';
import { MigrateStrategy } from './MigrateStrategy';
import { NetworkResource } from './NetworkResource';
import { ReschedulePolicy } from './ReschedulePolicy';
import { RestartPolicy } from './RestartPolicy';
import { ScalingPolicy } from './ScalingPolicy';
import { Service } from './Service';
import { Spread } from './Spread';
import { Task } from './Task';
import { UpdateStrategy } from './UpdateStrategy';
import { VolumeRequest } from './VolumeRequest';
import { HttpFile } from '../http/http';

export class TaskGroup {
    'affinities'?: Array<Affinity>;
    'constraints'?: Array<Constraint>;
    'consul'?: Consul;
    'count'?: number;
    'ephemeralDisk'?: EphemeralDisk;
    'meta'?: { [key: string]: string; };
    'migrate'?: MigrateStrategy;
    'name'?: string;
    'networks'?: Array<NetworkResource>;
    'reschedulePolicy'?: ReschedulePolicy;
    'restartPolicy'?: RestartPolicy;
    'scaling'?: ScalingPolicy;
    'services'?: Array<Service>;
    'shutdownDelay'?: number;
    'spreads'?: Array<Spread>;
    'stopAfterClientDisconnect'?: number;
    'tasks'?: Array<Task>;
    'update'?: UpdateStrategy;
    'volumes'?: { [key: string]: VolumeRequest; };

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "affinities",
            "baseName": "Affinities",
            "type": "Array<Affinity>",
            "format": ""
        },
        {
            "name": "constraints",
            "baseName": "Constraints",
            "type": "Array<Constraint>",
            "format": ""
        },
        {
            "name": "consul",
            "baseName": "Consul",
            "type": "Consul",
            "format": ""
        },
        {
            "name": "count",
            "baseName": "Count",
            "type": "number",
            "format": ""
        },
        {
            "name": "ephemeralDisk",
            "baseName": "EphemeralDisk",
            "type": "EphemeralDisk",
            "format": ""
        },
        {
            "name": "meta",
            "baseName": "Meta",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "migrate",
            "baseName": "Migrate",
            "type": "MigrateStrategy",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string",
            "format": ""
        },
        {
            "name": "networks",
            "baseName": "Networks",
            "type": "Array<NetworkResource>",
            "format": ""
        },
        {
            "name": "reschedulePolicy",
            "baseName": "ReschedulePolicy",
            "type": "ReschedulePolicy",
            "format": ""
        },
        {
            "name": "restartPolicy",
            "baseName": "RestartPolicy",
            "type": "RestartPolicy",
            "format": ""
        },
        {
            "name": "scaling",
            "baseName": "Scaling",
            "type": "ScalingPolicy",
            "format": ""
        },
        {
            "name": "services",
            "baseName": "Services",
            "type": "Array<Service>",
            "format": ""
        },
        {
            "name": "shutdownDelay",
            "baseName": "ShutdownDelay",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "spreads",
            "baseName": "Spreads",
            "type": "Array<Spread>",
            "format": ""
        },
        {
            "name": "stopAfterClientDisconnect",
            "baseName": "StopAfterClientDisconnect",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "tasks",
            "baseName": "Tasks",
            "type": "Array<Task>",
            "format": ""
        },
        {
            "name": "update",
            "baseName": "Update",
            "type": "UpdateStrategy",
            "format": ""
        },
        {
            "name": "volumes",
            "baseName": "Volumes",
            "type": "{ [key: string]: VolumeRequest; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TaskGroup.attributeTypeMap;
    }
    
    public constructor() {
    }
}

