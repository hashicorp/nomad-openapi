/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.nomad-client);
  }
}(this, function(expect, nomad-client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new nomad-client.Evaluation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Evaluation', function() {
    it('should create an instance of Evaluation', function() {
      // uncomment below and update the code to test Evaluation
      //var instane = new nomad-client.Evaluation();
      //expect(instance).to.be.a(nomad-client.Evaluation);
    });

    it('should have the property annotatePlan (base name: "AnnotatePlan")', function() {
      // uncomment below and update the code to test the property annotatePlan
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property blockedEval (base name: "BlockedEval")', function() {
      // uncomment below and update the code to test the property blockedEval
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property classEligibility (base name: "ClassEligibility")', function() {
      // uncomment below and update the code to test the property classEligibility
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property createIndex (base name: "CreateIndex")', function() {
      // uncomment below and update the code to test the property createIndex
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "CreateTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property deploymentID (base name: "DeploymentID")', function() {
      // uncomment below and update the code to test the property deploymentID
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property escapedComputedClass (base name: "EscapedComputedClass")', function() {
      // uncomment below and update the code to test the property escapedComputedClass
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property failedTGAllocs (base name: "FailedTGAllocs")', function() {
      // uncomment below and update the code to test the property failedTGAllocs
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property ID (base name: "ID")', function() {
      // uncomment below and update the code to test the property ID
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property jobID (base name: "JobID")', function() {
      // uncomment below and update the code to test the property jobID
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property jobModifyIndex (base name: "JobModifyIndex")', function() {
      // uncomment below and update the code to test the property jobModifyIndex
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property modifyIndex (base name: "ModifyIndex")', function() {
      // uncomment below and update the code to test the property modifyIndex
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property modifyTime (base name: "ModifyTime")', function() {
      // uncomment below and update the code to test the property modifyTime
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property namespace (base name: "Namespace")', function() {
      // uncomment below and update the code to test the property namespace
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property nextEval (base name: "NextEval")', function() {
      // uncomment below and update the code to test the property nextEval
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property nodeID (base name: "NodeID")', function() {
      // uncomment below and update the code to test the property nodeID
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property nodeModifyIndex (base name: "NodeModifyIndex")', function() {
      // uncomment below and update the code to test the property nodeModifyIndex
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property previousEval (base name: "PreviousEval")', function() {
      // uncomment below and update the code to test the property previousEval
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "Priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property queuedAllocations (base name: "QueuedAllocations")', function() {
      // uncomment below and update the code to test the property queuedAllocations
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property quotaLimitReached (base name: "QuotaLimitReached")', function() {
      // uncomment below and update the code to test the property quotaLimitReached
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property snapshotIndex (base name: "SnapshotIndex")', function() {
      // uncomment below and update the code to test the property snapshotIndex
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property statusDescription (base name: "StatusDescription")', function() {
      // uncomment below and update the code to test the property statusDescription
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property triggeredBy (base name: "TriggeredBy")', function() {
      // uncomment below and update the code to test the property triggeredBy
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property wait (base name: "Wait")', function() {
      // uncomment below and update the code to test the property wait
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

    it('should have the property waitUntil (base name: "WaitUntil")', function() {
      // uncomment below and update the code to test the property waitUntil
      //var instance = new nomad-client.Evaluation();
      //expect(instance).to.be();
    });

  });

}));
