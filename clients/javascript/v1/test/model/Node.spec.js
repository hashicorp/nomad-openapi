/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.nomad-client);
  }
}(this, function(expect, nomad-client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new nomad-client.Node();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Node', function() {
    it('should create an instance of Node', function() {
      // uncomment below and update the code to test Node
      //var instane = new nomad-client.Node();
      //expect(instance).to.be.a(nomad-client.Node);
    });

    it('should have the property attributes (base name: "Attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property cSIControllerPlugins (base name: "CSIControllerPlugins")', function() {
      // uncomment below and update the code to test the property cSIControllerPlugins
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property cSINodePlugins (base name: "CSINodePlugins")', function() {
      // uncomment below and update the code to test the property cSINodePlugins
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property createIndex (base name: "CreateIndex")', function() {
      // uncomment below and update the code to test the property createIndex
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property datacenter (base name: "Datacenter")', function() {
      // uncomment below and update the code to test the property datacenter
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property drain (base name: "Drain")', function() {
      // uncomment below and update the code to test the property drain
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property drainStrategy (base name: "DrainStrategy")', function() {
      // uncomment below and update the code to test the property drainStrategy
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property drivers (base name: "Drivers")', function() {
      // uncomment below and update the code to test the property drivers
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property events (base name: "Events")', function() {
      // uncomment below and update the code to test the property events
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property hTTPAddr (base name: "HTTPAddr")', function() {
      // uncomment below and update the code to test the property hTTPAddr
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property hostVolumes (base name: "HostVolumes")', function() {
      // uncomment below and update the code to test the property hostVolumes
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property ID (base name: "ID")', function() {
      // uncomment below and update the code to test the property ID
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property lastDrain (base name: "LastDrain")', function() {
      // uncomment below and update the code to test the property lastDrain
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "Links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property meta (base name: "Meta")', function() {
      // uncomment below and update the code to test the property meta
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property modifyIndex (base name: "ModifyIndex")', function() {
      // uncomment below and update the code to test the property modifyIndex
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property nodeClass (base name: "NodeClass")', function() {
      // uncomment below and update the code to test the property nodeClass
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property nodeResources (base name: "NodeResources")', function() {
      // uncomment below and update the code to test the property nodeResources
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property reserved (base name: "Reserved")', function() {
      // uncomment below and update the code to test the property reserved
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property reservedResources (base name: "ReservedResources")', function() {
      // uncomment below and update the code to test the property reservedResources
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property resources (base name: "Resources")', function() {
      // uncomment below and update the code to test the property resources
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property schedulingEligibility (base name: "SchedulingEligibility")', function() {
      // uncomment below and update the code to test the property schedulingEligibility
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property statusDescription (base name: "StatusDescription")', function() {
      // uncomment below and update the code to test the property statusDescription
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property statusUpdatedAt (base name: "StatusUpdatedAt")', function() {
      // uncomment below and update the code to test the property statusUpdatedAt
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

    it('should have the property tLSEnabled (base name: "TLSEnabled")', function() {
      // uncomment below and update the code to test the property tLSEnabled
      //var instance = new nomad-client.Node();
      //expect(instance).to.be();
    });

  });

}));
