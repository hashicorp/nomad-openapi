/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.nomad-client);
  }
}(this, function(expect, nomad-client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new nomad-client.JobsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JobsApi', function() {
    describe('deleteJob', function() {
      it('should call deleteJob successfully', function(done) {
        //uncomment below and update the code to test deleteJob
        //instance.deleteJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJob', function() {
      it('should call getJob successfully', function(done) {
        //uncomment below and update the code to test getJob
        //instance.getJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobAllocations', function() {
      it('should call getJobAllocations successfully', function(done) {
        //uncomment below and update the code to test getJobAllocations
        //instance.getJobAllocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobDeployment', function() {
      it('should call getJobDeployment successfully', function(done) {
        //uncomment below and update the code to test getJobDeployment
        //instance.getJobDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobDeployments', function() {
      it('should call getJobDeployments successfully', function(done) {
        //uncomment below and update the code to test getJobDeployments
        //instance.getJobDeployments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobEvaluations', function() {
      it('should call getJobEvaluations successfully', function(done) {
        //uncomment below and update the code to test getJobEvaluations
        //instance.getJobEvaluations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobScaleStatus', function() {
      it('should call getJobScaleStatus successfully', function(done) {
        //uncomment below and update the code to test getJobScaleStatus
        //instance.getJobScaleStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobSummary', function() {
      it('should call getJobSummary successfully', function(done) {
        //uncomment below and update the code to test getJobSummary
        //instance.getJobSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobVersions', function() {
      it('should call getJobVersions successfully', function(done) {
        //uncomment below and update the code to test getJobVersions
        //instance.getJobVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobs', function() {
      it('should call getJobs successfully', function(done) {
        //uncomment below and update the code to test getJobs
        //instance.getJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJob', function() {
      it('should call postJob successfully', function(done) {
        //uncomment below and update the code to test postJob
        //instance.postJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobDispatch', function() {
      it('should call postJobDispatch successfully', function(done) {
        //uncomment below and update the code to test postJobDispatch
        //instance.postJobDispatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobEvaluate', function() {
      it('should call postJobEvaluate successfully', function(done) {
        //uncomment below and update the code to test postJobEvaluate
        //instance.postJobEvaluate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobParse', function() {
      it('should call postJobParse successfully', function(done) {
        //uncomment below and update the code to test postJobParse
        //instance.postJobParse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobPeriodicForce', function() {
      it('should call postJobPeriodicForce successfully', function(done) {
        //uncomment below and update the code to test postJobPeriodicForce
        //instance.postJobPeriodicForce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobPlan', function() {
      it('should call postJobPlan successfully', function(done) {
        //uncomment below and update the code to test postJobPlan
        //instance.postJobPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobRevert', function() {
      it('should call postJobRevert successfully', function(done) {
        //uncomment below and update the code to test postJobRevert
        //instance.postJobRevert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobScalingRequest', function() {
      it('should call postJobScalingRequest successfully', function(done) {
        //uncomment below and update the code to test postJobScalingRequest
        //instance.postJobScalingRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobStability', function() {
      it('should call postJobStability successfully', function(done) {
        //uncomment below and update the code to test postJobStability
        //instance.postJobStability(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postJobValidateRequest', function() {
      it('should call postJobValidateRequest successfully', function(done) {
        //uncomment below and update the code to test postJobValidateRequest
        //instance.postJobValidateRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerJob', function() {
      it('should call registerJob successfully', function(done) {
        //uncomment below and update the code to test registerJob
        //instance.registerJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
