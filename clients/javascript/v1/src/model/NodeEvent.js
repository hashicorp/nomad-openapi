/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NodeEvent model module.
 * @module model/NodeEvent
 * @version 1.1.4
 */
class NodeEvent {
    /**
     * Constructs a new <code>NodeEvent</code>.
     * @alias module:model/NodeEvent
     */
    constructor() { 
        
        NodeEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NodeEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeEvent} obj Optional instance to populate.
     * @return {module:model/NodeEvent} The populated <code>NodeEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeEvent();

            if (data.hasOwnProperty('CreateIndex')) {
                obj['CreateIndex'] = ApiClient.convertToType(data['CreateIndex'], 'Number');
            }
            if (data.hasOwnProperty('Details')) {
                obj['Details'] = ApiClient.convertToType(data['Details'], {'String': 'String'});
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('Subsystem')) {
                obj['Subsystem'] = ApiClient.convertToType(data['Subsystem'], 'String');
            }
            if (data.hasOwnProperty('Timestamp')) {
                obj['Timestamp'] = ApiClient.convertToType(data['Timestamp'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} CreateIndex
 */
NodeEvent.prototype['CreateIndex'] = undefined;

/**
 * @member {Object.<String, String>} Details
 */
NodeEvent.prototype['Details'] = undefined;

/**
 * @member {String} Message
 */
NodeEvent.prototype['Message'] = undefined;

/**
 * @member {String} Subsystem
 */
NodeEvent.prototype['Subsystem'] = undefined;

/**
 * @member {Date} Timestamp
 */
NodeEvent.prototype['Timestamp'] = undefined;






export default NodeEvent;

