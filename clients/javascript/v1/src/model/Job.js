/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Affinity from './Affinity';
import Constraint from './Constraint';
import MigrateStrategy from './MigrateStrategy';
import Multiregion from './Multiregion';
import ParameterizedJobConfig from './ParameterizedJobConfig';
import PeriodicConfig from './PeriodicConfig';
import ReschedulePolicy from './ReschedulePolicy';
import Spread from './Spread';
import TaskGroup from './TaskGroup';
import UpdateStrategy from './UpdateStrategy';

/**
 * The Job model module.
 * @module model/Job
 * @version 1.1.4
 */
class Job {
    /**
     * Constructs a new <code>Job</code>.
     * @alias module:model/Job
     */
    constructor() { 
        
        Job.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Job} obj Optional instance to populate.
     * @return {module:model/Job} The populated <code>Job</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Job();

            if (data.hasOwnProperty('Affinities')) {
                obj['Affinities'] = ApiClient.convertToType(data['Affinities'], [Affinity]);
            }
            if (data.hasOwnProperty('AllAtOnce')) {
                obj['AllAtOnce'] = ApiClient.convertToType(data['AllAtOnce'], 'Boolean');
            }
            if (data.hasOwnProperty('Constraints')) {
                obj['Constraints'] = ApiClient.convertToType(data['Constraints'], [Constraint]);
            }
            if (data.hasOwnProperty('ConsulNamespace')) {
                obj['ConsulNamespace'] = ApiClient.convertToType(data['ConsulNamespace'], 'String');
            }
            if (data.hasOwnProperty('ConsulToken')) {
                obj['ConsulToken'] = ApiClient.convertToType(data['ConsulToken'], 'String');
            }
            if (data.hasOwnProperty('CreateIndex')) {
                obj['CreateIndex'] = ApiClient.convertToType(data['CreateIndex'], 'Number');
            }
            if (data.hasOwnProperty('Datacenters')) {
                obj['Datacenters'] = ApiClient.convertToType(data['Datacenters'], ['String']);
            }
            if (data.hasOwnProperty('Dispatched')) {
                obj['Dispatched'] = ApiClient.convertToType(data['Dispatched'], 'Boolean');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('JobModifyIndex')) {
                obj['JobModifyIndex'] = ApiClient.convertToType(data['JobModifyIndex'], 'Number');
            }
            if (data.hasOwnProperty('Meta')) {
                obj['Meta'] = ApiClient.convertToType(data['Meta'], {'String': 'String'});
            }
            if (data.hasOwnProperty('Migrate')) {
                obj['Migrate'] = MigrateStrategy.constructFromObject(data['Migrate']);
            }
            if (data.hasOwnProperty('ModifyIndex')) {
                obj['ModifyIndex'] = ApiClient.convertToType(data['ModifyIndex'], 'Number');
            }
            if (data.hasOwnProperty('Multiregion')) {
                obj['Multiregion'] = Multiregion.constructFromObject(data['Multiregion']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Namespace')) {
                obj['Namespace'] = ApiClient.convertToType(data['Namespace'], 'String');
            }
            if (data.hasOwnProperty('NomadTokenID')) {
                obj['NomadTokenID'] = ApiClient.convertToType(data['NomadTokenID'], 'String');
            }
            if (data.hasOwnProperty('ParameterizedJob')) {
                obj['ParameterizedJob'] = ParameterizedJobConfig.constructFromObject(data['ParameterizedJob']);
            }
            if (data.hasOwnProperty('ParentID')) {
                obj['ParentID'] = ApiClient.convertToType(data['ParentID'], 'String');
            }
            if (data.hasOwnProperty('Payload')) {
                obj['Payload'] = ApiClient.convertToType(data['Payload'], 'Blob');
            }
            if (data.hasOwnProperty('Periodic')) {
                obj['Periodic'] = PeriodicConfig.constructFromObject(data['Periodic']);
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('Region')) {
                obj['Region'] = ApiClient.convertToType(data['Region'], 'String');
            }
            if (data.hasOwnProperty('Reschedule')) {
                obj['Reschedule'] = ReschedulePolicy.constructFromObject(data['Reschedule']);
            }
            if (data.hasOwnProperty('Spreads')) {
                obj['Spreads'] = ApiClient.convertToType(data['Spreads'], [Spread]);
            }
            if (data.hasOwnProperty('Stable')) {
                obj['Stable'] = ApiClient.convertToType(data['Stable'], 'Boolean');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('StatusDescription')) {
                obj['StatusDescription'] = ApiClient.convertToType(data['StatusDescription'], 'String');
            }
            if (data.hasOwnProperty('Stop')) {
                obj['Stop'] = ApiClient.convertToType(data['Stop'], 'Boolean');
            }
            if (data.hasOwnProperty('SubmitTime')) {
                obj['SubmitTime'] = ApiClient.convertToType(data['SubmitTime'], 'Number');
            }
            if (data.hasOwnProperty('TaskGroups')) {
                obj['TaskGroups'] = ApiClient.convertToType(data['TaskGroups'], [TaskGroup]);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('Update')) {
                obj['Update'] = UpdateStrategy.constructFromObject(data['Update']);
            }
            if (data.hasOwnProperty('VaultNamespace')) {
                obj['VaultNamespace'] = ApiClient.convertToType(data['VaultNamespace'], 'String');
            }
            if (data.hasOwnProperty('VaultToken')) {
                obj['VaultToken'] = ApiClient.convertToType(data['VaultToken'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/Affinity>} Affinities
 */
Job.prototype['Affinities'] = undefined;

/**
 * @member {Boolean} AllAtOnce
 */
Job.prototype['AllAtOnce'] = undefined;

/**
 * @member {Array.<module:model/Constraint>} Constraints
 */
Job.prototype['Constraints'] = undefined;

/**
 * @member {String} ConsulNamespace
 */
Job.prototype['ConsulNamespace'] = undefined;

/**
 * @member {String} ConsulToken
 */
Job.prototype['ConsulToken'] = undefined;

/**
 * @member {Number} CreateIndex
 */
Job.prototype['CreateIndex'] = undefined;

/**
 * @member {Array.<String>} Datacenters
 */
Job.prototype['Datacenters'] = undefined;

/**
 * @member {Boolean} Dispatched
 */
Job.prototype['Dispatched'] = undefined;

/**
 * @member {String} ID
 */
Job.prototype['ID'] = undefined;

/**
 * @member {Number} JobModifyIndex
 */
Job.prototype['JobModifyIndex'] = undefined;

/**
 * @member {Object.<String, String>} Meta
 */
Job.prototype['Meta'] = undefined;

/**
 * @member {module:model/MigrateStrategy} Migrate
 */
Job.prototype['Migrate'] = undefined;

/**
 * @member {Number} ModifyIndex
 */
Job.prototype['ModifyIndex'] = undefined;

/**
 * @member {module:model/Multiregion} Multiregion
 */
Job.prototype['Multiregion'] = undefined;

/**
 * @member {String} Name
 */
Job.prototype['Name'] = undefined;

/**
 * @member {String} Namespace
 */
Job.prototype['Namespace'] = undefined;

/**
 * @member {String} NomadTokenID
 */
Job.prototype['NomadTokenID'] = undefined;

/**
 * @member {module:model/ParameterizedJobConfig} ParameterizedJob
 */
Job.prototype['ParameterizedJob'] = undefined;

/**
 * @member {String} ParentID
 */
Job.prototype['ParentID'] = undefined;

/**
 * @member {Blob} Payload
 */
Job.prototype['Payload'] = undefined;

/**
 * @member {module:model/PeriodicConfig} Periodic
 */
Job.prototype['Periodic'] = undefined;

/**
 * @member {Number} Priority
 */
Job.prototype['Priority'] = undefined;

/**
 * @member {String} Region
 */
Job.prototype['Region'] = undefined;

/**
 * @member {module:model/ReschedulePolicy} Reschedule
 */
Job.prototype['Reschedule'] = undefined;

/**
 * @member {Array.<module:model/Spread>} Spreads
 */
Job.prototype['Spreads'] = undefined;

/**
 * @member {Boolean} Stable
 */
Job.prototype['Stable'] = undefined;

/**
 * @member {String} Status
 */
Job.prototype['Status'] = undefined;

/**
 * @member {String} StatusDescription
 */
Job.prototype['StatusDescription'] = undefined;

/**
 * @member {Boolean} Stop
 */
Job.prototype['Stop'] = undefined;

/**
 * @member {Number} SubmitTime
 */
Job.prototype['SubmitTime'] = undefined;

/**
 * @member {Array.<module:model/TaskGroup>} TaskGroups
 */
Job.prototype['TaskGroups'] = undefined;

/**
 * @member {String} Type
 */
Job.prototype['Type'] = undefined;

/**
 * @member {module:model/UpdateStrategy} Update
 */
Job.prototype['Update'] = undefined;

/**
 * @member {String} VaultNamespace
 */
Job.prototype['VaultNamespace'] = undefined;

/**
 * @member {String} VaultToken
 */
Job.prototype['VaultToken'] = undefined;

/**
 * @member {Number} Version
 */
Job.prototype['Version'] = undefined;






export default Job;

