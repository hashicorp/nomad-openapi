/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Constraint model module.
 * @module model/Constraint
 * @version 1.1.4
 */
class Constraint {
    /**
     * Constructs a new <code>Constraint</code>.
     * @alias module:model/Constraint
     */
    constructor() { 
        
        Constraint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Constraint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Constraint} obj Optional instance to populate.
     * @return {module:model/Constraint} The populated <code>Constraint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Constraint();

            if (data.hasOwnProperty('LTarget')) {
                obj['LTarget'] = ApiClient.convertToType(data['LTarget'], 'String');
            }
            if (data.hasOwnProperty('Operand')) {
                obj['Operand'] = ApiClient.convertToType(data['Operand'], 'String');
            }
            if (data.hasOwnProperty('RTarget')) {
                obj['RTarget'] = ApiClient.convertToType(data['RTarget'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} LTarget
 */
Constraint.prototype['LTarget'] = undefined;

/**
 * @member {String} Operand
 */
Constraint.prototype['Operand'] = undefined;

/**
 * @member {String} RTarget
 */
Constraint.prototype['RTarget'] = undefined;






export default Constraint;

