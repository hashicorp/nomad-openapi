/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PeriodicConfig model module.
 * @module model/PeriodicConfig
 * @version 1.1.4
 */
class PeriodicConfig {
    /**
     * Constructs a new <code>PeriodicConfig</code>.
     * @alias module:model/PeriodicConfig
     */
    constructor() { 
        
        PeriodicConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PeriodicConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PeriodicConfig} obj Optional instance to populate.
     * @return {module:model/PeriodicConfig} The populated <code>PeriodicConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PeriodicConfig();

            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ProhibitOverlap')) {
                obj['ProhibitOverlap'] = ApiClient.convertToType(data['ProhibitOverlap'], 'Boolean');
            }
            if (data.hasOwnProperty('Spec')) {
                obj['Spec'] = ApiClient.convertToType(data['Spec'], 'String');
            }
            if (data.hasOwnProperty('SpecType')) {
                obj['SpecType'] = ApiClient.convertToType(data['SpecType'], 'String');
            }
            if (data.hasOwnProperty('TimeZone')) {
                obj['TimeZone'] = ApiClient.convertToType(data['TimeZone'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} Enabled
 */
PeriodicConfig.prototype['Enabled'] = undefined;

/**
 * @member {Boolean} ProhibitOverlap
 */
PeriodicConfig.prototype['ProhibitOverlap'] = undefined;

/**
 * @member {String} Spec
 */
PeriodicConfig.prototype['Spec'] = undefined;

/**
 * @member {String} SpecType
 */
PeriodicConfig.prototype['SpecType'] = undefined;

/**
 * @member {String} TimeZone
 */
PeriodicConfig.prototype['TimeZone'] = undefined;






export default PeriodicConfig;

