/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllocationListStub from './AllocationListStub';
import CSIInfo from './CSIInfo';

/**
 * The CSIPlugin model module.
 * @module model/CSIPlugin
 * @version 1.1.4
 */
class CSIPlugin {
    /**
     * Constructs a new <code>CSIPlugin</code>.
     * @alias module:model/CSIPlugin
     */
    constructor() { 
        
        CSIPlugin.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CSIPlugin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CSIPlugin} obj Optional instance to populate.
     * @return {module:model/CSIPlugin} The populated <code>CSIPlugin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CSIPlugin();

            if (data.hasOwnProperty('Allocations')) {
                obj['Allocations'] = ApiClient.convertToType(data['Allocations'], [AllocationListStub]);
            }
            if (data.hasOwnProperty('ControllerRequired')) {
                obj['ControllerRequired'] = ApiClient.convertToType(data['ControllerRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('Controllers')) {
                obj['Controllers'] = ApiClient.convertToType(data['Controllers'], {'String': CSIInfo});
            }
            if (data.hasOwnProperty('ControllersExpected')) {
                obj['ControllersExpected'] = ApiClient.convertToType(data['ControllersExpected'], 'Number');
            }
            if (data.hasOwnProperty('ControllersHealthy')) {
                obj['ControllersHealthy'] = ApiClient.convertToType(data['ControllersHealthy'], 'Number');
            }
            if (data.hasOwnProperty('CreateIndex')) {
                obj['CreateIndex'] = ApiClient.convertToType(data['CreateIndex'], 'Number');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('ModifyIndex')) {
                obj['ModifyIndex'] = ApiClient.convertToType(data['ModifyIndex'], 'Number');
            }
            if (data.hasOwnProperty('Nodes')) {
                obj['Nodes'] = ApiClient.convertToType(data['Nodes'], {'String': CSIInfo});
            }
            if (data.hasOwnProperty('NodesExpected')) {
                obj['NodesExpected'] = ApiClient.convertToType(data['NodesExpected'], 'Number');
            }
            if (data.hasOwnProperty('NodesHealthy')) {
                obj['NodesHealthy'] = ApiClient.convertToType(data['NodesHealthy'], 'Number');
            }
            if (data.hasOwnProperty('Provider')) {
                obj['Provider'] = ApiClient.convertToType(data['Provider'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/AllocationListStub>} Allocations
 */
CSIPlugin.prototype['Allocations'] = undefined;

/**
 * @member {Boolean} ControllerRequired
 */
CSIPlugin.prototype['ControllerRequired'] = undefined;

/**
 * @member {Object.<String, module:model/CSIInfo>} Controllers
 */
CSIPlugin.prototype['Controllers'] = undefined;

/**
 * @member {Number} ControllersExpected
 */
CSIPlugin.prototype['ControllersExpected'] = undefined;

/**
 * @member {Number} ControllersHealthy
 */
CSIPlugin.prototype['ControllersHealthy'] = undefined;

/**
 * @member {Number} CreateIndex
 */
CSIPlugin.prototype['CreateIndex'] = undefined;

/**
 * @member {String} ID
 */
CSIPlugin.prototype['ID'] = undefined;

/**
 * @member {Number} ModifyIndex
 */
CSIPlugin.prototype['ModifyIndex'] = undefined;

/**
 * @member {Object.<String, module:model/CSIInfo>} Nodes
 */
CSIPlugin.prototype['Nodes'] = undefined;

/**
 * @member {Number} NodesExpected
 */
CSIPlugin.prototype['NodesExpected'] = undefined;

/**
 * @member {Number} NodesHealthy
 */
CSIPlugin.prototype['NodesHealthy'] = undefined;

/**
 * @member {String} Provider
 */
CSIPlugin.prototype['Provider'] = undefined;

/**
 * @member {String} Version
 */
CSIPlugin.prototype['Version'] = undefined;






export default CSIPlugin;

