/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/**
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CSISnapshot model module.
 * @module model/CSISnapshot
 * @version 1.1.4
 */
class CSISnapshot {
    /**
     * Constructs a new <code>CSISnapshot</code>.
     * @alias module:model/CSISnapshot
     */
    constructor() { 
        
        CSISnapshot.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CSISnapshot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CSISnapshot} obj Optional instance to populate.
     * @return {module:model/CSISnapshot} The populated <code>CSISnapshot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CSISnapshot();

            if (data.hasOwnProperty('CreateTime')) {
                obj['CreateTime'] = ApiClient.convertToType(data['CreateTime'], 'Number');
            }
            if (data.hasOwnProperty('ExternalSourceVolumeID')) {
                obj['ExternalSourceVolumeID'] = ApiClient.convertToType(data['ExternalSourceVolumeID'], 'String');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('IsReady')) {
                obj['IsReady'] = ApiClient.convertToType(data['IsReady'], 'Boolean');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('PluginID')) {
                obj['PluginID'] = ApiClient.convertToType(data['PluginID'], 'String');
            }
            if (data.hasOwnProperty('Secrets')) {
                obj['Secrets'] = ApiClient.convertToType(data['Secrets'], {'String': 'String'});
            }
            if (data.hasOwnProperty('SizeBytes')) {
                obj['SizeBytes'] = ApiClient.convertToType(data['SizeBytes'], 'Number');
            }
            if (data.hasOwnProperty('SourceVolumeID')) {
                obj['SourceVolumeID'] = ApiClient.convertToType(data['SourceVolumeID'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} CreateTime
 */
CSISnapshot.prototype['CreateTime'] = undefined;

/**
 * @member {String} ExternalSourceVolumeID
 */
CSISnapshot.prototype['ExternalSourceVolumeID'] = undefined;

/**
 * @member {String} ID
 */
CSISnapshot.prototype['ID'] = undefined;

/**
 * @member {Boolean} IsReady
 */
CSISnapshot.prototype['IsReady'] = undefined;

/**
 * @member {String} Name
 */
CSISnapshot.prototype['Name'] = undefined;

/**
 * @member {Object.<String, String>} Parameters
 */
CSISnapshot.prototype['Parameters'] = undefined;

/**
 * @member {String} PluginID
 */
CSISnapshot.prototype['PluginID'] = undefined;

/**
 * @member {Object.<String, String>} Secrets
 */
CSISnapshot.prototype['Secrets'] = undefined;

/**
 * @member {Number} SizeBytes
 */
CSISnapshot.prototype['SizeBytes'] = undefined;

/**
 * @member {String} SourceVolumeID
 */
CSISnapshot.prototype['SourceVolumeID'] = undefined;






export default CSISnapshot;

