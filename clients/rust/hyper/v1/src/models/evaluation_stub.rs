// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EvaluationStub {
    #[serde(rename = "BlockedEval", skip_serializing_if = "Option::is_none")]
    pub blocked_eval: Option<String>,
    #[serde(rename = "CreateIndex", skip_serializing_if = "Option::is_none")]
    pub create_index: Option<i32>,
    #[serde(rename = "CreateTime", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<i64>,
    #[serde(rename = "DeploymentID", skip_serializing_if = "Option::is_none")]
    pub deployment_id: Option<String>,
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub ID: Option<String>,
    #[serde(rename = "JobID", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<String>,
    #[serde(rename = "ModifyIndex", skip_serializing_if = "Option::is_none")]
    pub modify_index: Option<i32>,
    #[serde(rename = "ModifyTime", skip_serializing_if = "Option::is_none")]
    pub modify_time: Option<i64>,
    #[serde(rename = "Namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "NextEval", skip_serializing_if = "Option::is_none")]
    pub next_eval: Option<String>,
    #[serde(rename = "NodeID", skip_serializing_if = "Option::is_none")]
    pub node_id: Option<String>,
    #[serde(rename = "PreviousEval", skip_serializing_if = "Option::is_none")]
    pub previous_eval: Option<String>,
    #[serde(rename = "Priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
    #[serde(rename = "Status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "StatusDescription", skip_serializing_if = "Option::is_none")]
    pub status_description: Option<String>,
    #[serde(rename = "TriggeredBy", skip_serializing_if = "Option::is_none")]
    pub triggered_by: Option<String>,
    #[serde(rename = "Type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "WaitUntil", skip_serializing_if = "Option::is_none")]
    pub wait_until: Option<String>,
}

impl EvaluationStub {
    pub fn new() -> EvaluationStub {
        EvaluationStub {
            blocked_eval: None,
            create_index: None,
            create_time: None,
            deployment_id: None,
            ID: None,
            job_id: None,
            modify_index: None,
            modify_time: None,
            namespace: None,
            next_eval: None,
            node_id: None,
            previous_eval: None,
            priority: None,
            status: None,
            status_description: None,
            triggered_by: None,
            _type: None,
            wait_until: None,
        }
    }
}


