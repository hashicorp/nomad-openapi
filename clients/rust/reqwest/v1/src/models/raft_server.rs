/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RaftServer {
    #[serde(rename = "Address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub ID: Option<String>,
    #[serde(rename = "Leader", skip_serializing_if = "Option::is_none")]
    pub leader: Option<bool>,
    #[serde(rename = "Node", skip_serializing_if = "Option::is_none")]
    pub node: Option<String>,
    #[serde(rename = "RaftProtocol", skip_serializing_if = "Option::is_none")]
    pub raft_protocol: Option<String>,
    #[serde(rename = "Voter", skip_serializing_if = "Option::is_none")]
    pub voter: Option<bool>,
}

impl RaftServer {
    pub fn new() -> RaftServer {
        RaftServer {
            address: None,
            ID: None,
            leader: None,
            node: None,
            raft_protocol: None,
            voter: None,
        }
    }
}


