/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CSISnapshot struct for CSISnapshot
type CSISnapshot struct {
	CreateTime *int64 `json:"CreateTime,omitempty"`
	ExternalSourceVolumeID *string `json:"ExternalSourceVolumeID,omitempty"`
	ID *string `json:"ID,omitempty"`
	IsReady *bool `json:"IsReady,omitempty"`
	Name *string `json:"Name,omitempty"`
	Parameters *map[string]string `json:"Parameters,omitempty"`
	PluginID *string `json:"PluginID,omitempty"`
	Secrets *map[string]string `json:"Secrets,omitempty"`
	SizeBytes *int64 `json:"SizeBytes,omitempty"`
	SourceVolumeID *string `json:"SourceVolumeID,omitempty"`
}

// NewCSISnapshot instantiates a new CSISnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSISnapshot() *CSISnapshot {
	this := CSISnapshot{}
	return &this
}

// NewCSISnapshotWithDefaults instantiates a new CSISnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSISnapshotWithDefaults() *CSISnapshot {
	this := CSISnapshot{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *CSISnapshot) GetCreateTime() int64 {
	if o == nil || o.CreateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetCreateTimeOk() (*int64, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *CSISnapshot) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *CSISnapshot) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetExternalSourceVolumeID returns the ExternalSourceVolumeID field value if set, zero value otherwise.
func (o *CSISnapshot) GetExternalSourceVolumeID() string {
	if o == nil || o.ExternalSourceVolumeID == nil {
		var ret string
		return ret
	}
	return *o.ExternalSourceVolumeID
}

// GetExternalSourceVolumeIDOk returns a tuple with the ExternalSourceVolumeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetExternalSourceVolumeIDOk() (*string, bool) {
	if o == nil || o.ExternalSourceVolumeID == nil {
		return nil, false
	}
	return o.ExternalSourceVolumeID, true
}

// HasExternalSourceVolumeID returns a boolean if a field has been set.
func (o *CSISnapshot) HasExternalSourceVolumeID() bool {
	if o != nil && o.ExternalSourceVolumeID != nil {
		return true
	}

	return false
}

// SetExternalSourceVolumeID gets a reference to the given string and assigns it to the ExternalSourceVolumeID field.
func (o *CSISnapshot) SetExternalSourceVolumeID(v string) {
	o.ExternalSourceVolumeID = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *CSISnapshot) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *CSISnapshot) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *CSISnapshot) SetID(v string) {
	o.ID = &v
}

// GetIsReady returns the IsReady field value if set, zero value otherwise.
func (o *CSISnapshot) GetIsReady() bool {
	if o == nil || o.IsReady == nil {
		var ret bool
		return ret
	}
	return *o.IsReady
}

// GetIsReadyOk returns a tuple with the IsReady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetIsReadyOk() (*bool, bool) {
	if o == nil || o.IsReady == nil {
		return nil, false
	}
	return o.IsReady, true
}

// HasIsReady returns a boolean if a field has been set.
func (o *CSISnapshot) HasIsReady() bool {
	if o != nil && o.IsReady != nil {
		return true
	}

	return false
}

// SetIsReady gets a reference to the given bool and assigns it to the IsReady field.
func (o *CSISnapshot) SetIsReady(v bool) {
	o.IsReady = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CSISnapshot) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CSISnapshot) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CSISnapshot) SetName(v string) {
	o.Name = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *CSISnapshot) GetParameters() map[string]string {
	if o == nil || o.Parameters == nil {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetParametersOk() (*map[string]string, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *CSISnapshot) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *CSISnapshot) SetParameters(v map[string]string) {
	o.Parameters = &v
}

// GetPluginID returns the PluginID field value if set, zero value otherwise.
func (o *CSISnapshot) GetPluginID() string {
	if o == nil || o.PluginID == nil {
		var ret string
		return ret
	}
	return *o.PluginID
}

// GetPluginIDOk returns a tuple with the PluginID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetPluginIDOk() (*string, bool) {
	if o == nil || o.PluginID == nil {
		return nil, false
	}
	return o.PluginID, true
}

// HasPluginID returns a boolean if a field has been set.
func (o *CSISnapshot) HasPluginID() bool {
	if o != nil && o.PluginID != nil {
		return true
	}

	return false
}

// SetPluginID gets a reference to the given string and assigns it to the PluginID field.
func (o *CSISnapshot) SetPluginID(v string) {
	o.PluginID = &v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *CSISnapshot) GetSecrets() map[string]string {
	if o == nil || o.Secrets == nil {
		var ret map[string]string
		return ret
	}
	return *o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetSecretsOk() (*map[string]string, bool) {
	if o == nil || o.Secrets == nil {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *CSISnapshot) HasSecrets() bool {
	if o != nil && o.Secrets != nil {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given map[string]string and assigns it to the Secrets field.
func (o *CSISnapshot) SetSecrets(v map[string]string) {
	o.Secrets = &v
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise.
func (o *CSISnapshot) GetSizeBytes() int64 {
	if o == nil || o.SizeBytes == nil {
		var ret int64
		return ret
	}
	return *o.SizeBytes
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetSizeBytesOk() (*int64, bool) {
	if o == nil || o.SizeBytes == nil {
		return nil, false
	}
	return o.SizeBytes, true
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *CSISnapshot) HasSizeBytes() bool {
	if o != nil && o.SizeBytes != nil {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given int64 and assigns it to the SizeBytes field.
func (o *CSISnapshot) SetSizeBytes(v int64) {
	o.SizeBytes = &v
}

// GetSourceVolumeID returns the SourceVolumeID field value if set, zero value otherwise.
func (o *CSISnapshot) GetSourceVolumeID() string {
	if o == nil || o.SourceVolumeID == nil {
		var ret string
		return ret
	}
	return *o.SourceVolumeID
}

// GetSourceVolumeIDOk returns a tuple with the SourceVolumeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSISnapshot) GetSourceVolumeIDOk() (*string, bool) {
	if o == nil || o.SourceVolumeID == nil {
		return nil, false
	}
	return o.SourceVolumeID, true
}

// HasSourceVolumeID returns a boolean if a field has been set.
func (o *CSISnapshot) HasSourceVolumeID() bool {
	if o != nil && o.SourceVolumeID != nil {
		return true
	}

	return false
}

// SetSourceVolumeID gets a reference to the given string and assigns it to the SourceVolumeID field.
func (o *CSISnapshot) SetSourceVolumeID(v string) {
	o.SourceVolumeID = &v
}

func (o CSISnapshot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateTime != nil {
		toSerialize["CreateTime"] = o.CreateTime
	}
	if o.ExternalSourceVolumeID != nil {
		toSerialize["ExternalSourceVolumeID"] = o.ExternalSourceVolumeID
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.IsReady != nil {
		toSerialize["IsReady"] = o.IsReady
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Parameters != nil {
		toSerialize["Parameters"] = o.Parameters
	}
	if o.PluginID != nil {
		toSerialize["PluginID"] = o.PluginID
	}
	if o.Secrets != nil {
		toSerialize["Secrets"] = o.Secrets
	}
	if o.SizeBytes != nil {
		toSerialize["SizeBytes"] = o.SizeBytes
	}
	if o.SourceVolumeID != nil {
		toSerialize["SourceVolumeID"] = o.SourceVolumeID
	}
	return json.Marshal(toSerialize)
}

type NullableCSISnapshot struct {
	value *CSISnapshot
	isSet bool
}

func (v NullableCSISnapshot) Get() *CSISnapshot {
	return v.value
}

func (v *NullableCSISnapshot) Set(val *CSISnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableCSISnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableCSISnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSISnapshot(val *CSISnapshot) *NullableCSISnapshot {
	return &NullableCSISnapshot{value: val, isSet: true}
}

func (v NullableCSISnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSISnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


