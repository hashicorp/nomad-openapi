/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// WorkloadIdentity struct for WorkloadIdentity
type WorkloadIdentity struct {
	Env *bool `json:"Env,omitempty"`
	File *bool `json:"File,omitempty"`
}

// NewWorkloadIdentity instantiates a new WorkloadIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadIdentity() *WorkloadIdentity {
	this := WorkloadIdentity{}
	return &this
}

// NewWorkloadIdentityWithDefaults instantiates a new WorkloadIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadIdentityWithDefaults() *WorkloadIdentity {
	this := WorkloadIdentity{}
	return &this
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *WorkloadIdentity) GetEnv() bool {
	if o == nil || o.Env == nil {
		var ret bool
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadIdentity) GetEnvOk() (*bool, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *WorkloadIdentity) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given bool and assigns it to the Env field.
func (o *WorkloadIdentity) SetEnv(v bool) {
	o.Env = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *WorkloadIdentity) GetFile() bool {
	if o == nil || o.File == nil {
		var ret bool
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadIdentity) GetFileOk() (*bool, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *WorkloadIdentity) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given bool and assigns it to the File field.
func (o *WorkloadIdentity) SetFile(v bool) {
	o.File = &v
}

func (o WorkloadIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Env != nil {
		toSerialize["Env"] = o.Env
	}
	if o.File != nil {
		toSerialize["File"] = o.File
	}
	return json.Marshal(toSerialize)
}

type NullableWorkloadIdentity struct {
	value *WorkloadIdentity
	isSet bool
}

func (v NullableWorkloadIdentity) Get() *WorkloadIdentity {
	return v.value
}

func (v *NullableWorkloadIdentity) Set(val *WorkloadIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadIdentity(val *WorkloadIdentity) *NullableWorkloadIdentity {
	return &NullableWorkloadIdentity{value: val, isSet: true}
}

func (v NullableWorkloadIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


