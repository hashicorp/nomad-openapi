/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AllocatedTaskResources struct for AllocatedTaskResources
type AllocatedTaskResources struct {
	Cpu NullableAllocatedCpuResources `json:"Cpu,omitempty"`
	Devices []AllocatedDeviceResource `json:"Devices,omitempty"`
	Memory NullableAllocatedMemoryResources `json:"Memory,omitempty"`
	Networks []NetworkResource `json:"Networks,omitempty"`
}

// NewAllocatedTaskResources instantiates a new AllocatedTaskResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocatedTaskResources() *AllocatedTaskResources {
	this := AllocatedTaskResources{}
	return &this
}

// NewAllocatedTaskResourcesWithDefaults instantiates a new AllocatedTaskResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocatedTaskResourcesWithDefaults() *AllocatedTaskResources {
	this := AllocatedTaskResources{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AllocatedTaskResources) GetCpu() AllocatedCpuResources {
	if o == nil || o.Cpu.Get() == nil {
		var ret AllocatedCpuResources
		return ret
	}
	return *o.Cpu.Get()
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllocatedTaskResources) GetCpuOk() (*AllocatedCpuResources, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Cpu.Get(), o.Cpu.IsSet()
}

// HasCpu returns a boolean if a field has been set.
func (o *AllocatedTaskResources) HasCpu() bool {
	if o != nil && o.Cpu.IsSet() {
		return true
	}

	return false
}

// SetCpu gets a reference to the given NullableAllocatedCpuResources and assigns it to the Cpu field.
func (o *AllocatedTaskResources) SetCpu(v AllocatedCpuResources) {
	o.Cpu.Set(&v)
}
// SetCpuNil sets the value for Cpu to be an explicit nil
func (o *AllocatedTaskResources) SetCpuNil() {
	o.Cpu.Set(nil)
}

// UnsetCpu ensures that no value is present for Cpu, not even an explicit nil
func (o *AllocatedTaskResources) UnsetCpu() {
	o.Cpu.Unset()
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *AllocatedTaskResources) GetDevices() []AllocatedDeviceResource {
	if o == nil || o.Devices == nil {
		var ret []AllocatedDeviceResource
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedTaskResources) GetDevicesOk() ([]AllocatedDeviceResource, bool) {
	if o == nil || o.Devices == nil {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *AllocatedTaskResources) HasDevices() bool {
	if o != nil && o.Devices != nil {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []AllocatedDeviceResource and assigns it to the Devices field.
func (o *AllocatedTaskResources) SetDevices(v []AllocatedDeviceResource) {
	o.Devices = v
}

// GetMemory returns the Memory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AllocatedTaskResources) GetMemory() AllocatedMemoryResources {
	if o == nil || o.Memory.Get() == nil {
		var ret AllocatedMemoryResources
		return ret
	}
	return *o.Memory.Get()
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllocatedTaskResources) GetMemoryOk() (*AllocatedMemoryResources, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Memory.Get(), o.Memory.IsSet()
}

// HasMemory returns a boolean if a field has been set.
func (o *AllocatedTaskResources) HasMemory() bool {
	if o != nil && o.Memory.IsSet() {
		return true
	}

	return false
}

// SetMemory gets a reference to the given NullableAllocatedMemoryResources and assigns it to the Memory field.
func (o *AllocatedTaskResources) SetMemory(v AllocatedMemoryResources) {
	o.Memory.Set(&v)
}
// SetMemoryNil sets the value for Memory to be an explicit nil
func (o *AllocatedTaskResources) SetMemoryNil() {
	o.Memory.Set(nil)
}

// UnsetMemory ensures that no value is present for Memory, not even an explicit nil
func (o *AllocatedTaskResources) UnsetMemory() {
	o.Memory.Unset()
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *AllocatedTaskResources) GetNetworks() []NetworkResource {
	if o == nil || o.Networks == nil {
		var ret []NetworkResource
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedTaskResources) GetNetworksOk() ([]NetworkResource, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *AllocatedTaskResources) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []NetworkResource and assigns it to the Networks field.
func (o *AllocatedTaskResources) SetNetworks(v []NetworkResource) {
	o.Networks = v
}

func (o AllocatedTaskResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cpu.IsSet() {
		toSerialize["Cpu"] = o.Cpu.Get()
	}
	if o.Devices != nil {
		toSerialize["Devices"] = o.Devices
	}
	if o.Memory.IsSet() {
		toSerialize["Memory"] = o.Memory.Get()
	}
	if o.Networks != nil {
		toSerialize["Networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableAllocatedTaskResources struct {
	value *AllocatedTaskResources
	isSet bool
}

func (v NullableAllocatedTaskResources) Get() *AllocatedTaskResources {
	return v.value
}

func (v *NullableAllocatedTaskResources) Set(val *AllocatedTaskResources) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocatedTaskResources) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocatedTaskResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocatedTaskResources(val *AllocatedTaskResources) *NullableAllocatedTaskResources {
	return &NullableAllocatedTaskResources{value: val, isSet: true}
}

func (v NullableAllocatedTaskResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocatedTaskResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


