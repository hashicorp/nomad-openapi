/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NodeEligibilityUpdateResponse struct for NodeEligibilityUpdateResponse
type NodeEligibilityUpdateResponse struct {
	EvalCreateIndex *int32 `json:"EvalCreateIndex,omitempty"`
	EvalIDs *[]string `json:"EvalIDs,omitempty"`
	LastIndex *int32 `json:"LastIndex,omitempty"`
	NodeModifyIndex *int32 `json:"NodeModifyIndex,omitempty"`
	RequestTime *int64 `json:"RequestTime,omitempty"`
}

// NewNodeEligibilityUpdateResponse instantiates a new NodeEligibilityUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeEligibilityUpdateResponse() *NodeEligibilityUpdateResponse {
	this := NodeEligibilityUpdateResponse{}
	return &this
}

// NewNodeEligibilityUpdateResponseWithDefaults instantiates a new NodeEligibilityUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeEligibilityUpdateResponseWithDefaults() *NodeEligibilityUpdateResponse {
	this := NodeEligibilityUpdateResponse{}
	return &this
}

// GetEvalCreateIndex returns the EvalCreateIndex field value if set, zero value otherwise.
func (o *NodeEligibilityUpdateResponse) GetEvalCreateIndex() int32 {
	if o == nil || o.EvalCreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.EvalCreateIndex
}

// GetEvalCreateIndexOk returns a tuple with the EvalCreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeEligibilityUpdateResponse) GetEvalCreateIndexOk() (*int32, bool) {
	if o == nil || o.EvalCreateIndex == nil {
		return nil, false
	}
	return o.EvalCreateIndex, true
}

// HasEvalCreateIndex returns a boolean if a field has been set.
func (o *NodeEligibilityUpdateResponse) HasEvalCreateIndex() bool {
	if o != nil && o.EvalCreateIndex != nil {
		return true
	}

	return false
}

// SetEvalCreateIndex gets a reference to the given int32 and assigns it to the EvalCreateIndex field.
func (o *NodeEligibilityUpdateResponse) SetEvalCreateIndex(v int32) {
	o.EvalCreateIndex = &v
}

// GetEvalIDs returns the EvalIDs field value if set, zero value otherwise.
func (o *NodeEligibilityUpdateResponse) GetEvalIDs() []string {
	if o == nil || o.EvalIDs == nil {
		var ret []string
		return ret
	}
	return *o.EvalIDs
}

// GetEvalIDsOk returns a tuple with the EvalIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeEligibilityUpdateResponse) GetEvalIDsOk() (*[]string, bool) {
	if o == nil || o.EvalIDs == nil {
		return nil, false
	}
	return o.EvalIDs, true
}

// HasEvalIDs returns a boolean if a field has been set.
func (o *NodeEligibilityUpdateResponse) HasEvalIDs() bool {
	if o != nil && o.EvalIDs != nil {
		return true
	}

	return false
}

// SetEvalIDs gets a reference to the given []string and assigns it to the EvalIDs field.
func (o *NodeEligibilityUpdateResponse) SetEvalIDs(v []string) {
	o.EvalIDs = &v
}

// GetLastIndex returns the LastIndex field value if set, zero value otherwise.
func (o *NodeEligibilityUpdateResponse) GetLastIndex() int32 {
	if o == nil || o.LastIndex == nil {
		var ret int32
		return ret
	}
	return *o.LastIndex
}

// GetLastIndexOk returns a tuple with the LastIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeEligibilityUpdateResponse) GetLastIndexOk() (*int32, bool) {
	if o == nil || o.LastIndex == nil {
		return nil, false
	}
	return o.LastIndex, true
}

// HasLastIndex returns a boolean if a field has been set.
func (o *NodeEligibilityUpdateResponse) HasLastIndex() bool {
	if o != nil && o.LastIndex != nil {
		return true
	}

	return false
}

// SetLastIndex gets a reference to the given int32 and assigns it to the LastIndex field.
func (o *NodeEligibilityUpdateResponse) SetLastIndex(v int32) {
	o.LastIndex = &v
}

// GetNodeModifyIndex returns the NodeModifyIndex field value if set, zero value otherwise.
func (o *NodeEligibilityUpdateResponse) GetNodeModifyIndex() int32 {
	if o == nil || o.NodeModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.NodeModifyIndex
}

// GetNodeModifyIndexOk returns a tuple with the NodeModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeEligibilityUpdateResponse) GetNodeModifyIndexOk() (*int32, bool) {
	if o == nil || o.NodeModifyIndex == nil {
		return nil, false
	}
	return o.NodeModifyIndex, true
}

// HasNodeModifyIndex returns a boolean if a field has been set.
func (o *NodeEligibilityUpdateResponse) HasNodeModifyIndex() bool {
	if o != nil && o.NodeModifyIndex != nil {
		return true
	}

	return false
}

// SetNodeModifyIndex gets a reference to the given int32 and assigns it to the NodeModifyIndex field.
func (o *NodeEligibilityUpdateResponse) SetNodeModifyIndex(v int32) {
	o.NodeModifyIndex = &v
}

// GetRequestTime returns the RequestTime field value if set, zero value otherwise.
func (o *NodeEligibilityUpdateResponse) GetRequestTime() int64 {
	if o == nil || o.RequestTime == nil {
		var ret int64
		return ret
	}
	return *o.RequestTime
}

// GetRequestTimeOk returns a tuple with the RequestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeEligibilityUpdateResponse) GetRequestTimeOk() (*int64, bool) {
	if o == nil || o.RequestTime == nil {
		return nil, false
	}
	return o.RequestTime, true
}

// HasRequestTime returns a boolean if a field has been set.
func (o *NodeEligibilityUpdateResponse) HasRequestTime() bool {
	if o != nil && o.RequestTime != nil {
		return true
	}

	return false
}

// SetRequestTime gets a reference to the given int64 and assigns it to the RequestTime field.
func (o *NodeEligibilityUpdateResponse) SetRequestTime(v int64) {
	o.RequestTime = &v
}

func (o NodeEligibilityUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EvalCreateIndex != nil {
		toSerialize["EvalCreateIndex"] = o.EvalCreateIndex
	}
	if o.EvalIDs != nil {
		toSerialize["EvalIDs"] = o.EvalIDs
	}
	if o.LastIndex != nil {
		toSerialize["LastIndex"] = o.LastIndex
	}
	if o.NodeModifyIndex != nil {
		toSerialize["NodeModifyIndex"] = o.NodeModifyIndex
	}
	if o.RequestTime != nil {
		toSerialize["RequestTime"] = o.RequestTime
	}
	return json.Marshal(toSerialize)
}

type NullableNodeEligibilityUpdateResponse struct {
	value *NodeEligibilityUpdateResponse
	isSet bool
}

func (v NullableNodeEligibilityUpdateResponse) Get() *NodeEligibilityUpdateResponse {
	return v.value
}

func (v *NullableNodeEligibilityUpdateResponse) Set(val *NodeEligibilityUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeEligibilityUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeEligibilityUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeEligibilityUpdateResponse(val *NodeEligibilityUpdateResponse) *NullableNodeEligibilityUpdateResponse {
	return &NullableNodeEligibilityUpdateResponse{value: val, isSet: true}
}

func (v NullableNodeEligibilityUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeEligibilityUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


