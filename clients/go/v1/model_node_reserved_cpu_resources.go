/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NodeReservedCpuResources struct for NodeReservedCpuResources
type NodeReservedCpuResources struct {
	CpuShares *int32 `json:"CpuShares,omitempty"`
}

// NewNodeReservedCpuResources instantiates a new NodeReservedCpuResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeReservedCpuResources() *NodeReservedCpuResources {
	this := NodeReservedCpuResources{}
	return &this
}

// NewNodeReservedCpuResourcesWithDefaults instantiates a new NodeReservedCpuResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeReservedCpuResourcesWithDefaults() *NodeReservedCpuResources {
	this := NodeReservedCpuResources{}
	return &this
}

// GetCpuShares returns the CpuShares field value if set, zero value otherwise.
func (o *NodeReservedCpuResources) GetCpuShares() int32 {
	if o == nil || o.CpuShares == nil {
		var ret int32
		return ret
	}
	return *o.CpuShares
}

// GetCpuSharesOk returns a tuple with the CpuShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeReservedCpuResources) GetCpuSharesOk() (*int32, bool) {
	if o == nil || o.CpuShares == nil {
		return nil, false
	}
	return o.CpuShares, true
}

// HasCpuShares returns a boolean if a field has been set.
func (o *NodeReservedCpuResources) HasCpuShares() bool {
	if o != nil && o.CpuShares != nil {
		return true
	}

	return false
}

// SetCpuShares gets a reference to the given int32 and assigns it to the CpuShares field.
func (o *NodeReservedCpuResources) SetCpuShares(v int32) {
	o.CpuShares = &v
}

func (o NodeReservedCpuResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CpuShares != nil {
		toSerialize["CpuShares"] = o.CpuShares
	}
	return json.Marshal(toSerialize)
}

type NullableNodeReservedCpuResources struct {
	value *NodeReservedCpuResources
	isSet bool
}

func (v NullableNodeReservedCpuResources) Get() *NodeReservedCpuResources {
	return v.value
}

func (v *NullableNodeReservedCpuResources) Set(val *NodeReservedCpuResources) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeReservedCpuResources) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeReservedCpuResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeReservedCpuResources(val *NodeReservedCpuResources) *NullableNodeReservedCpuResources {
	return &NullableNodeReservedCpuResources{value: val, isSet: true}
}

func (v NullableNodeReservedCpuResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeReservedCpuResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


