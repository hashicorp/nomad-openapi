/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// JobsParseRequest struct for JobsParseRequest
type JobsParseRequest struct {
	Canonicalize *bool `json:"Canonicalize,omitempty"`
	JobHCL *string `json:"JobHCL,omitempty"`
	Hclv1 *bool `json:"hclv1,omitempty"`
}

// NewJobsParseRequest instantiates a new JobsParseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsParseRequest() *JobsParseRequest {
	this := JobsParseRequest{}
	return &this
}

// NewJobsParseRequestWithDefaults instantiates a new JobsParseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsParseRequestWithDefaults() *JobsParseRequest {
	this := JobsParseRequest{}
	return &this
}

// GetCanonicalize returns the Canonicalize field value if set, zero value otherwise.
func (o *JobsParseRequest) GetCanonicalize() bool {
	if o == nil || o.Canonicalize == nil {
		var ret bool
		return ret
	}
	return *o.Canonicalize
}

// GetCanonicalizeOk returns a tuple with the Canonicalize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsParseRequest) GetCanonicalizeOk() (*bool, bool) {
	if o == nil || o.Canonicalize == nil {
		return nil, false
	}
	return o.Canonicalize, true
}

// HasCanonicalize returns a boolean if a field has been set.
func (o *JobsParseRequest) HasCanonicalize() bool {
	if o != nil && o.Canonicalize != nil {
		return true
	}

	return false
}

// SetCanonicalize gets a reference to the given bool and assigns it to the Canonicalize field.
func (o *JobsParseRequest) SetCanonicalize(v bool) {
	o.Canonicalize = &v
}

// GetJobHCL returns the JobHCL field value if set, zero value otherwise.
func (o *JobsParseRequest) GetJobHCL() string {
	if o == nil || o.JobHCL == nil {
		var ret string
		return ret
	}
	return *o.JobHCL
}

// GetJobHCLOk returns a tuple with the JobHCL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsParseRequest) GetJobHCLOk() (*string, bool) {
	if o == nil || o.JobHCL == nil {
		return nil, false
	}
	return o.JobHCL, true
}

// HasJobHCL returns a boolean if a field has been set.
func (o *JobsParseRequest) HasJobHCL() bool {
	if o != nil && o.JobHCL != nil {
		return true
	}

	return false
}

// SetJobHCL gets a reference to the given string and assigns it to the JobHCL field.
func (o *JobsParseRequest) SetJobHCL(v string) {
	o.JobHCL = &v
}

// GetHclv1 returns the Hclv1 field value if set, zero value otherwise.
func (o *JobsParseRequest) GetHclv1() bool {
	if o == nil || o.Hclv1 == nil {
		var ret bool
		return ret
	}
	return *o.Hclv1
}

// GetHclv1Ok returns a tuple with the Hclv1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsParseRequest) GetHclv1Ok() (*bool, bool) {
	if o == nil || o.Hclv1 == nil {
		return nil, false
	}
	return o.Hclv1, true
}

// HasHclv1 returns a boolean if a field has been set.
func (o *JobsParseRequest) HasHclv1() bool {
	if o != nil && o.Hclv1 != nil {
		return true
	}

	return false
}

// SetHclv1 gets a reference to the given bool and assigns it to the Hclv1 field.
func (o *JobsParseRequest) SetHclv1(v bool) {
	o.Hclv1 = &v
}

func (o JobsParseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Canonicalize != nil {
		toSerialize["Canonicalize"] = o.Canonicalize
	}
	if o.JobHCL != nil {
		toSerialize["JobHCL"] = o.JobHCL
	}
	if o.Hclv1 != nil {
		toSerialize["hclv1"] = o.Hclv1
	}
	return json.Marshal(toSerialize)
}

type NullableJobsParseRequest struct {
	value *JobsParseRequest
	isSet bool
}

func (v NullableJobsParseRequest) Get() *JobsParseRequest {
	return v.value
}

func (v *NullableJobsParseRequest) Set(val *JobsParseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsParseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsParseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsParseRequest(val *JobsParseRequest) *NullableJobsParseRequest {
	return &NullableJobsParseRequest{value: val, isSet: true}
}

func (v NullableJobsParseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsParseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


