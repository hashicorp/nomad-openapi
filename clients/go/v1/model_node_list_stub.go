/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NodeListStub struct for NodeListStub
type NodeListStub struct {
	Address *string `json:"Address,omitempty"`
	Attributes *map[string]string `json:"Attributes,omitempty"`
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	Datacenter *string `json:"Datacenter,omitempty"`
	Drain *bool `json:"Drain,omitempty"`
	Drivers *map[string]DriverInfo `json:"Drivers,omitempty"`
	ID *string `json:"ID,omitempty"`
	LastDrain NullableDrainMetadata `json:"LastDrain,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	Name *string `json:"Name,omitempty"`
	NodeClass *string `json:"NodeClass,omitempty"`
	NodeResources NullableNodeResources `json:"NodeResources,omitempty"`
	ReservedResources NullableNodeReservedResources `json:"ReservedResources,omitempty"`
	SchedulingEligibility *string `json:"SchedulingEligibility,omitempty"`
	Status *string `json:"Status,omitempty"`
	StatusDescription *string `json:"StatusDescription,omitempty"`
	Version *string `json:"Version,omitempty"`
}

// NewNodeListStub instantiates a new NodeListStub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeListStub() *NodeListStub {
	this := NodeListStub{}
	return &this
}

// NewNodeListStubWithDefaults instantiates a new NodeListStub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeListStubWithDefaults() *NodeListStub {
	this := NodeListStub{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *NodeListStub) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *NodeListStub) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *NodeListStub) SetAddress(v string) {
	o.Address = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *NodeListStub) GetAttributes() map[string]string {
	if o == nil || o.Attributes == nil {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *NodeListStub) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *NodeListStub) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *NodeListStub) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *NodeListStub) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *NodeListStub) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetDatacenter returns the Datacenter field value if set, zero value otherwise.
func (o *NodeListStub) GetDatacenter() string {
	if o == nil || o.Datacenter == nil {
		var ret string
		return ret
	}
	return *o.Datacenter
}

// GetDatacenterOk returns a tuple with the Datacenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetDatacenterOk() (*string, bool) {
	if o == nil || o.Datacenter == nil {
		return nil, false
	}
	return o.Datacenter, true
}

// HasDatacenter returns a boolean if a field has been set.
func (o *NodeListStub) HasDatacenter() bool {
	if o != nil && o.Datacenter != nil {
		return true
	}

	return false
}

// SetDatacenter gets a reference to the given string and assigns it to the Datacenter field.
func (o *NodeListStub) SetDatacenter(v string) {
	o.Datacenter = &v
}

// GetDrain returns the Drain field value if set, zero value otherwise.
func (o *NodeListStub) GetDrain() bool {
	if o == nil || o.Drain == nil {
		var ret bool
		return ret
	}
	return *o.Drain
}

// GetDrainOk returns a tuple with the Drain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetDrainOk() (*bool, bool) {
	if o == nil || o.Drain == nil {
		return nil, false
	}
	return o.Drain, true
}

// HasDrain returns a boolean if a field has been set.
func (o *NodeListStub) HasDrain() bool {
	if o != nil && o.Drain != nil {
		return true
	}

	return false
}

// SetDrain gets a reference to the given bool and assigns it to the Drain field.
func (o *NodeListStub) SetDrain(v bool) {
	o.Drain = &v
}

// GetDrivers returns the Drivers field value if set, zero value otherwise.
func (o *NodeListStub) GetDrivers() map[string]DriverInfo {
	if o == nil || o.Drivers == nil {
		var ret map[string]DriverInfo
		return ret
	}
	return *o.Drivers
}

// GetDriversOk returns a tuple with the Drivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetDriversOk() (*map[string]DriverInfo, bool) {
	if o == nil || o.Drivers == nil {
		return nil, false
	}
	return o.Drivers, true
}

// HasDrivers returns a boolean if a field has been set.
func (o *NodeListStub) HasDrivers() bool {
	if o != nil && o.Drivers != nil {
		return true
	}

	return false
}

// SetDrivers gets a reference to the given map[string]DriverInfo and assigns it to the Drivers field.
func (o *NodeListStub) SetDrivers(v map[string]DriverInfo) {
	o.Drivers = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *NodeListStub) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *NodeListStub) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *NodeListStub) SetID(v string) {
	o.ID = &v
}

// GetLastDrain returns the LastDrain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeListStub) GetLastDrain() DrainMetadata {
	if o == nil || o.LastDrain.Get() == nil {
		var ret DrainMetadata
		return ret
	}
	return *o.LastDrain.Get()
}

// GetLastDrainOk returns a tuple with the LastDrain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeListStub) GetLastDrainOk() (*DrainMetadata, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastDrain.Get(), o.LastDrain.IsSet()
}

// HasLastDrain returns a boolean if a field has been set.
func (o *NodeListStub) HasLastDrain() bool {
	if o != nil && o.LastDrain.IsSet() {
		return true
	}

	return false
}

// SetLastDrain gets a reference to the given NullableDrainMetadata and assigns it to the LastDrain field.
func (o *NodeListStub) SetLastDrain(v DrainMetadata) {
	o.LastDrain.Set(&v)
}
// SetLastDrainNil sets the value for LastDrain to be an explicit nil
func (o *NodeListStub) SetLastDrainNil() {
	o.LastDrain.Set(nil)
}

// UnsetLastDrain ensures that no value is present for LastDrain, not even an explicit nil
func (o *NodeListStub) UnsetLastDrain() {
	o.LastDrain.Unset()
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *NodeListStub) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *NodeListStub) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *NodeListStub) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NodeListStub) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NodeListStub) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NodeListStub) SetName(v string) {
	o.Name = &v
}

// GetNodeClass returns the NodeClass field value if set, zero value otherwise.
func (o *NodeListStub) GetNodeClass() string {
	if o == nil || o.NodeClass == nil {
		var ret string
		return ret
	}
	return *o.NodeClass
}

// GetNodeClassOk returns a tuple with the NodeClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetNodeClassOk() (*string, bool) {
	if o == nil || o.NodeClass == nil {
		return nil, false
	}
	return o.NodeClass, true
}

// HasNodeClass returns a boolean if a field has been set.
func (o *NodeListStub) HasNodeClass() bool {
	if o != nil && o.NodeClass != nil {
		return true
	}

	return false
}

// SetNodeClass gets a reference to the given string and assigns it to the NodeClass field.
func (o *NodeListStub) SetNodeClass(v string) {
	o.NodeClass = &v
}

// GetNodeResources returns the NodeResources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeListStub) GetNodeResources() NodeResources {
	if o == nil || o.NodeResources.Get() == nil {
		var ret NodeResources
		return ret
	}
	return *o.NodeResources.Get()
}

// GetNodeResourcesOk returns a tuple with the NodeResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeListStub) GetNodeResourcesOk() (*NodeResources, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeResources.Get(), o.NodeResources.IsSet()
}

// HasNodeResources returns a boolean if a field has been set.
func (o *NodeListStub) HasNodeResources() bool {
	if o != nil && o.NodeResources.IsSet() {
		return true
	}

	return false
}

// SetNodeResources gets a reference to the given NullableNodeResources and assigns it to the NodeResources field.
func (o *NodeListStub) SetNodeResources(v NodeResources) {
	o.NodeResources.Set(&v)
}
// SetNodeResourcesNil sets the value for NodeResources to be an explicit nil
func (o *NodeListStub) SetNodeResourcesNil() {
	o.NodeResources.Set(nil)
}

// UnsetNodeResources ensures that no value is present for NodeResources, not even an explicit nil
func (o *NodeListStub) UnsetNodeResources() {
	o.NodeResources.Unset()
}

// GetReservedResources returns the ReservedResources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeListStub) GetReservedResources() NodeReservedResources {
	if o == nil || o.ReservedResources.Get() == nil {
		var ret NodeReservedResources
		return ret
	}
	return *o.ReservedResources.Get()
}

// GetReservedResourcesOk returns a tuple with the ReservedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeListStub) GetReservedResourcesOk() (*NodeReservedResources, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReservedResources.Get(), o.ReservedResources.IsSet()
}

// HasReservedResources returns a boolean if a field has been set.
func (o *NodeListStub) HasReservedResources() bool {
	if o != nil && o.ReservedResources.IsSet() {
		return true
	}

	return false
}

// SetReservedResources gets a reference to the given NullableNodeReservedResources and assigns it to the ReservedResources field.
func (o *NodeListStub) SetReservedResources(v NodeReservedResources) {
	o.ReservedResources.Set(&v)
}
// SetReservedResourcesNil sets the value for ReservedResources to be an explicit nil
func (o *NodeListStub) SetReservedResourcesNil() {
	o.ReservedResources.Set(nil)
}

// UnsetReservedResources ensures that no value is present for ReservedResources, not even an explicit nil
func (o *NodeListStub) UnsetReservedResources() {
	o.ReservedResources.Unset()
}

// GetSchedulingEligibility returns the SchedulingEligibility field value if set, zero value otherwise.
func (o *NodeListStub) GetSchedulingEligibility() string {
	if o == nil || o.SchedulingEligibility == nil {
		var ret string
		return ret
	}
	return *o.SchedulingEligibility
}

// GetSchedulingEligibilityOk returns a tuple with the SchedulingEligibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetSchedulingEligibilityOk() (*string, bool) {
	if o == nil || o.SchedulingEligibility == nil {
		return nil, false
	}
	return o.SchedulingEligibility, true
}

// HasSchedulingEligibility returns a boolean if a field has been set.
func (o *NodeListStub) HasSchedulingEligibility() bool {
	if o != nil && o.SchedulingEligibility != nil {
		return true
	}

	return false
}

// SetSchedulingEligibility gets a reference to the given string and assigns it to the SchedulingEligibility field.
func (o *NodeListStub) SetSchedulingEligibility(v string) {
	o.SchedulingEligibility = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NodeListStub) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NodeListStub) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NodeListStub) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDescription returns the StatusDescription field value if set, zero value otherwise.
func (o *NodeListStub) GetStatusDescription() string {
	if o == nil || o.StatusDescription == nil {
		var ret string
		return ret
	}
	return *o.StatusDescription
}

// GetStatusDescriptionOk returns a tuple with the StatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetStatusDescriptionOk() (*string, bool) {
	if o == nil || o.StatusDescription == nil {
		return nil, false
	}
	return o.StatusDescription, true
}

// HasStatusDescription returns a boolean if a field has been set.
func (o *NodeListStub) HasStatusDescription() bool {
	if o != nil && o.StatusDescription != nil {
		return true
	}

	return false
}

// SetStatusDescription gets a reference to the given string and assigns it to the StatusDescription field.
func (o *NodeListStub) SetStatusDescription(v string) {
	o.StatusDescription = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *NodeListStub) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeListStub) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *NodeListStub) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *NodeListStub) SetVersion(v string) {
	o.Version = &v
}

func (o NodeListStub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["Address"] = o.Address
	}
	if o.Attributes != nil {
		toSerialize["Attributes"] = o.Attributes
	}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.Datacenter != nil {
		toSerialize["Datacenter"] = o.Datacenter
	}
	if o.Drain != nil {
		toSerialize["Drain"] = o.Drain
	}
	if o.Drivers != nil {
		toSerialize["Drivers"] = o.Drivers
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.LastDrain.IsSet() {
		toSerialize["LastDrain"] = o.LastDrain.Get()
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.NodeClass != nil {
		toSerialize["NodeClass"] = o.NodeClass
	}
	if o.NodeResources.IsSet() {
		toSerialize["NodeResources"] = o.NodeResources.Get()
	}
	if o.ReservedResources.IsSet() {
		toSerialize["ReservedResources"] = o.ReservedResources.Get()
	}
	if o.SchedulingEligibility != nil {
		toSerialize["SchedulingEligibility"] = o.SchedulingEligibility
	}
	if o.Status != nil {
		toSerialize["Status"] = o.Status
	}
	if o.StatusDescription != nil {
		toSerialize["StatusDescription"] = o.StatusDescription
	}
	if o.Version != nil {
		toSerialize["Version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableNodeListStub struct {
	value *NodeListStub
	isSet bool
}

func (v NullableNodeListStub) Get() *NodeListStub {
	return v.value
}

func (v *NullableNodeListStub) Set(val *NodeListStub) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeListStub) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeListStub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeListStub(val *NodeListStub) *NullableNodeListStub {
	return &NullableNodeListStub{value: val, isSet: true}
}

func (v NullableNodeListStub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeListStub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


