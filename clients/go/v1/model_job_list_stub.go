/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// JobListStub struct for JobListStub
type JobListStub struct {
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	Datacenters *[]string `json:"Datacenters,omitempty"`
	ID *string `json:"ID,omitempty"`
	JobModifyIndex *int32 `json:"JobModifyIndex,omitempty"`
	JobSummary *JobSummary `json:"JobSummary,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	Name *string `json:"Name,omitempty"`
	Namespace *string `json:"Namespace,omitempty"`
	ParameterizedJob *bool `json:"ParameterizedJob,omitempty"`
	ParentID *string `json:"ParentID,omitempty"`
	Periodic *bool `json:"Periodic,omitempty"`
	Priority *int32 `json:"Priority,omitempty"`
	Status *string `json:"Status,omitempty"`
	StatusDescription *string `json:"StatusDescription,omitempty"`
	Stop *bool `json:"Stop,omitempty"`
	SubmitTime *int64 `json:"SubmitTime,omitempty"`
	Type *string `json:"Type,omitempty"`
}

// NewJobListStub instantiates a new JobListStub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobListStub() *JobListStub {
	this := JobListStub{}
	return &this
}

// NewJobListStubWithDefaults instantiates a new JobListStub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobListStubWithDefaults() *JobListStub {
	this := JobListStub{}
	return &this
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *JobListStub) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *JobListStub) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *JobListStub) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetDatacenters returns the Datacenters field value if set, zero value otherwise.
func (o *JobListStub) GetDatacenters() []string {
	if o == nil || o.Datacenters == nil {
		var ret []string
		return ret
	}
	return *o.Datacenters
}

// GetDatacentersOk returns a tuple with the Datacenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetDatacentersOk() (*[]string, bool) {
	if o == nil || o.Datacenters == nil {
		return nil, false
	}
	return o.Datacenters, true
}

// HasDatacenters returns a boolean if a field has been set.
func (o *JobListStub) HasDatacenters() bool {
	if o != nil && o.Datacenters != nil {
		return true
	}

	return false
}

// SetDatacenters gets a reference to the given []string and assigns it to the Datacenters field.
func (o *JobListStub) SetDatacenters(v []string) {
	o.Datacenters = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *JobListStub) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *JobListStub) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *JobListStub) SetID(v string) {
	o.ID = &v
}

// GetJobModifyIndex returns the JobModifyIndex field value if set, zero value otherwise.
func (o *JobListStub) GetJobModifyIndex() int32 {
	if o == nil || o.JobModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.JobModifyIndex
}

// GetJobModifyIndexOk returns a tuple with the JobModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetJobModifyIndexOk() (*int32, bool) {
	if o == nil || o.JobModifyIndex == nil {
		return nil, false
	}
	return o.JobModifyIndex, true
}

// HasJobModifyIndex returns a boolean if a field has been set.
func (o *JobListStub) HasJobModifyIndex() bool {
	if o != nil && o.JobModifyIndex != nil {
		return true
	}

	return false
}

// SetJobModifyIndex gets a reference to the given int32 and assigns it to the JobModifyIndex field.
func (o *JobListStub) SetJobModifyIndex(v int32) {
	o.JobModifyIndex = &v
}

// GetJobSummary returns the JobSummary field value if set, zero value otherwise.
func (o *JobListStub) GetJobSummary() JobSummary {
	if o == nil || o.JobSummary == nil {
		var ret JobSummary
		return ret
	}
	return *o.JobSummary
}

// GetJobSummaryOk returns a tuple with the JobSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetJobSummaryOk() (*JobSummary, bool) {
	if o == nil || o.JobSummary == nil {
		return nil, false
	}
	return o.JobSummary, true
}

// HasJobSummary returns a boolean if a field has been set.
func (o *JobListStub) HasJobSummary() bool {
	if o != nil && o.JobSummary != nil {
		return true
	}

	return false
}

// SetJobSummary gets a reference to the given JobSummary and assigns it to the JobSummary field.
func (o *JobListStub) SetJobSummary(v JobSummary) {
	o.JobSummary = &v
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *JobListStub) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *JobListStub) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *JobListStub) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *JobListStub) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *JobListStub) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *JobListStub) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *JobListStub) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *JobListStub) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *JobListStub) SetNamespace(v string) {
	o.Namespace = &v
}

// GetParameterizedJob returns the ParameterizedJob field value if set, zero value otherwise.
func (o *JobListStub) GetParameterizedJob() bool {
	if o == nil || o.ParameterizedJob == nil {
		var ret bool
		return ret
	}
	return *o.ParameterizedJob
}

// GetParameterizedJobOk returns a tuple with the ParameterizedJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetParameterizedJobOk() (*bool, bool) {
	if o == nil || o.ParameterizedJob == nil {
		return nil, false
	}
	return o.ParameterizedJob, true
}

// HasParameterizedJob returns a boolean if a field has been set.
func (o *JobListStub) HasParameterizedJob() bool {
	if o != nil && o.ParameterizedJob != nil {
		return true
	}

	return false
}

// SetParameterizedJob gets a reference to the given bool and assigns it to the ParameterizedJob field.
func (o *JobListStub) SetParameterizedJob(v bool) {
	o.ParameterizedJob = &v
}

// GetParentID returns the ParentID field value if set, zero value otherwise.
func (o *JobListStub) GetParentID() string {
	if o == nil || o.ParentID == nil {
		var ret string
		return ret
	}
	return *o.ParentID
}

// GetParentIDOk returns a tuple with the ParentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetParentIDOk() (*string, bool) {
	if o == nil || o.ParentID == nil {
		return nil, false
	}
	return o.ParentID, true
}

// HasParentID returns a boolean if a field has been set.
func (o *JobListStub) HasParentID() bool {
	if o != nil && o.ParentID != nil {
		return true
	}

	return false
}

// SetParentID gets a reference to the given string and assigns it to the ParentID field.
func (o *JobListStub) SetParentID(v string) {
	o.ParentID = &v
}

// GetPeriodic returns the Periodic field value if set, zero value otherwise.
func (o *JobListStub) GetPeriodic() bool {
	if o == nil || o.Periodic == nil {
		var ret bool
		return ret
	}
	return *o.Periodic
}

// GetPeriodicOk returns a tuple with the Periodic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetPeriodicOk() (*bool, bool) {
	if o == nil || o.Periodic == nil {
		return nil, false
	}
	return o.Periodic, true
}

// HasPeriodic returns a boolean if a field has been set.
func (o *JobListStub) HasPeriodic() bool {
	if o != nil && o.Periodic != nil {
		return true
	}

	return false
}

// SetPeriodic gets a reference to the given bool and assigns it to the Periodic field.
func (o *JobListStub) SetPeriodic(v bool) {
	o.Periodic = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *JobListStub) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *JobListStub) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *JobListStub) SetPriority(v int32) {
	o.Priority = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JobListStub) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JobListStub) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *JobListStub) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDescription returns the StatusDescription field value if set, zero value otherwise.
func (o *JobListStub) GetStatusDescription() string {
	if o == nil || o.StatusDescription == nil {
		var ret string
		return ret
	}
	return *o.StatusDescription
}

// GetStatusDescriptionOk returns a tuple with the StatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetStatusDescriptionOk() (*string, bool) {
	if o == nil || o.StatusDescription == nil {
		return nil, false
	}
	return o.StatusDescription, true
}

// HasStatusDescription returns a boolean if a field has been set.
func (o *JobListStub) HasStatusDescription() bool {
	if o != nil && o.StatusDescription != nil {
		return true
	}

	return false
}

// SetStatusDescription gets a reference to the given string and assigns it to the StatusDescription field.
func (o *JobListStub) SetStatusDescription(v string) {
	o.StatusDescription = &v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *JobListStub) GetStop() bool {
	if o == nil || o.Stop == nil {
		var ret bool
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetStopOk() (*bool, bool) {
	if o == nil || o.Stop == nil {
		return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *JobListStub) HasStop() bool {
	if o != nil && o.Stop != nil {
		return true
	}

	return false
}

// SetStop gets a reference to the given bool and assigns it to the Stop field.
func (o *JobListStub) SetStop(v bool) {
	o.Stop = &v
}

// GetSubmitTime returns the SubmitTime field value if set, zero value otherwise.
func (o *JobListStub) GetSubmitTime() int64 {
	if o == nil || o.SubmitTime == nil {
		var ret int64
		return ret
	}
	return *o.SubmitTime
}

// GetSubmitTimeOk returns a tuple with the SubmitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetSubmitTimeOk() (*int64, bool) {
	if o == nil || o.SubmitTime == nil {
		return nil, false
	}
	return o.SubmitTime, true
}

// HasSubmitTime returns a boolean if a field has been set.
func (o *JobListStub) HasSubmitTime() bool {
	if o != nil && o.SubmitTime != nil {
		return true
	}

	return false
}

// SetSubmitTime gets a reference to the given int64 and assigns it to the SubmitTime field.
func (o *JobListStub) SetSubmitTime(v int64) {
	o.SubmitTime = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *JobListStub) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobListStub) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *JobListStub) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *JobListStub) SetType(v string) {
	o.Type = &v
}

func (o JobListStub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.Datacenters != nil {
		toSerialize["Datacenters"] = o.Datacenters
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.JobModifyIndex != nil {
		toSerialize["JobModifyIndex"] = o.JobModifyIndex
	}
	if o.JobSummary != nil {
		toSerialize["JobSummary"] = o.JobSummary
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.ParameterizedJob != nil {
		toSerialize["ParameterizedJob"] = o.ParameterizedJob
	}
	if o.ParentID != nil {
		toSerialize["ParentID"] = o.ParentID
	}
	if o.Periodic != nil {
		toSerialize["Periodic"] = o.Periodic
	}
	if o.Priority != nil {
		toSerialize["Priority"] = o.Priority
	}
	if o.Status != nil {
		toSerialize["Status"] = o.Status
	}
	if o.StatusDescription != nil {
		toSerialize["StatusDescription"] = o.StatusDescription
	}
	if o.Stop != nil {
		toSerialize["Stop"] = o.Stop
	}
	if o.SubmitTime != nil {
		toSerialize["SubmitTime"] = o.SubmitTime
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableJobListStub struct {
	value *JobListStub
	isSet bool
}

func (v NullableJobListStub) Get() *JobListStub {
	return v.value
}

func (v *NullableJobListStub) Set(val *JobListStub) {
	v.value = val
	v.isSet = true
}

func (v NullableJobListStub) IsSet() bool {
	return v.isSet
}

func (v *NullableJobListStub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobListStub(val *JobListStub) *NullableJobListStub {
	return &NullableJobListStub{value: val, isSet: true}
}

func (v NullableJobListStub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobListStub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


