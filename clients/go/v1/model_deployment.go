/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Deployment struct for Deployment
type Deployment struct {
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	ID *string `json:"ID,omitempty"`
	IsMultiregion *bool `json:"IsMultiregion,omitempty"`
	JobCreateIndex *int32 `json:"JobCreateIndex,omitempty"`
	JobID *string `json:"JobID,omitempty"`
	JobModifyIndex *int32 `json:"JobModifyIndex,omitempty"`
	JobSpecModifyIndex *int32 `json:"JobSpecModifyIndex,omitempty"`
	JobVersion *int32 `json:"JobVersion,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	Namespace *string `json:"Namespace,omitempty"`
	Status *string `json:"Status,omitempty"`
	StatusDescription *string `json:"StatusDescription,omitempty"`
	TaskGroups *map[string]DeploymentState `json:"TaskGroups,omitempty"`
}

// NewDeployment instantiates a new Deployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployment() *Deployment {
	this := Deployment{}
	return &this
}

// NewDeploymentWithDefaults instantiates a new Deployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentWithDefaults() *Deployment {
	this := Deployment{}
	return &this
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *Deployment) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *Deployment) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *Deployment) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *Deployment) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *Deployment) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *Deployment) SetID(v string) {
	o.ID = &v
}

// GetIsMultiregion returns the IsMultiregion field value if set, zero value otherwise.
func (o *Deployment) GetIsMultiregion() bool {
	if o == nil || o.IsMultiregion == nil {
		var ret bool
		return ret
	}
	return *o.IsMultiregion
}

// GetIsMultiregionOk returns a tuple with the IsMultiregion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetIsMultiregionOk() (*bool, bool) {
	if o == nil || o.IsMultiregion == nil {
		return nil, false
	}
	return o.IsMultiregion, true
}

// HasIsMultiregion returns a boolean if a field has been set.
func (o *Deployment) HasIsMultiregion() bool {
	if o != nil && o.IsMultiregion != nil {
		return true
	}

	return false
}

// SetIsMultiregion gets a reference to the given bool and assigns it to the IsMultiregion field.
func (o *Deployment) SetIsMultiregion(v bool) {
	o.IsMultiregion = &v
}

// GetJobCreateIndex returns the JobCreateIndex field value if set, zero value otherwise.
func (o *Deployment) GetJobCreateIndex() int32 {
	if o == nil || o.JobCreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.JobCreateIndex
}

// GetJobCreateIndexOk returns a tuple with the JobCreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetJobCreateIndexOk() (*int32, bool) {
	if o == nil || o.JobCreateIndex == nil {
		return nil, false
	}
	return o.JobCreateIndex, true
}

// HasJobCreateIndex returns a boolean if a field has been set.
func (o *Deployment) HasJobCreateIndex() bool {
	if o != nil && o.JobCreateIndex != nil {
		return true
	}

	return false
}

// SetJobCreateIndex gets a reference to the given int32 and assigns it to the JobCreateIndex field.
func (o *Deployment) SetJobCreateIndex(v int32) {
	o.JobCreateIndex = &v
}

// GetJobID returns the JobID field value if set, zero value otherwise.
func (o *Deployment) GetJobID() string {
	if o == nil || o.JobID == nil {
		var ret string
		return ret
	}
	return *o.JobID
}

// GetJobIDOk returns a tuple with the JobID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetJobIDOk() (*string, bool) {
	if o == nil || o.JobID == nil {
		return nil, false
	}
	return o.JobID, true
}

// HasJobID returns a boolean if a field has been set.
func (o *Deployment) HasJobID() bool {
	if o != nil && o.JobID != nil {
		return true
	}

	return false
}

// SetJobID gets a reference to the given string and assigns it to the JobID field.
func (o *Deployment) SetJobID(v string) {
	o.JobID = &v
}

// GetJobModifyIndex returns the JobModifyIndex field value if set, zero value otherwise.
func (o *Deployment) GetJobModifyIndex() int32 {
	if o == nil || o.JobModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.JobModifyIndex
}

// GetJobModifyIndexOk returns a tuple with the JobModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetJobModifyIndexOk() (*int32, bool) {
	if o == nil || o.JobModifyIndex == nil {
		return nil, false
	}
	return o.JobModifyIndex, true
}

// HasJobModifyIndex returns a boolean if a field has been set.
func (o *Deployment) HasJobModifyIndex() bool {
	if o != nil && o.JobModifyIndex != nil {
		return true
	}

	return false
}

// SetJobModifyIndex gets a reference to the given int32 and assigns it to the JobModifyIndex field.
func (o *Deployment) SetJobModifyIndex(v int32) {
	o.JobModifyIndex = &v
}

// GetJobSpecModifyIndex returns the JobSpecModifyIndex field value if set, zero value otherwise.
func (o *Deployment) GetJobSpecModifyIndex() int32 {
	if o == nil || o.JobSpecModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.JobSpecModifyIndex
}

// GetJobSpecModifyIndexOk returns a tuple with the JobSpecModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetJobSpecModifyIndexOk() (*int32, bool) {
	if o == nil || o.JobSpecModifyIndex == nil {
		return nil, false
	}
	return o.JobSpecModifyIndex, true
}

// HasJobSpecModifyIndex returns a boolean if a field has been set.
func (o *Deployment) HasJobSpecModifyIndex() bool {
	if o != nil && o.JobSpecModifyIndex != nil {
		return true
	}

	return false
}

// SetJobSpecModifyIndex gets a reference to the given int32 and assigns it to the JobSpecModifyIndex field.
func (o *Deployment) SetJobSpecModifyIndex(v int32) {
	o.JobSpecModifyIndex = &v
}

// GetJobVersion returns the JobVersion field value if set, zero value otherwise.
func (o *Deployment) GetJobVersion() int32 {
	if o == nil || o.JobVersion == nil {
		var ret int32
		return ret
	}
	return *o.JobVersion
}

// GetJobVersionOk returns a tuple with the JobVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetJobVersionOk() (*int32, bool) {
	if o == nil || o.JobVersion == nil {
		return nil, false
	}
	return o.JobVersion, true
}

// HasJobVersion returns a boolean if a field has been set.
func (o *Deployment) HasJobVersion() bool {
	if o != nil && o.JobVersion != nil {
		return true
	}

	return false
}

// SetJobVersion gets a reference to the given int32 and assigns it to the JobVersion field.
func (o *Deployment) SetJobVersion(v int32) {
	o.JobVersion = &v
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *Deployment) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *Deployment) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *Deployment) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *Deployment) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *Deployment) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *Deployment) SetNamespace(v string) {
	o.Namespace = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Deployment) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Deployment) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Deployment) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDescription returns the StatusDescription field value if set, zero value otherwise.
func (o *Deployment) GetStatusDescription() string {
	if o == nil || o.StatusDescription == nil {
		var ret string
		return ret
	}
	return *o.StatusDescription
}

// GetStatusDescriptionOk returns a tuple with the StatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetStatusDescriptionOk() (*string, bool) {
	if o == nil || o.StatusDescription == nil {
		return nil, false
	}
	return o.StatusDescription, true
}

// HasStatusDescription returns a boolean if a field has been set.
func (o *Deployment) HasStatusDescription() bool {
	if o != nil && o.StatusDescription != nil {
		return true
	}

	return false
}

// SetStatusDescription gets a reference to the given string and assigns it to the StatusDescription field.
func (o *Deployment) SetStatusDescription(v string) {
	o.StatusDescription = &v
}

// GetTaskGroups returns the TaskGroups field value if set, zero value otherwise.
func (o *Deployment) GetTaskGroups() map[string]DeploymentState {
	if o == nil || o.TaskGroups == nil {
		var ret map[string]DeploymentState
		return ret
	}
	return *o.TaskGroups
}

// GetTaskGroupsOk returns a tuple with the TaskGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetTaskGroupsOk() (*map[string]DeploymentState, bool) {
	if o == nil || o.TaskGroups == nil {
		return nil, false
	}
	return o.TaskGroups, true
}

// HasTaskGroups returns a boolean if a field has been set.
func (o *Deployment) HasTaskGroups() bool {
	if o != nil && o.TaskGroups != nil {
		return true
	}

	return false
}

// SetTaskGroups gets a reference to the given map[string]DeploymentState and assigns it to the TaskGroups field.
func (o *Deployment) SetTaskGroups(v map[string]DeploymentState) {
	o.TaskGroups = &v
}

func (o Deployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.IsMultiregion != nil {
		toSerialize["IsMultiregion"] = o.IsMultiregion
	}
	if o.JobCreateIndex != nil {
		toSerialize["JobCreateIndex"] = o.JobCreateIndex
	}
	if o.JobID != nil {
		toSerialize["JobID"] = o.JobID
	}
	if o.JobModifyIndex != nil {
		toSerialize["JobModifyIndex"] = o.JobModifyIndex
	}
	if o.JobSpecModifyIndex != nil {
		toSerialize["JobSpecModifyIndex"] = o.JobSpecModifyIndex
	}
	if o.JobVersion != nil {
		toSerialize["JobVersion"] = o.JobVersion
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.Status != nil {
		toSerialize["Status"] = o.Status
	}
	if o.StatusDescription != nil {
		toSerialize["StatusDescription"] = o.StatusDescription
	}
	if o.TaskGroups != nil {
		toSerialize["TaskGroups"] = o.TaskGroups
	}
	return json.Marshal(toSerialize)
}

type NullableDeployment struct {
	value *Deployment
	isSet bool
}

func (v NullableDeployment) Get() *Deployment {
	return v.value
}

func (v *NullableDeployment) Set(val *Deployment) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployment(val *Deployment) *NullableDeployment {
	return &NullableDeployment{value: val, isSet: true}
}

func (v NullableDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


