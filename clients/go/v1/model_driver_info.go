/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// DriverInfo struct for DriverInfo
type DriverInfo struct {
	Attributes *map[string]string `json:"Attributes,omitempty"`
	Detected *bool `json:"Detected,omitempty"`
	HealthDescription *string `json:"HealthDescription,omitempty"`
	Healthy *bool `json:"Healthy,omitempty"`
	UpdateTime NullableTime `json:"UpdateTime,omitempty"`
}

// NewDriverInfo instantiates a new DriverInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverInfo() *DriverInfo {
	this := DriverInfo{}
	return &this
}

// NewDriverInfoWithDefaults instantiates a new DriverInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverInfoWithDefaults() *DriverInfo {
	this := DriverInfo{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *DriverInfo) GetAttributes() map[string]string {
	if o == nil || o.Attributes == nil {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverInfo) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *DriverInfo) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *DriverInfo) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetDetected returns the Detected field value if set, zero value otherwise.
func (o *DriverInfo) GetDetected() bool {
	if o == nil || o.Detected == nil {
		var ret bool
		return ret
	}
	return *o.Detected
}

// GetDetectedOk returns a tuple with the Detected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverInfo) GetDetectedOk() (*bool, bool) {
	if o == nil || o.Detected == nil {
		return nil, false
	}
	return o.Detected, true
}

// HasDetected returns a boolean if a field has been set.
func (o *DriverInfo) HasDetected() bool {
	if o != nil && o.Detected != nil {
		return true
	}

	return false
}

// SetDetected gets a reference to the given bool and assigns it to the Detected field.
func (o *DriverInfo) SetDetected(v bool) {
	o.Detected = &v
}

// GetHealthDescription returns the HealthDescription field value if set, zero value otherwise.
func (o *DriverInfo) GetHealthDescription() string {
	if o == nil || o.HealthDescription == nil {
		var ret string
		return ret
	}
	return *o.HealthDescription
}

// GetHealthDescriptionOk returns a tuple with the HealthDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverInfo) GetHealthDescriptionOk() (*string, bool) {
	if o == nil || o.HealthDescription == nil {
		return nil, false
	}
	return o.HealthDescription, true
}

// HasHealthDescription returns a boolean if a field has been set.
func (o *DriverInfo) HasHealthDescription() bool {
	if o != nil && o.HealthDescription != nil {
		return true
	}

	return false
}

// SetHealthDescription gets a reference to the given string and assigns it to the HealthDescription field.
func (o *DriverInfo) SetHealthDescription(v string) {
	o.HealthDescription = &v
}

// GetHealthy returns the Healthy field value if set, zero value otherwise.
func (o *DriverInfo) GetHealthy() bool {
	if o == nil || o.Healthy == nil {
		var ret bool
		return ret
	}
	return *o.Healthy
}

// GetHealthyOk returns a tuple with the Healthy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverInfo) GetHealthyOk() (*bool, bool) {
	if o == nil || o.Healthy == nil {
		return nil, false
	}
	return o.Healthy, true
}

// HasHealthy returns a boolean if a field has been set.
func (o *DriverInfo) HasHealthy() bool {
	if o != nil && o.Healthy != nil {
		return true
	}

	return false
}

// SetHealthy gets a reference to the given bool and assigns it to the Healthy field.
func (o *DriverInfo) SetHealthy(v bool) {
	o.Healthy = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DriverInfo) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime.Get()
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DriverInfo) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UpdateTime.Get(), o.UpdateTime.IsSet()
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *DriverInfo) HasUpdateTime() bool {
	if o != nil && o.UpdateTime.IsSet() {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given NullableTime and assigns it to the UpdateTime field.
func (o *DriverInfo) SetUpdateTime(v time.Time) {
	o.UpdateTime.Set(&v)
}
// SetUpdateTimeNil sets the value for UpdateTime to be an explicit nil
func (o *DriverInfo) SetUpdateTimeNil() {
	o.UpdateTime.Set(nil)
}

// UnsetUpdateTime ensures that no value is present for UpdateTime, not even an explicit nil
func (o *DriverInfo) UnsetUpdateTime() {
	o.UpdateTime.Unset()
}

func (o DriverInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attributes != nil {
		toSerialize["Attributes"] = o.Attributes
	}
	if o.Detected != nil {
		toSerialize["Detected"] = o.Detected
	}
	if o.HealthDescription != nil {
		toSerialize["HealthDescription"] = o.HealthDescription
	}
	if o.Healthy != nil {
		toSerialize["Healthy"] = o.Healthy
	}
	if o.UpdateTime.IsSet() {
		toSerialize["UpdateTime"] = o.UpdateTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDriverInfo struct {
	value *DriverInfo
	isSet bool
}

func (v NullableDriverInfo) Get() *DriverInfo {
	return v.value
}

func (v *NullableDriverInfo) Set(val *DriverInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverInfo(val *DriverInfo) *NullableDriverInfo {
	return &NullableDriverInfo{value: val, isSet: true}
}

func (v NullableDriverInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


