/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// JobStabilityRequest struct for JobStabilityRequest
type JobStabilityRequest struct {
	JobID *string `json:"JobID,omitempty"`
	JobVersion *int32 `json:"JobVersion,omitempty"`
	Namespace *string `json:"Namespace,omitempty"`
	Region *string `json:"Region,omitempty"`
	SecretID *string `json:"SecretID,omitempty"`
	Stable *bool `json:"Stable,omitempty"`
}

// NewJobStabilityRequest instantiates a new JobStabilityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobStabilityRequest() *JobStabilityRequest {
	this := JobStabilityRequest{}
	return &this
}

// NewJobStabilityRequestWithDefaults instantiates a new JobStabilityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobStabilityRequestWithDefaults() *JobStabilityRequest {
	this := JobStabilityRequest{}
	return &this
}

// GetJobID returns the JobID field value if set, zero value otherwise.
func (o *JobStabilityRequest) GetJobID() string {
	if o == nil || o.JobID == nil {
		var ret string
		return ret
	}
	return *o.JobID
}

// GetJobIDOk returns a tuple with the JobID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStabilityRequest) GetJobIDOk() (*string, bool) {
	if o == nil || o.JobID == nil {
		return nil, false
	}
	return o.JobID, true
}

// HasJobID returns a boolean if a field has been set.
func (o *JobStabilityRequest) HasJobID() bool {
	if o != nil && o.JobID != nil {
		return true
	}

	return false
}

// SetJobID gets a reference to the given string and assigns it to the JobID field.
func (o *JobStabilityRequest) SetJobID(v string) {
	o.JobID = &v
}

// GetJobVersion returns the JobVersion field value if set, zero value otherwise.
func (o *JobStabilityRequest) GetJobVersion() int32 {
	if o == nil || o.JobVersion == nil {
		var ret int32
		return ret
	}
	return *o.JobVersion
}

// GetJobVersionOk returns a tuple with the JobVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStabilityRequest) GetJobVersionOk() (*int32, bool) {
	if o == nil || o.JobVersion == nil {
		return nil, false
	}
	return o.JobVersion, true
}

// HasJobVersion returns a boolean if a field has been set.
func (o *JobStabilityRequest) HasJobVersion() bool {
	if o != nil && o.JobVersion != nil {
		return true
	}

	return false
}

// SetJobVersion gets a reference to the given int32 and assigns it to the JobVersion field.
func (o *JobStabilityRequest) SetJobVersion(v int32) {
	o.JobVersion = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *JobStabilityRequest) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStabilityRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *JobStabilityRequest) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *JobStabilityRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *JobStabilityRequest) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStabilityRequest) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *JobStabilityRequest) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *JobStabilityRequest) SetRegion(v string) {
	o.Region = &v
}

// GetSecretID returns the SecretID field value if set, zero value otherwise.
func (o *JobStabilityRequest) GetSecretID() string {
	if o == nil || o.SecretID == nil {
		var ret string
		return ret
	}
	return *o.SecretID
}

// GetSecretIDOk returns a tuple with the SecretID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStabilityRequest) GetSecretIDOk() (*string, bool) {
	if o == nil || o.SecretID == nil {
		return nil, false
	}
	return o.SecretID, true
}

// HasSecretID returns a boolean if a field has been set.
func (o *JobStabilityRequest) HasSecretID() bool {
	if o != nil && o.SecretID != nil {
		return true
	}

	return false
}

// SetSecretID gets a reference to the given string and assigns it to the SecretID field.
func (o *JobStabilityRequest) SetSecretID(v string) {
	o.SecretID = &v
}

// GetStable returns the Stable field value if set, zero value otherwise.
func (o *JobStabilityRequest) GetStable() bool {
	if o == nil || o.Stable == nil {
		var ret bool
		return ret
	}
	return *o.Stable
}

// GetStableOk returns a tuple with the Stable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStabilityRequest) GetStableOk() (*bool, bool) {
	if o == nil || o.Stable == nil {
		return nil, false
	}
	return o.Stable, true
}

// HasStable returns a boolean if a field has been set.
func (o *JobStabilityRequest) HasStable() bool {
	if o != nil && o.Stable != nil {
		return true
	}

	return false
}

// SetStable gets a reference to the given bool and assigns it to the Stable field.
func (o *JobStabilityRequest) SetStable(v bool) {
	o.Stable = &v
}

func (o JobStabilityRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobID != nil {
		toSerialize["JobID"] = o.JobID
	}
	if o.JobVersion != nil {
		toSerialize["JobVersion"] = o.JobVersion
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.Region != nil {
		toSerialize["Region"] = o.Region
	}
	if o.SecretID != nil {
		toSerialize["SecretID"] = o.SecretID
	}
	if o.Stable != nil {
		toSerialize["Stable"] = o.Stable
	}
	return json.Marshal(toSerialize)
}

type NullableJobStabilityRequest struct {
	value *JobStabilityRequest
	isSet bool
}

func (v NullableJobStabilityRequest) Get() *JobStabilityRequest {
	return v.value
}

func (v *NullableJobStabilityRequest) Set(val *JobStabilityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJobStabilityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJobStabilityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobStabilityRequest(val *JobStabilityRequest) *NullableJobStabilityRequest {
	return &NullableJobStabilityRequest{value: val, isSet: true}
}

func (v NullableJobStabilityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobStabilityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


