/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ScalingPolicyListStub struct for ScalingPolicyListStub
type ScalingPolicyListStub struct {
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	Enabled *bool `json:"Enabled,omitempty"`
	ID *string `json:"ID,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	Target *map[string]string `json:"Target,omitempty"`
	Type *string `json:"Type,omitempty"`
}

// NewScalingPolicyListStub instantiates a new ScalingPolicyListStub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScalingPolicyListStub() *ScalingPolicyListStub {
	this := ScalingPolicyListStub{}
	return &this
}

// NewScalingPolicyListStubWithDefaults instantiates a new ScalingPolicyListStub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScalingPolicyListStubWithDefaults() *ScalingPolicyListStub {
	this := ScalingPolicyListStub{}
	return &this
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *ScalingPolicyListStub) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScalingPolicyListStub) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *ScalingPolicyListStub) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *ScalingPolicyListStub) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ScalingPolicyListStub) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScalingPolicyListStub) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ScalingPolicyListStub) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ScalingPolicyListStub) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *ScalingPolicyListStub) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScalingPolicyListStub) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *ScalingPolicyListStub) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *ScalingPolicyListStub) SetID(v string) {
	o.ID = &v
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *ScalingPolicyListStub) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScalingPolicyListStub) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *ScalingPolicyListStub) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *ScalingPolicyListStub) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ScalingPolicyListStub) GetTarget() map[string]string {
	if o == nil || o.Target == nil {
		var ret map[string]string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScalingPolicyListStub) GetTargetOk() (*map[string]string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ScalingPolicyListStub) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given map[string]string and assigns it to the Target field.
func (o *ScalingPolicyListStub) SetTarget(v map[string]string) {
	o.Target = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ScalingPolicyListStub) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScalingPolicyListStub) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ScalingPolicyListStub) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ScalingPolicyListStub) SetType(v string) {
	o.Type = &v
}

func (o ScalingPolicyListStub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.Enabled != nil {
		toSerialize["Enabled"] = o.Enabled
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.Target != nil {
		toSerialize["Target"] = o.Target
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableScalingPolicyListStub struct {
	value *ScalingPolicyListStub
	isSet bool
}

func (v NullableScalingPolicyListStub) Get() *ScalingPolicyListStub {
	return v.value
}

func (v *NullableScalingPolicyListStub) Set(val *ScalingPolicyListStub) {
	v.value = val
	v.isSet = true
}

func (v NullableScalingPolicyListStub) IsSet() bool {
	return v.isSet
}

func (v *NullableScalingPolicyListStub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScalingPolicyListStub(val *ScalingPolicyListStub) *NullableScalingPolicyListStub {
	return &NullableScalingPolicyListStub{value: val, isSet: true}
}

func (v NullableScalingPolicyListStub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScalingPolicyListStub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


