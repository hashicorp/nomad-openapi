/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NodeCpuResources struct for NodeCpuResources
type NodeCpuResources struct {
	CpuShares *int64 `json:"CpuShares,omitempty"`
	ReservableCpuCores []int32 `json:"ReservableCpuCores,omitempty"`
	TotalCpuCores *int32 `json:"TotalCpuCores,omitempty"`
}

// NewNodeCpuResources instantiates a new NodeCpuResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeCpuResources() *NodeCpuResources {
	this := NodeCpuResources{}
	return &this
}

// NewNodeCpuResourcesWithDefaults instantiates a new NodeCpuResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeCpuResourcesWithDefaults() *NodeCpuResources {
	this := NodeCpuResources{}
	return &this
}

// GetCpuShares returns the CpuShares field value if set, zero value otherwise.
func (o *NodeCpuResources) GetCpuShares() int64 {
	if o == nil || o.CpuShares == nil {
		var ret int64
		return ret
	}
	return *o.CpuShares
}

// GetCpuSharesOk returns a tuple with the CpuShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeCpuResources) GetCpuSharesOk() (*int64, bool) {
	if o == nil || o.CpuShares == nil {
		return nil, false
	}
	return o.CpuShares, true
}

// HasCpuShares returns a boolean if a field has been set.
func (o *NodeCpuResources) HasCpuShares() bool {
	if o != nil && o.CpuShares != nil {
		return true
	}

	return false
}

// SetCpuShares gets a reference to the given int64 and assigns it to the CpuShares field.
func (o *NodeCpuResources) SetCpuShares(v int64) {
	o.CpuShares = &v
}

// GetReservableCpuCores returns the ReservableCpuCores field value if set, zero value otherwise.
func (o *NodeCpuResources) GetReservableCpuCores() []int32 {
	if o == nil || o.ReservableCpuCores == nil {
		var ret []int32
		return ret
	}
	return o.ReservableCpuCores
}

// GetReservableCpuCoresOk returns a tuple with the ReservableCpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeCpuResources) GetReservableCpuCoresOk() ([]int32, bool) {
	if o == nil || o.ReservableCpuCores == nil {
		return nil, false
	}
	return o.ReservableCpuCores, true
}

// HasReservableCpuCores returns a boolean if a field has been set.
func (o *NodeCpuResources) HasReservableCpuCores() bool {
	if o != nil && o.ReservableCpuCores != nil {
		return true
	}

	return false
}

// SetReservableCpuCores gets a reference to the given []int32 and assigns it to the ReservableCpuCores field.
func (o *NodeCpuResources) SetReservableCpuCores(v []int32) {
	o.ReservableCpuCores = v
}

// GetTotalCpuCores returns the TotalCpuCores field value if set, zero value otherwise.
func (o *NodeCpuResources) GetTotalCpuCores() int32 {
	if o == nil || o.TotalCpuCores == nil {
		var ret int32
		return ret
	}
	return *o.TotalCpuCores
}

// GetTotalCpuCoresOk returns a tuple with the TotalCpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeCpuResources) GetTotalCpuCoresOk() (*int32, bool) {
	if o == nil || o.TotalCpuCores == nil {
		return nil, false
	}
	return o.TotalCpuCores, true
}

// HasTotalCpuCores returns a boolean if a field has been set.
func (o *NodeCpuResources) HasTotalCpuCores() bool {
	if o != nil && o.TotalCpuCores != nil {
		return true
	}

	return false
}

// SetTotalCpuCores gets a reference to the given int32 and assigns it to the TotalCpuCores field.
func (o *NodeCpuResources) SetTotalCpuCores(v int32) {
	o.TotalCpuCores = &v
}

func (o NodeCpuResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CpuShares != nil {
		toSerialize["CpuShares"] = o.CpuShares
	}
	if o.ReservableCpuCores != nil {
		toSerialize["ReservableCpuCores"] = o.ReservableCpuCores
	}
	if o.TotalCpuCores != nil {
		toSerialize["TotalCpuCores"] = o.TotalCpuCores
	}
	return json.Marshal(toSerialize)
}

type NullableNodeCpuResources struct {
	value *NodeCpuResources
	isSet bool
}

func (v NullableNodeCpuResources) Get() *NodeCpuResources {
	return v.value
}

func (v *NullableNodeCpuResources) Set(val *NodeCpuResources) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeCpuResources) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeCpuResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeCpuResources(val *NodeCpuResources) *NullableNodeCpuResources {
	return &NullableNodeCpuResources{value: val, isSet: true}
}

func (v NullableNodeCpuResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeCpuResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


