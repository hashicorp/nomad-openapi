/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Node struct for Node
type Node struct {
	Attributes *map[string]string `json:"Attributes,omitempty"`
	CSIControllerPlugins *map[string]CSIInfo `json:"CSIControllerPlugins,omitempty"`
	CSINodePlugins *map[string]CSIInfo `json:"CSINodePlugins,omitempty"`
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	Datacenter *string `json:"Datacenter,omitempty"`
	Drain *bool `json:"Drain,omitempty"`
	DrainStrategy *DrainStrategy `json:"DrainStrategy,omitempty"`
	Drivers *map[string]DriverInfo `json:"Drivers,omitempty"`
	Events *[]NodeEvent `json:"Events,omitempty"`
	HTTPAddr *string `json:"HTTPAddr,omitempty"`
	HostVolumes *map[string]HostVolumeInfo `json:"HostVolumes,omitempty"`
	ID *string `json:"ID,omitempty"`
	LastDrain *DrainMetadata `json:"LastDrain,omitempty"`
	Links *map[string]string `json:"Links,omitempty"`
	Meta *map[string]string `json:"Meta,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	Name *string `json:"Name,omitempty"`
	NodeClass *string `json:"NodeClass,omitempty"`
	NodeResources *NodeResources `json:"NodeResources,omitempty"`
	Reserved *Resources `json:"Reserved,omitempty"`
	ReservedResources *NodeReservedResources `json:"ReservedResources,omitempty"`
	Resources *Resources `json:"Resources,omitempty"`
	SchedulingEligibility *string `json:"SchedulingEligibility,omitempty"`
	Status *string `json:"Status,omitempty"`
	StatusDescription *string `json:"StatusDescription,omitempty"`
	StatusUpdatedAt *int64 `json:"StatusUpdatedAt,omitempty"`
	TLSEnabled *bool `json:"TLSEnabled,omitempty"`
}

// NewNode instantiates a new Node object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNode() *Node {
	this := Node{}
	return &this
}

// NewNodeWithDefaults instantiates a new Node object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeWithDefaults() *Node {
	this := Node{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Node) GetAttributes() map[string]string {
	if o == nil || o.Attributes == nil {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Node) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *Node) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetCSIControllerPlugins returns the CSIControllerPlugins field value if set, zero value otherwise.
func (o *Node) GetCSIControllerPlugins() map[string]CSIInfo {
	if o == nil || o.CSIControllerPlugins == nil {
		var ret map[string]CSIInfo
		return ret
	}
	return *o.CSIControllerPlugins
}

// GetCSIControllerPluginsOk returns a tuple with the CSIControllerPlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetCSIControllerPluginsOk() (*map[string]CSIInfo, bool) {
	if o == nil || o.CSIControllerPlugins == nil {
		return nil, false
	}
	return o.CSIControllerPlugins, true
}

// HasCSIControllerPlugins returns a boolean if a field has been set.
func (o *Node) HasCSIControllerPlugins() bool {
	if o != nil && o.CSIControllerPlugins != nil {
		return true
	}

	return false
}

// SetCSIControllerPlugins gets a reference to the given map[string]CSIInfo and assigns it to the CSIControllerPlugins field.
func (o *Node) SetCSIControllerPlugins(v map[string]CSIInfo) {
	o.CSIControllerPlugins = &v
}

// GetCSINodePlugins returns the CSINodePlugins field value if set, zero value otherwise.
func (o *Node) GetCSINodePlugins() map[string]CSIInfo {
	if o == nil || o.CSINodePlugins == nil {
		var ret map[string]CSIInfo
		return ret
	}
	return *o.CSINodePlugins
}

// GetCSINodePluginsOk returns a tuple with the CSINodePlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetCSINodePluginsOk() (*map[string]CSIInfo, bool) {
	if o == nil || o.CSINodePlugins == nil {
		return nil, false
	}
	return o.CSINodePlugins, true
}

// HasCSINodePlugins returns a boolean if a field has been set.
func (o *Node) HasCSINodePlugins() bool {
	if o != nil && o.CSINodePlugins != nil {
		return true
	}

	return false
}

// SetCSINodePlugins gets a reference to the given map[string]CSIInfo and assigns it to the CSINodePlugins field.
func (o *Node) SetCSINodePlugins(v map[string]CSIInfo) {
	o.CSINodePlugins = &v
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *Node) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *Node) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *Node) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetDatacenter returns the Datacenter field value if set, zero value otherwise.
func (o *Node) GetDatacenter() string {
	if o == nil || o.Datacenter == nil {
		var ret string
		return ret
	}
	return *o.Datacenter
}

// GetDatacenterOk returns a tuple with the Datacenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetDatacenterOk() (*string, bool) {
	if o == nil || o.Datacenter == nil {
		return nil, false
	}
	return o.Datacenter, true
}

// HasDatacenter returns a boolean if a field has been set.
func (o *Node) HasDatacenter() bool {
	if o != nil && o.Datacenter != nil {
		return true
	}

	return false
}

// SetDatacenter gets a reference to the given string and assigns it to the Datacenter field.
func (o *Node) SetDatacenter(v string) {
	o.Datacenter = &v
}

// GetDrain returns the Drain field value if set, zero value otherwise.
func (o *Node) GetDrain() bool {
	if o == nil || o.Drain == nil {
		var ret bool
		return ret
	}
	return *o.Drain
}

// GetDrainOk returns a tuple with the Drain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetDrainOk() (*bool, bool) {
	if o == nil || o.Drain == nil {
		return nil, false
	}
	return o.Drain, true
}

// HasDrain returns a boolean if a field has been set.
func (o *Node) HasDrain() bool {
	if o != nil && o.Drain != nil {
		return true
	}

	return false
}

// SetDrain gets a reference to the given bool and assigns it to the Drain field.
func (o *Node) SetDrain(v bool) {
	o.Drain = &v
}

// GetDrainStrategy returns the DrainStrategy field value if set, zero value otherwise.
func (o *Node) GetDrainStrategy() DrainStrategy {
	if o == nil || o.DrainStrategy == nil {
		var ret DrainStrategy
		return ret
	}
	return *o.DrainStrategy
}

// GetDrainStrategyOk returns a tuple with the DrainStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetDrainStrategyOk() (*DrainStrategy, bool) {
	if o == nil || o.DrainStrategy == nil {
		return nil, false
	}
	return o.DrainStrategy, true
}

// HasDrainStrategy returns a boolean if a field has been set.
func (o *Node) HasDrainStrategy() bool {
	if o != nil && o.DrainStrategy != nil {
		return true
	}

	return false
}

// SetDrainStrategy gets a reference to the given DrainStrategy and assigns it to the DrainStrategy field.
func (o *Node) SetDrainStrategy(v DrainStrategy) {
	o.DrainStrategy = &v
}

// GetDrivers returns the Drivers field value if set, zero value otherwise.
func (o *Node) GetDrivers() map[string]DriverInfo {
	if o == nil || o.Drivers == nil {
		var ret map[string]DriverInfo
		return ret
	}
	return *o.Drivers
}

// GetDriversOk returns a tuple with the Drivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetDriversOk() (*map[string]DriverInfo, bool) {
	if o == nil || o.Drivers == nil {
		return nil, false
	}
	return o.Drivers, true
}

// HasDrivers returns a boolean if a field has been set.
func (o *Node) HasDrivers() bool {
	if o != nil && o.Drivers != nil {
		return true
	}

	return false
}

// SetDrivers gets a reference to the given map[string]DriverInfo and assigns it to the Drivers field.
func (o *Node) SetDrivers(v map[string]DriverInfo) {
	o.Drivers = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *Node) GetEvents() []NodeEvent {
	if o == nil || o.Events == nil {
		var ret []NodeEvent
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetEventsOk() (*[]NodeEvent, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *Node) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []NodeEvent and assigns it to the Events field.
func (o *Node) SetEvents(v []NodeEvent) {
	o.Events = &v
}

// GetHTTPAddr returns the HTTPAddr field value if set, zero value otherwise.
func (o *Node) GetHTTPAddr() string {
	if o == nil || o.HTTPAddr == nil {
		var ret string
		return ret
	}
	return *o.HTTPAddr
}

// GetHTTPAddrOk returns a tuple with the HTTPAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetHTTPAddrOk() (*string, bool) {
	if o == nil || o.HTTPAddr == nil {
		return nil, false
	}
	return o.HTTPAddr, true
}

// HasHTTPAddr returns a boolean if a field has been set.
func (o *Node) HasHTTPAddr() bool {
	if o != nil && o.HTTPAddr != nil {
		return true
	}

	return false
}

// SetHTTPAddr gets a reference to the given string and assigns it to the HTTPAddr field.
func (o *Node) SetHTTPAddr(v string) {
	o.HTTPAddr = &v
}

// GetHostVolumes returns the HostVolumes field value if set, zero value otherwise.
func (o *Node) GetHostVolumes() map[string]HostVolumeInfo {
	if o == nil || o.HostVolumes == nil {
		var ret map[string]HostVolumeInfo
		return ret
	}
	return *o.HostVolumes
}

// GetHostVolumesOk returns a tuple with the HostVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetHostVolumesOk() (*map[string]HostVolumeInfo, bool) {
	if o == nil || o.HostVolumes == nil {
		return nil, false
	}
	return o.HostVolumes, true
}

// HasHostVolumes returns a boolean if a field has been set.
func (o *Node) HasHostVolumes() bool {
	if o != nil && o.HostVolumes != nil {
		return true
	}

	return false
}

// SetHostVolumes gets a reference to the given map[string]HostVolumeInfo and assigns it to the HostVolumes field.
func (o *Node) SetHostVolumes(v map[string]HostVolumeInfo) {
	o.HostVolumes = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *Node) GetID() string {
	if o == nil || o.ID == nil {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetIDOk() (*string, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *Node) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *Node) SetID(v string) {
	o.ID = &v
}

// GetLastDrain returns the LastDrain field value if set, zero value otherwise.
func (o *Node) GetLastDrain() DrainMetadata {
	if o == nil || o.LastDrain == nil {
		var ret DrainMetadata
		return ret
	}
	return *o.LastDrain
}

// GetLastDrainOk returns a tuple with the LastDrain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetLastDrainOk() (*DrainMetadata, bool) {
	if o == nil || o.LastDrain == nil {
		return nil, false
	}
	return o.LastDrain, true
}

// HasLastDrain returns a boolean if a field has been set.
func (o *Node) HasLastDrain() bool {
	if o != nil && o.LastDrain != nil {
		return true
	}

	return false
}

// SetLastDrain gets a reference to the given DrainMetadata and assigns it to the LastDrain field.
func (o *Node) SetLastDrain(v DrainMetadata) {
	o.LastDrain = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Node) GetLinks() map[string]string {
	if o == nil || o.Links == nil {
		var ret map[string]string
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetLinksOk() (*map[string]string, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Node) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]string and assigns it to the Links field.
func (o *Node) SetLinks(v map[string]string) {
	o.Links = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *Node) GetMeta() map[string]string {
	if o == nil || o.Meta == nil {
		var ret map[string]string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetMetaOk() (*map[string]string, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Node) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]string and assigns it to the Meta field.
func (o *Node) SetMeta(v map[string]string) {
	o.Meta = &v
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *Node) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *Node) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *Node) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Node) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Node) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Node) SetName(v string) {
	o.Name = &v
}

// GetNodeClass returns the NodeClass field value if set, zero value otherwise.
func (o *Node) GetNodeClass() string {
	if o == nil || o.NodeClass == nil {
		var ret string
		return ret
	}
	return *o.NodeClass
}

// GetNodeClassOk returns a tuple with the NodeClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetNodeClassOk() (*string, bool) {
	if o == nil || o.NodeClass == nil {
		return nil, false
	}
	return o.NodeClass, true
}

// HasNodeClass returns a boolean if a field has been set.
func (o *Node) HasNodeClass() bool {
	if o != nil && o.NodeClass != nil {
		return true
	}

	return false
}

// SetNodeClass gets a reference to the given string and assigns it to the NodeClass field.
func (o *Node) SetNodeClass(v string) {
	o.NodeClass = &v
}

// GetNodeResources returns the NodeResources field value if set, zero value otherwise.
func (o *Node) GetNodeResources() NodeResources {
	if o == nil || o.NodeResources == nil {
		var ret NodeResources
		return ret
	}
	return *o.NodeResources
}

// GetNodeResourcesOk returns a tuple with the NodeResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetNodeResourcesOk() (*NodeResources, bool) {
	if o == nil || o.NodeResources == nil {
		return nil, false
	}
	return o.NodeResources, true
}

// HasNodeResources returns a boolean if a field has been set.
func (o *Node) HasNodeResources() bool {
	if o != nil && o.NodeResources != nil {
		return true
	}

	return false
}

// SetNodeResources gets a reference to the given NodeResources and assigns it to the NodeResources field.
func (o *Node) SetNodeResources(v NodeResources) {
	o.NodeResources = &v
}

// GetReserved returns the Reserved field value if set, zero value otherwise.
func (o *Node) GetReserved() Resources {
	if o == nil || o.Reserved == nil {
		var ret Resources
		return ret
	}
	return *o.Reserved
}

// GetReservedOk returns a tuple with the Reserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetReservedOk() (*Resources, bool) {
	if o == nil || o.Reserved == nil {
		return nil, false
	}
	return o.Reserved, true
}

// HasReserved returns a boolean if a field has been set.
func (o *Node) HasReserved() bool {
	if o != nil && o.Reserved != nil {
		return true
	}

	return false
}

// SetReserved gets a reference to the given Resources and assigns it to the Reserved field.
func (o *Node) SetReserved(v Resources) {
	o.Reserved = &v
}

// GetReservedResources returns the ReservedResources field value if set, zero value otherwise.
func (o *Node) GetReservedResources() NodeReservedResources {
	if o == nil || o.ReservedResources == nil {
		var ret NodeReservedResources
		return ret
	}
	return *o.ReservedResources
}

// GetReservedResourcesOk returns a tuple with the ReservedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetReservedResourcesOk() (*NodeReservedResources, bool) {
	if o == nil || o.ReservedResources == nil {
		return nil, false
	}
	return o.ReservedResources, true
}

// HasReservedResources returns a boolean if a field has been set.
func (o *Node) HasReservedResources() bool {
	if o != nil && o.ReservedResources != nil {
		return true
	}

	return false
}

// SetReservedResources gets a reference to the given NodeReservedResources and assigns it to the ReservedResources field.
func (o *Node) SetReservedResources(v NodeReservedResources) {
	o.ReservedResources = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *Node) GetResources() Resources {
	if o == nil || o.Resources == nil {
		var ret Resources
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetResourcesOk() (*Resources, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *Node) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given Resources and assigns it to the Resources field.
func (o *Node) SetResources(v Resources) {
	o.Resources = &v
}

// GetSchedulingEligibility returns the SchedulingEligibility field value if set, zero value otherwise.
func (o *Node) GetSchedulingEligibility() string {
	if o == nil || o.SchedulingEligibility == nil {
		var ret string
		return ret
	}
	return *o.SchedulingEligibility
}

// GetSchedulingEligibilityOk returns a tuple with the SchedulingEligibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetSchedulingEligibilityOk() (*string, bool) {
	if o == nil || o.SchedulingEligibility == nil {
		return nil, false
	}
	return o.SchedulingEligibility, true
}

// HasSchedulingEligibility returns a boolean if a field has been set.
func (o *Node) HasSchedulingEligibility() bool {
	if o != nil && o.SchedulingEligibility != nil {
		return true
	}

	return false
}

// SetSchedulingEligibility gets a reference to the given string and assigns it to the SchedulingEligibility field.
func (o *Node) SetSchedulingEligibility(v string) {
	o.SchedulingEligibility = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Node) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Node) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Node) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDescription returns the StatusDescription field value if set, zero value otherwise.
func (o *Node) GetStatusDescription() string {
	if o == nil || o.StatusDescription == nil {
		var ret string
		return ret
	}
	return *o.StatusDescription
}

// GetStatusDescriptionOk returns a tuple with the StatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetStatusDescriptionOk() (*string, bool) {
	if o == nil || o.StatusDescription == nil {
		return nil, false
	}
	return o.StatusDescription, true
}

// HasStatusDescription returns a boolean if a field has been set.
func (o *Node) HasStatusDescription() bool {
	if o != nil && o.StatusDescription != nil {
		return true
	}

	return false
}

// SetStatusDescription gets a reference to the given string and assigns it to the StatusDescription field.
func (o *Node) SetStatusDescription(v string) {
	o.StatusDescription = &v
}

// GetStatusUpdatedAt returns the StatusUpdatedAt field value if set, zero value otherwise.
func (o *Node) GetStatusUpdatedAt() int64 {
	if o == nil || o.StatusUpdatedAt == nil {
		var ret int64
		return ret
	}
	return *o.StatusUpdatedAt
}

// GetStatusUpdatedAtOk returns a tuple with the StatusUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetStatusUpdatedAtOk() (*int64, bool) {
	if o == nil || o.StatusUpdatedAt == nil {
		return nil, false
	}
	return o.StatusUpdatedAt, true
}

// HasStatusUpdatedAt returns a boolean if a field has been set.
func (o *Node) HasStatusUpdatedAt() bool {
	if o != nil && o.StatusUpdatedAt != nil {
		return true
	}

	return false
}

// SetStatusUpdatedAt gets a reference to the given int64 and assigns it to the StatusUpdatedAt field.
func (o *Node) SetStatusUpdatedAt(v int64) {
	o.StatusUpdatedAt = &v
}

// GetTLSEnabled returns the TLSEnabled field value if set, zero value otherwise.
func (o *Node) GetTLSEnabled() bool {
	if o == nil || o.TLSEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TLSEnabled
}

// GetTLSEnabledOk returns a tuple with the TLSEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Node) GetTLSEnabledOk() (*bool, bool) {
	if o == nil || o.TLSEnabled == nil {
		return nil, false
	}
	return o.TLSEnabled, true
}

// HasTLSEnabled returns a boolean if a field has been set.
func (o *Node) HasTLSEnabled() bool {
	if o != nil && o.TLSEnabled != nil {
		return true
	}

	return false
}

// SetTLSEnabled gets a reference to the given bool and assigns it to the TLSEnabled field.
func (o *Node) SetTLSEnabled(v bool) {
	o.TLSEnabled = &v
}

func (o Node) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attributes != nil {
		toSerialize["Attributes"] = o.Attributes
	}
	if o.CSIControllerPlugins != nil {
		toSerialize["CSIControllerPlugins"] = o.CSIControllerPlugins
	}
	if o.CSINodePlugins != nil {
		toSerialize["CSINodePlugins"] = o.CSINodePlugins
	}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.Datacenter != nil {
		toSerialize["Datacenter"] = o.Datacenter
	}
	if o.Drain != nil {
		toSerialize["Drain"] = o.Drain
	}
	if o.DrainStrategy != nil {
		toSerialize["DrainStrategy"] = o.DrainStrategy
	}
	if o.Drivers != nil {
		toSerialize["Drivers"] = o.Drivers
	}
	if o.Events != nil {
		toSerialize["Events"] = o.Events
	}
	if o.HTTPAddr != nil {
		toSerialize["HTTPAddr"] = o.HTTPAddr
	}
	if o.HostVolumes != nil {
		toSerialize["HostVolumes"] = o.HostVolumes
	}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.LastDrain != nil {
		toSerialize["LastDrain"] = o.LastDrain
	}
	if o.Links != nil {
		toSerialize["Links"] = o.Links
	}
	if o.Meta != nil {
		toSerialize["Meta"] = o.Meta
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.NodeClass != nil {
		toSerialize["NodeClass"] = o.NodeClass
	}
	if o.NodeResources != nil {
		toSerialize["NodeResources"] = o.NodeResources
	}
	if o.Reserved != nil {
		toSerialize["Reserved"] = o.Reserved
	}
	if o.ReservedResources != nil {
		toSerialize["ReservedResources"] = o.ReservedResources
	}
	if o.Resources != nil {
		toSerialize["Resources"] = o.Resources
	}
	if o.SchedulingEligibility != nil {
		toSerialize["SchedulingEligibility"] = o.SchedulingEligibility
	}
	if o.Status != nil {
		toSerialize["Status"] = o.Status
	}
	if o.StatusDescription != nil {
		toSerialize["StatusDescription"] = o.StatusDescription
	}
	if o.StatusUpdatedAt != nil {
		toSerialize["StatusUpdatedAt"] = o.StatusUpdatedAt
	}
	if o.TLSEnabled != nil {
		toSerialize["TLSEnabled"] = o.TLSEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableNode struct {
	value *Node
	isSet bool
}

func (v NullableNode) Get() *Node {
	return v.value
}

func (v *NullableNode) Set(val *Node) {
	v.value = val
	v.isSet = true
}

func (v NullableNode) IsSet() bool {
	return v.isSet
}

func (v *NullableNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNode(val *Node) *NullableNode {
	return &NullableNode{value: val, isSet: true}
}

func (v NullableNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


