/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// HostNetworkInfo struct for HostNetworkInfo
type HostNetworkInfo struct {
	CIDR *string `json:"CIDR,omitempty"`
	Interface *string `json:"Interface,omitempty"`
	Name *string `json:"Name,omitempty"`
	ReservedPorts *string `json:"ReservedPorts,omitempty"`
}

// NewHostNetworkInfo instantiates a new HostNetworkInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostNetworkInfo() *HostNetworkInfo {
	this := HostNetworkInfo{}
	return &this
}

// NewHostNetworkInfoWithDefaults instantiates a new HostNetworkInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostNetworkInfoWithDefaults() *HostNetworkInfo {
	this := HostNetworkInfo{}
	return &this
}

// GetCIDR returns the CIDR field value if set, zero value otherwise.
func (o *HostNetworkInfo) GetCIDR() string {
	if o == nil || o.CIDR == nil {
		var ret string
		return ret
	}
	return *o.CIDR
}

// GetCIDROk returns a tuple with the CIDR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNetworkInfo) GetCIDROk() (*string, bool) {
	if o == nil || o.CIDR == nil {
		return nil, false
	}
	return o.CIDR, true
}

// HasCIDR returns a boolean if a field has been set.
func (o *HostNetworkInfo) HasCIDR() bool {
	if o != nil && o.CIDR != nil {
		return true
	}

	return false
}

// SetCIDR gets a reference to the given string and assigns it to the CIDR field.
func (o *HostNetworkInfo) SetCIDR(v string) {
	o.CIDR = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *HostNetworkInfo) GetInterface() string {
	if o == nil || o.Interface == nil {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNetworkInfo) GetInterfaceOk() (*string, bool) {
	if o == nil || o.Interface == nil {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *HostNetworkInfo) HasInterface() bool {
	if o != nil && o.Interface != nil {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *HostNetworkInfo) SetInterface(v string) {
	o.Interface = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HostNetworkInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNetworkInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HostNetworkInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HostNetworkInfo) SetName(v string) {
	o.Name = &v
}

// GetReservedPorts returns the ReservedPorts field value if set, zero value otherwise.
func (o *HostNetworkInfo) GetReservedPorts() string {
	if o == nil || o.ReservedPorts == nil {
		var ret string
		return ret
	}
	return *o.ReservedPorts
}

// GetReservedPortsOk returns a tuple with the ReservedPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNetworkInfo) GetReservedPortsOk() (*string, bool) {
	if o == nil || o.ReservedPorts == nil {
		return nil, false
	}
	return o.ReservedPorts, true
}

// HasReservedPorts returns a boolean if a field has been set.
func (o *HostNetworkInfo) HasReservedPorts() bool {
	if o != nil && o.ReservedPorts != nil {
		return true
	}

	return false
}

// SetReservedPorts gets a reference to the given string and assigns it to the ReservedPorts field.
func (o *HostNetworkInfo) SetReservedPorts(v string) {
	o.ReservedPorts = &v
}

func (o HostNetworkInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CIDR != nil {
		toSerialize["CIDR"] = o.CIDR
	}
	if o.Interface != nil {
		toSerialize["Interface"] = o.Interface
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.ReservedPorts != nil {
		toSerialize["ReservedPorts"] = o.ReservedPorts
	}
	return json.Marshal(toSerialize)
}

type NullableHostNetworkInfo struct {
	value *HostNetworkInfo
	isSet bool
}

func (v NullableHostNetworkInfo) Get() *HostNetworkInfo {
	return v.value
}

func (v *NullableHostNetworkInfo) Set(val *HostNetworkInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableHostNetworkInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableHostNetworkInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostNetworkInfo(val *HostNetworkInfo) *NullableHostNetworkInfo {
	return &NullableHostNetworkInfo{value: val, isSet: true}
}

func (v NullableHostNetworkInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostNetworkInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


