/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// ACLTokenListStub struct for ACLTokenListStub
type ACLTokenListStub struct {
	AccessorID *string `json:"AccessorID,omitempty"`
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	CreateTime *time.Time `json:"CreateTime,omitempty"`
	Global *bool `json:"Global,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	Name *string `json:"Name,omitempty"`
	Policies *[]string `json:"Policies,omitempty"`
	Roles *[]ACLTokenRoleLink `json:"Roles,omitempty"`
	Type *string `json:"Type,omitempty"`
	ExpirationTime *time.Time `json:"expiration_time,omitempty"`
}

// NewACLTokenListStub instantiates a new ACLTokenListStub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewACLTokenListStub() *ACLTokenListStub {
	this := ACLTokenListStub{}
	return &this
}

// NewACLTokenListStubWithDefaults instantiates a new ACLTokenListStub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewACLTokenListStubWithDefaults() *ACLTokenListStub {
	this := ACLTokenListStub{}
	return &this
}

// GetAccessorID returns the AccessorID field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetAccessorID() string {
	if o == nil || o.AccessorID == nil {
		var ret string
		return ret
	}
	return *o.AccessorID
}

// GetAccessorIDOk returns a tuple with the AccessorID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetAccessorIDOk() (*string, bool) {
	if o == nil || o.AccessorID == nil {
		return nil, false
	}
	return o.AccessorID, true
}

// HasAccessorID returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasAccessorID() bool {
	if o != nil && o.AccessorID != nil {
		return true
	}

	return false
}

// SetAccessorID gets a reference to the given string and assigns it to the AccessorID field.
func (o *ACLTokenListStub) SetAccessorID(v string) {
	o.AccessorID = &v
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *ACLTokenListStub) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *ACLTokenListStub) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetGlobal() bool {
	if o == nil || o.Global == nil {
		var ret bool
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetGlobalOk() (*bool, bool) {
	if o == nil || o.Global == nil {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasGlobal() bool {
	if o != nil && o.Global != nil {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given bool and assigns it to the Global field.
func (o *ACLTokenListStub) SetGlobal(v bool) {
	o.Global = &v
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *ACLTokenListStub) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ACLTokenListStub) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return *o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetPoliciesOk() (*[]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *ACLTokenListStub) SetPolicies(v []string) {
	o.Policies = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetRoles() []ACLTokenRoleLink {
	if o == nil || o.Roles == nil {
		var ret []ACLTokenRoleLink
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetRolesOk() (*[]ACLTokenRoleLink, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []ACLTokenRoleLink and assigns it to the Roles field.
func (o *ACLTokenListStub) SetRoles(v []ACLTokenRoleLink) {
	o.Roles = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ACLTokenListStub) SetType(v string) {
	o.Type = &v
}

// GetExpirationTime returns the ExpirationTime field value if set, zero value otherwise.
func (o *ACLTokenListStub) GetExpirationTime() time.Time {
	if o == nil || o.ExpirationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLTokenListStub) GetExpirationTimeOk() (*time.Time, bool) {
	if o == nil || o.ExpirationTime == nil {
		return nil, false
	}
	return o.ExpirationTime, true
}

// HasExpirationTime returns a boolean if a field has been set.
func (o *ACLTokenListStub) HasExpirationTime() bool {
	if o != nil && o.ExpirationTime != nil {
		return true
	}

	return false
}

// SetExpirationTime gets a reference to the given time.Time and assigns it to the ExpirationTime field.
func (o *ACLTokenListStub) SetExpirationTime(v time.Time) {
	o.ExpirationTime = &v
}

func (o ACLTokenListStub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessorID != nil {
		toSerialize["AccessorID"] = o.AccessorID
	}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.CreateTime != nil {
		toSerialize["CreateTime"] = o.CreateTime
	}
	if o.Global != nil {
		toSerialize["Global"] = o.Global
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Policies != nil {
		toSerialize["Policies"] = o.Policies
	}
	if o.Roles != nil {
		toSerialize["Roles"] = o.Roles
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	if o.ExpirationTime != nil {
		toSerialize["expiration_time"] = o.ExpirationTime
	}
	return json.Marshal(toSerialize)
}

type NullableACLTokenListStub struct {
	value *ACLTokenListStub
	isSet bool
}

func (v NullableACLTokenListStub) Get() *ACLTokenListStub {
	return v.value
}

func (v *NullableACLTokenListStub) Set(val *ACLTokenListStub) {
	v.value = val
	v.isSet = true
}

func (v NullableACLTokenListStub) IsSet() bool {
	return v.isSet
}

func (v *NullableACLTokenListStub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableACLTokenListStub(val *ACLTokenListStub) *NullableACLTokenListStub {
	return &NullableACLTokenListStub{value: val, isSet: true}
}

func (v NullableACLTokenListStub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableACLTokenListStub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


