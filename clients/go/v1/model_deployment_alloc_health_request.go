/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.4
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// DeploymentAllocHealthRequest struct for DeploymentAllocHealthRequest
type DeploymentAllocHealthRequest struct {
	DeploymentID *string `json:"DeploymentID,omitempty"`
	HealthyAllocationIDs *[]string `json:"HealthyAllocationIDs,omitempty"`
	Namespace *string `json:"Namespace,omitempty"`
	Region *string `json:"Region,omitempty"`
	SecretID *string `json:"SecretID,omitempty"`
	UnhealthyAllocationIDs *[]string `json:"UnhealthyAllocationIDs,omitempty"`
}

// NewDeploymentAllocHealthRequest instantiates a new DeploymentAllocHealthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentAllocHealthRequest() *DeploymentAllocHealthRequest {
	this := DeploymentAllocHealthRequest{}
	return &this
}

// NewDeploymentAllocHealthRequestWithDefaults instantiates a new DeploymentAllocHealthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentAllocHealthRequestWithDefaults() *DeploymentAllocHealthRequest {
	this := DeploymentAllocHealthRequest{}
	return &this
}

// GetDeploymentID returns the DeploymentID field value if set, zero value otherwise.
func (o *DeploymentAllocHealthRequest) GetDeploymentID() string {
	if o == nil || o.DeploymentID == nil {
		var ret string
		return ret
	}
	return *o.DeploymentID
}

// GetDeploymentIDOk returns a tuple with the DeploymentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentAllocHealthRequest) GetDeploymentIDOk() (*string, bool) {
	if o == nil || o.DeploymentID == nil {
		return nil, false
	}
	return o.DeploymentID, true
}

// HasDeploymentID returns a boolean if a field has been set.
func (o *DeploymentAllocHealthRequest) HasDeploymentID() bool {
	if o != nil && o.DeploymentID != nil {
		return true
	}

	return false
}

// SetDeploymentID gets a reference to the given string and assigns it to the DeploymentID field.
func (o *DeploymentAllocHealthRequest) SetDeploymentID(v string) {
	o.DeploymentID = &v
}

// GetHealthyAllocationIDs returns the HealthyAllocationIDs field value if set, zero value otherwise.
func (o *DeploymentAllocHealthRequest) GetHealthyAllocationIDs() []string {
	if o == nil || o.HealthyAllocationIDs == nil {
		var ret []string
		return ret
	}
	return *o.HealthyAllocationIDs
}

// GetHealthyAllocationIDsOk returns a tuple with the HealthyAllocationIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentAllocHealthRequest) GetHealthyAllocationIDsOk() (*[]string, bool) {
	if o == nil || o.HealthyAllocationIDs == nil {
		return nil, false
	}
	return o.HealthyAllocationIDs, true
}

// HasHealthyAllocationIDs returns a boolean if a field has been set.
func (o *DeploymentAllocHealthRequest) HasHealthyAllocationIDs() bool {
	if o != nil && o.HealthyAllocationIDs != nil {
		return true
	}

	return false
}

// SetHealthyAllocationIDs gets a reference to the given []string and assigns it to the HealthyAllocationIDs field.
func (o *DeploymentAllocHealthRequest) SetHealthyAllocationIDs(v []string) {
	o.HealthyAllocationIDs = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *DeploymentAllocHealthRequest) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentAllocHealthRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *DeploymentAllocHealthRequest) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *DeploymentAllocHealthRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *DeploymentAllocHealthRequest) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentAllocHealthRequest) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *DeploymentAllocHealthRequest) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *DeploymentAllocHealthRequest) SetRegion(v string) {
	o.Region = &v
}

// GetSecretID returns the SecretID field value if set, zero value otherwise.
func (o *DeploymentAllocHealthRequest) GetSecretID() string {
	if o == nil || o.SecretID == nil {
		var ret string
		return ret
	}
	return *o.SecretID
}

// GetSecretIDOk returns a tuple with the SecretID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentAllocHealthRequest) GetSecretIDOk() (*string, bool) {
	if o == nil || o.SecretID == nil {
		return nil, false
	}
	return o.SecretID, true
}

// HasSecretID returns a boolean if a field has been set.
func (o *DeploymentAllocHealthRequest) HasSecretID() bool {
	if o != nil && o.SecretID != nil {
		return true
	}

	return false
}

// SetSecretID gets a reference to the given string and assigns it to the SecretID field.
func (o *DeploymentAllocHealthRequest) SetSecretID(v string) {
	o.SecretID = &v
}

// GetUnhealthyAllocationIDs returns the UnhealthyAllocationIDs field value if set, zero value otherwise.
func (o *DeploymentAllocHealthRequest) GetUnhealthyAllocationIDs() []string {
	if o == nil || o.UnhealthyAllocationIDs == nil {
		var ret []string
		return ret
	}
	return *o.UnhealthyAllocationIDs
}

// GetUnhealthyAllocationIDsOk returns a tuple with the UnhealthyAllocationIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentAllocHealthRequest) GetUnhealthyAllocationIDsOk() (*[]string, bool) {
	if o == nil || o.UnhealthyAllocationIDs == nil {
		return nil, false
	}
	return o.UnhealthyAllocationIDs, true
}

// HasUnhealthyAllocationIDs returns a boolean if a field has been set.
func (o *DeploymentAllocHealthRequest) HasUnhealthyAllocationIDs() bool {
	if o != nil && o.UnhealthyAllocationIDs != nil {
		return true
	}

	return false
}

// SetUnhealthyAllocationIDs gets a reference to the given []string and assigns it to the UnhealthyAllocationIDs field.
func (o *DeploymentAllocHealthRequest) SetUnhealthyAllocationIDs(v []string) {
	o.UnhealthyAllocationIDs = &v
}

func (o DeploymentAllocHealthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentID != nil {
		toSerialize["DeploymentID"] = o.DeploymentID
	}
	if o.HealthyAllocationIDs != nil {
		toSerialize["HealthyAllocationIDs"] = o.HealthyAllocationIDs
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.Region != nil {
		toSerialize["Region"] = o.Region
	}
	if o.SecretID != nil {
		toSerialize["SecretID"] = o.SecretID
	}
	if o.UnhealthyAllocationIDs != nil {
		toSerialize["UnhealthyAllocationIDs"] = o.UnhealthyAllocationIDs
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentAllocHealthRequest struct {
	value *DeploymentAllocHealthRequest
	isSet bool
}

func (v NullableDeploymentAllocHealthRequest) Get() *DeploymentAllocHealthRequest {
	return v.value
}

func (v *NullableDeploymentAllocHealthRequest) Set(val *DeploymentAllocHealthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentAllocHealthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentAllocHealthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentAllocHealthRequest(val *DeploymentAllocHealthRequest) *NullableDeploymentAllocHealthRequest {
	return &NullableDeploymentAllocHealthRequest{value: val, isSet: true}
}

func (v NullableDeploymentAllocHealthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentAllocHealthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


