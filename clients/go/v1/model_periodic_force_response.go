/*
Nomad

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.4
Contact: support@hashicorp.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PeriodicForceResponse struct for PeriodicForceResponse
type PeriodicForceResponse struct {
	EvalCreateIndex *int32 `json:"EvalCreateIndex,omitempty"`
	EvalID *string `json:"EvalID,omitempty"`
	Index *int32 `json:"Index,omitempty"`
}

// NewPeriodicForceResponse instantiates a new PeriodicForceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeriodicForceResponse() *PeriodicForceResponse {
	this := PeriodicForceResponse{}
	return &this
}

// NewPeriodicForceResponseWithDefaults instantiates a new PeriodicForceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeriodicForceResponseWithDefaults() *PeriodicForceResponse {
	this := PeriodicForceResponse{}
	return &this
}

// GetEvalCreateIndex returns the EvalCreateIndex field value if set, zero value otherwise.
func (o *PeriodicForceResponse) GetEvalCreateIndex() int32 {
	if o == nil || o.EvalCreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.EvalCreateIndex
}

// GetEvalCreateIndexOk returns a tuple with the EvalCreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodicForceResponse) GetEvalCreateIndexOk() (*int32, bool) {
	if o == nil || o.EvalCreateIndex == nil {
		return nil, false
	}
	return o.EvalCreateIndex, true
}

// HasEvalCreateIndex returns a boolean if a field has been set.
func (o *PeriodicForceResponse) HasEvalCreateIndex() bool {
	if o != nil && o.EvalCreateIndex != nil {
		return true
	}

	return false
}

// SetEvalCreateIndex gets a reference to the given int32 and assigns it to the EvalCreateIndex field.
func (o *PeriodicForceResponse) SetEvalCreateIndex(v int32) {
	o.EvalCreateIndex = &v
}

// GetEvalID returns the EvalID field value if set, zero value otherwise.
func (o *PeriodicForceResponse) GetEvalID() string {
	if o == nil || o.EvalID == nil {
		var ret string
		return ret
	}
	return *o.EvalID
}

// GetEvalIDOk returns a tuple with the EvalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodicForceResponse) GetEvalIDOk() (*string, bool) {
	if o == nil || o.EvalID == nil {
		return nil, false
	}
	return o.EvalID, true
}

// HasEvalID returns a boolean if a field has been set.
func (o *PeriodicForceResponse) HasEvalID() bool {
	if o != nil && o.EvalID != nil {
		return true
	}

	return false
}

// SetEvalID gets a reference to the given string and assigns it to the EvalID field.
func (o *PeriodicForceResponse) SetEvalID(v string) {
	o.EvalID = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *PeriodicForceResponse) GetIndex() int32 {
	if o == nil || o.Index == nil {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodicForceResponse) GetIndexOk() (*int32, bool) {
	if o == nil || o.Index == nil {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *PeriodicForceResponse) HasIndex() bool {
	if o != nil && o.Index != nil {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *PeriodicForceResponse) SetIndex(v int32) {
	o.Index = &v
}

func (o PeriodicForceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EvalCreateIndex != nil {
		toSerialize["EvalCreateIndex"] = o.EvalCreateIndex
	}
	if o.EvalID != nil {
		toSerialize["EvalID"] = o.EvalID
	}
	if o.Index != nil {
		toSerialize["Index"] = o.Index
	}
	return json.Marshal(toSerialize)
}

type NullablePeriodicForceResponse struct {
	value *PeriodicForceResponse
	isSet bool
}

func (v NullablePeriodicForceResponse) Get() *PeriodicForceResponse {
	return v.value
}

func (v *NullablePeriodicForceResponse) Set(val *PeriodicForceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePeriodicForceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePeriodicForceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeriodicForceResponse(val *PeriodicForceResponse) *NullablePeriodicForceResponse {
	return &NullablePeriodicForceResponse{value: val, isSet: true}
}

func (v NullablePeriodicForceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeriodicForceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


