/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// JobDispatchResponse struct for JobDispatchResponse
type JobDispatchResponse struct {
	DispatchedJobID *string `json:"DispatchedJobID,omitempty"`
	EvalCreateIndex *int32 `json:"EvalCreateIndex,omitempty"`
	EvalID *string `json:"EvalID,omitempty"`
	JobCreateIndex *int32 `json:"JobCreateIndex,omitempty"`
	LastIndex *int32 `json:"LastIndex,omitempty"`
	RequestTime *int64 `json:"RequestTime,omitempty"`
}

// NewJobDispatchResponse instantiates a new JobDispatchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobDispatchResponse() *JobDispatchResponse {
	this := JobDispatchResponse{}
	return &this
}

// NewJobDispatchResponseWithDefaults instantiates a new JobDispatchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobDispatchResponseWithDefaults() *JobDispatchResponse {
	this := JobDispatchResponse{}
	return &this
}

// GetDispatchedJobID returns the DispatchedJobID field value if set, zero value otherwise.
func (o *JobDispatchResponse) GetDispatchedJobID() string {
	if o == nil || o.DispatchedJobID == nil {
		var ret string
		return ret
	}
	return *o.DispatchedJobID
}

// GetDispatchedJobIDOk returns a tuple with the DispatchedJobID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobDispatchResponse) GetDispatchedJobIDOk() (*string, bool) {
	if o == nil || o.DispatchedJobID == nil {
		return nil, false
	}
	return o.DispatchedJobID, true
}

// HasDispatchedJobID returns a boolean if a field has been set.
func (o *JobDispatchResponse) HasDispatchedJobID() bool {
	if o != nil && o.DispatchedJobID != nil {
		return true
	}

	return false
}

// SetDispatchedJobID gets a reference to the given string and assigns it to the DispatchedJobID field.
func (o *JobDispatchResponse) SetDispatchedJobID(v string) {
	o.DispatchedJobID = &v
}

// GetEvalCreateIndex returns the EvalCreateIndex field value if set, zero value otherwise.
func (o *JobDispatchResponse) GetEvalCreateIndex() int32 {
	if o == nil || o.EvalCreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.EvalCreateIndex
}

// GetEvalCreateIndexOk returns a tuple with the EvalCreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobDispatchResponse) GetEvalCreateIndexOk() (*int32, bool) {
	if o == nil || o.EvalCreateIndex == nil {
		return nil, false
	}
	return o.EvalCreateIndex, true
}

// HasEvalCreateIndex returns a boolean if a field has been set.
func (o *JobDispatchResponse) HasEvalCreateIndex() bool {
	if o != nil && o.EvalCreateIndex != nil {
		return true
	}

	return false
}

// SetEvalCreateIndex gets a reference to the given int32 and assigns it to the EvalCreateIndex field.
func (o *JobDispatchResponse) SetEvalCreateIndex(v int32) {
	o.EvalCreateIndex = &v
}

// GetEvalID returns the EvalID field value if set, zero value otherwise.
func (o *JobDispatchResponse) GetEvalID() string {
	if o == nil || o.EvalID == nil {
		var ret string
		return ret
	}
	return *o.EvalID
}

// GetEvalIDOk returns a tuple with the EvalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobDispatchResponse) GetEvalIDOk() (*string, bool) {
	if o == nil || o.EvalID == nil {
		return nil, false
	}
	return o.EvalID, true
}

// HasEvalID returns a boolean if a field has been set.
func (o *JobDispatchResponse) HasEvalID() bool {
	if o != nil && o.EvalID != nil {
		return true
	}

	return false
}

// SetEvalID gets a reference to the given string and assigns it to the EvalID field.
func (o *JobDispatchResponse) SetEvalID(v string) {
	o.EvalID = &v
}

// GetJobCreateIndex returns the JobCreateIndex field value if set, zero value otherwise.
func (o *JobDispatchResponse) GetJobCreateIndex() int32 {
	if o == nil || o.JobCreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.JobCreateIndex
}

// GetJobCreateIndexOk returns a tuple with the JobCreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobDispatchResponse) GetJobCreateIndexOk() (*int32, bool) {
	if o == nil || o.JobCreateIndex == nil {
		return nil, false
	}
	return o.JobCreateIndex, true
}

// HasJobCreateIndex returns a boolean if a field has been set.
func (o *JobDispatchResponse) HasJobCreateIndex() bool {
	if o != nil && o.JobCreateIndex != nil {
		return true
	}

	return false
}

// SetJobCreateIndex gets a reference to the given int32 and assigns it to the JobCreateIndex field.
func (o *JobDispatchResponse) SetJobCreateIndex(v int32) {
	o.JobCreateIndex = &v
}

// GetLastIndex returns the LastIndex field value if set, zero value otherwise.
func (o *JobDispatchResponse) GetLastIndex() int32 {
	if o == nil || o.LastIndex == nil {
		var ret int32
		return ret
	}
	return *o.LastIndex
}

// GetLastIndexOk returns a tuple with the LastIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobDispatchResponse) GetLastIndexOk() (*int32, bool) {
	if o == nil || o.LastIndex == nil {
		return nil, false
	}
	return o.LastIndex, true
}

// HasLastIndex returns a boolean if a field has been set.
func (o *JobDispatchResponse) HasLastIndex() bool {
	if o != nil && o.LastIndex != nil {
		return true
	}

	return false
}

// SetLastIndex gets a reference to the given int32 and assigns it to the LastIndex field.
func (o *JobDispatchResponse) SetLastIndex(v int32) {
	o.LastIndex = &v
}

// GetRequestTime returns the RequestTime field value if set, zero value otherwise.
func (o *JobDispatchResponse) GetRequestTime() int64 {
	if o == nil || o.RequestTime == nil {
		var ret int64
		return ret
	}
	return *o.RequestTime
}

// GetRequestTimeOk returns a tuple with the RequestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobDispatchResponse) GetRequestTimeOk() (*int64, bool) {
	if o == nil || o.RequestTime == nil {
		return nil, false
	}
	return o.RequestTime, true
}

// HasRequestTime returns a boolean if a field has been set.
func (o *JobDispatchResponse) HasRequestTime() bool {
	if o != nil && o.RequestTime != nil {
		return true
	}

	return false
}

// SetRequestTime gets a reference to the given int64 and assigns it to the RequestTime field.
func (o *JobDispatchResponse) SetRequestTime(v int64) {
	o.RequestTime = &v
}

func (o JobDispatchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DispatchedJobID != nil {
		toSerialize["DispatchedJobID"] = o.DispatchedJobID
	}
	if o.EvalCreateIndex != nil {
		toSerialize["EvalCreateIndex"] = o.EvalCreateIndex
	}
	if o.EvalID != nil {
		toSerialize["EvalID"] = o.EvalID
	}
	if o.JobCreateIndex != nil {
		toSerialize["JobCreateIndex"] = o.JobCreateIndex
	}
	if o.LastIndex != nil {
		toSerialize["LastIndex"] = o.LastIndex
	}
	if o.RequestTime != nil {
		toSerialize["RequestTime"] = o.RequestTime
	}
	return json.Marshal(toSerialize)
}

type NullableJobDispatchResponse struct {
	value *JobDispatchResponse
	isSet bool
}

func (v NullableJobDispatchResponse) Get() *JobDispatchResponse {
	return v.value
}

func (v *NullableJobDispatchResponse) Set(val *JobDispatchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJobDispatchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJobDispatchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobDispatchResponse(val *JobDispatchResponse) *NullableJobDispatchResponse {
	return &NullableJobDispatchResponse{value: val, isSet: true}
}

func (v NullableJobDispatchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobDispatchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


