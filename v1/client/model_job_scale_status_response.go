/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// JobScaleStatusResponse struct for JobScaleStatusResponse
type JobScaleStatusResponse struct {
	JobCreateIndex *int32 `json:"JobCreateIndex,omitempty"`
	JobID *string `json:"JobID,omitempty"`
	JobModifyIndex *int32 `json:"JobModifyIndex,omitempty"`
	JobStopped *bool `json:"JobStopped,omitempty"`
	Namespace *string `json:"Namespace,omitempty"`
	TaskGroups *map[string]TaskGroupScaleStatus `json:"TaskGroups,omitempty"`
}

// NewJobScaleStatusResponse instantiates a new JobScaleStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobScaleStatusResponse() *JobScaleStatusResponse {
	this := JobScaleStatusResponse{}
	return &this
}

// NewJobScaleStatusResponseWithDefaults instantiates a new JobScaleStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobScaleStatusResponseWithDefaults() *JobScaleStatusResponse {
	this := JobScaleStatusResponse{}
	return &this
}

// GetJobCreateIndex returns the JobCreateIndex field value if set, zero value otherwise.
func (o *JobScaleStatusResponse) GetJobCreateIndex() int32 {
	if o == nil || o.JobCreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.JobCreateIndex
}

// GetJobCreateIndexOk returns a tuple with the JobCreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScaleStatusResponse) GetJobCreateIndexOk() (*int32, bool) {
	if o == nil || o.JobCreateIndex == nil {
		return nil, false
	}
	return o.JobCreateIndex, true
}

// HasJobCreateIndex returns a boolean if a field has been set.
func (o *JobScaleStatusResponse) HasJobCreateIndex() bool {
	if o != nil && o.JobCreateIndex != nil {
		return true
	}

	return false
}

// SetJobCreateIndex gets a reference to the given int32 and assigns it to the JobCreateIndex field.
func (o *JobScaleStatusResponse) SetJobCreateIndex(v int32) {
	o.JobCreateIndex = &v
}

// GetJobID returns the JobID field value if set, zero value otherwise.
func (o *JobScaleStatusResponse) GetJobID() string {
	if o == nil || o.JobID == nil {
		var ret string
		return ret
	}
	return *o.JobID
}

// GetJobIDOk returns a tuple with the JobID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScaleStatusResponse) GetJobIDOk() (*string, bool) {
	if o == nil || o.JobID == nil {
		return nil, false
	}
	return o.JobID, true
}

// HasJobID returns a boolean if a field has been set.
func (o *JobScaleStatusResponse) HasJobID() bool {
	if o != nil && o.JobID != nil {
		return true
	}

	return false
}

// SetJobID gets a reference to the given string and assigns it to the JobID field.
func (o *JobScaleStatusResponse) SetJobID(v string) {
	o.JobID = &v
}

// GetJobModifyIndex returns the JobModifyIndex field value if set, zero value otherwise.
func (o *JobScaleStatusResponse) GetJobModifyIndex() int32 {
	if o == nil || o.JobModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.JobModifyIndex
}

// GetJobModifyIndexOk returns a tuple with the JobModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScaleStatusResponse) GetJobModifyIndexOk() (*int32, bool) {
	if o == nil || o.JobModifyIndex == nil {
		return nil, false
	}
	return o.JobModifyIndex, true
}

// HasJobModifyIndex returns a boolean if a field has been set.
func (o *JobScaleStatusResponse) HasJobModifyIndex() bool {
	if o != nil && o.JobModifyIndex != nil {
		return true
	}

	return false
}

// SetJobModifyIndex gets a reference to the given int32 and assigns it to the JobModifyIndex field.
func (o *JobScaleStatusResponse) SetJobModifyIndex(v int32) {
	o.JobModifyIndex = &v
}

// GetJobStopped returns the JobStopped field value if set, zero value otherwise.
func (o *JobScaleStatusResponse) GetJobStopped() bool {
	if o == nil || o.JobStopped == nil {
		var ret bool
		return ret
	}
	return *o.JobStopped
}

// GetJobStoppedOk returns a tuple with the JobStopped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScaleStatusResponse) GetJobStoppedOk() (*bool, bool) {
	if o == nil || o.JobStopped == nil {
		return nil, false
	}
	return o.JobStopped, true
}

// HasJobStopped returns a boolean if a field has been set.
func (o *JobScaleStatusResponse) HasJobStopped() bool {
	if o != nil && o.JobStopped != nil {
		return true
	}

	return false
}

// SetJobStopped gets a reference to the given bool and assigns it to the JobStopped field.
func (o *JobScaleStatusResponse) SetJobStopped(v bool) {
	o.JobStopped = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *JobScaleStatusResponse) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScaleStatusResponse) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *JobScaleStatusResponse) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *JobScaleStatusResponse) SetNamespace(v string) {
	o.Namespace = &v
}

// GetTaskGroups returns the TaskGroups field value if set, zero value otherwise.
func (o *JobScaleStatusResponse) GetTaskGroups() map[string]TaskGroupScaleStatus {
	if o == nil || o.TaskGroups == nil {
		var ret map[string]TaskGroupScaleStatus
		return ret
	}
	return *o.TaskGroups
}

// GetTaskGroupsOk returns a tuple with the TaskGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScaleStatusResponse) GetTaskGroupsOk() (*map[string]TaskGroupScaleStatus, bool) {
	if o == nil || o.TaskGroups == nil {
		return nil, false
	}
	return o.TaskGroups, true
}

// HasTaskGroups returns a boolean if a field has been set.
func (o *JobScaleStatusResponse) HasTaskGroups() bool {
	if o != nil && o.TaskGroups != nil {
		return true
	}

	return false
}

// SetTaskGroups gets a reference to the given map[string]TaskGroupScaleStatus and assigns it to the TaskGroups field.
func (o *JobScaleStatusResponse) SetTaskGroups(v map[string]TaskGroupScaleStatus) {
	o.TaskGroups = &v
}

func (o JobScaleStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobCreateIndex != nil {
		toSerialize["JobCreateIndex"] = o.JobCreateIndex
	}
	if o.JobID != nil {
		toSerialize["JobID"] = o.JobID
	}
	if o.JobModifyIndex != nil {
		toSerialize["JobModifyIndex"] = o.JobModifyIndex
	}
	if o.JobStopped != nil {
		toSerialize["JobStopped"] = o.JobStopped
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.TaskGroups != nil {
		toSerialize["TaskGroups"] = o.TaskGroups
	}
	return json.Marshal(toSerialize)
}

type NullableJobScaleStatusResponse struct {
	value *JobScaleStatusResponse
	isSet bool
}

func (v NullableJobScaleStatusResponse) Get() *JobScaleStatusResponse {
	return v.value
}

func (v *NullableJobScaleStatusResponse) Set(val *JobScaleStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJobScaleStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJobScaleStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobScaleStatusResponse(val *JobScaleStatusResponse) *NullableJobScaleStatusResponse {
	return &NullableJobScaleStatusResponse{value: val, isSet: true}
}

func (v NullableJobScaleStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobScaleStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


