/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// JobSummary struct for JobSummary
type JobSummary struct {
	Children *JobChildrenSummary `json:"Children,omitempty"`
	CreateIndex *int32 `json:"CreateIndex,omitempty"`
	JobID *string `json:"JobID,omitempty"`
	ModifyIndex *int32 `json:"ModifyIndex,omitempty"`
	Namespace *string `json:"Namespace,omitempty"`
	Summary *map[string]TaskGroupSummary `json:"Summary,omitempty"`
}

// NewJobSummary instantiates a new JobSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobSummary() *JobSummary {
	this := JobSummary{}
	return &this
}

// NewJobSummaryWithDefaults instantiates a new JobSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobSummaryWithDefaults() *JobSummary {
	this := JobSummary{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *JobSummary) GetChildren() JobChildrenSummary {
	if o == nil || o.Children == nil {
		var ret JobChildrenSummary
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSummary) GetChildrenOk() (*JobChildrenSummary, bool) {
	if o == nil || o.Children == nil {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *JobSummary) HasChildren() bool {
	if o != nil && o.Children != nil {
		return true
	}

	return false
}

// SetChildren gets a reference to the given JobChildrenSummary and assigns it to the Children field.
func (o *JobSummary) SetChildren(v JobChildrenSummary) {
	o.Children = &v
}

// GetCreateIndex returns the CreateIndex field value if set, zero value otherwise.
func (o *JobSummary) GetCreateIndex() int32 {
	if o == nil || o.CreateIndex == nil {
		var ret int32
		return ret
	}
	return *o.CreateIndex
}

// GetCreateIndexOk returns a tuple with the CreateIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSummary) GetCreateIndexOk() (*int32, bool) {
	if o == nil || o.CreateIndex == nil {
		return nil, false
	}
	return o.CreateIndex, true
}

// HasCreateIndex returns a boolean if a field has been set.
func (o *JobSummary) HasCreateIndex() bool {
	if o != nil && o.CreateIndex != nil {
		return true
	}

	return false
}

// SetCreateIndex gets a reference to the given int32 and assigns it to the CreateIndex field.
func (o *JobSummary) SetCreateIndex(v int32) {
	o.CreateIndex = &v
}

// GetJobID returns the JobID field value if set, zero value otherwise.
func (o *JobSummary) GetJobID() string {
	if o == nil || o.JobID == nil {
		var ret string
		return ret
	}
	return *o.JobID
}

// GetJobIDOk returns a tuple with the JobID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSummary) GetJobIDOk() (*string, bool) {
	if o == nil || o.JobID == nil {
		return nil, false
	}
	return o.JobID, true
}

// HasJobID returns a boolean if a field has been set.
func (o *JobSummary) HasJobID() bool {
	if o != nil && o.JobID != nil {
		return true
	}

	return false
}

// SetJobID gets a reference to the given string and assigns it to the JobID field.
func (o *JobSummary) SetJobID(v string) {
	o.JobID = &v
}

// GetModifyIndex returns the ModifyIndex field value if set, zero value otherwise.
func (o *JobSummary) GetModifyIndex() int32 {
	if o == nil || o.ModifyIndex == nil {
		var ret int32
		return ret
	}
	return *o.ModifyIndex
}

// GetModifyIndexOk returns a tuple with the ModifyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSummary) GetModifyIndexOk() (*int32, bool) {
	if o == nil || o.ModifyIndex == nil {
		return nil, false
	}
	return o.ModifyIndex, true
}

// HasModifyIndex returns a boolean if a field has been set.
func (o *JobSummary) HasModifyIndex() bool {
	if o != nil && o.ModifyIndex != nil {
		return true
	}

	return false
}

// SetModifyIndex gets a reference to the given int32 and assigns it to the ModifyIndex field.
func (o *JobSummary) SetModifyIndex(v int32) {
	o.ModifyIndex = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *JobSummary) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSummary) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *JobSummary) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *JobSummary) SetNamespace(v string) {
	o.Namespace = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *JobSummary) GetSummary() map[string]TaskGroupSummary {
	if o == nil || o.Summary == nil {
		var ret map[string]TaskGroupSummary
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSummary) GetSummaryOk() (*map[string]TaskGroupSummary, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *JobSummary) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given map[string]TaskGroupSummary and assigns it to the Summary field.
func (o *JobSummary) SetSummary(v map[string]TaskGroupSummary) {
	o.Summary = &v
}

func (o JobSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Children != nil {
		toSerialize["Children"] = o.Children
	}
	if o.CreateIndex != nil {
		toSerialize["CreateIndex"] = o.CreateIndex
	}
	if o.JobID != nil {
		toSerialize["JobID"] = o.JobID
	}
	if o.ModifyIndex != nil {
		toSerialize["ModifyIndex"] = o.ModifyIndex
	}
	if o.Namespace != nil {
		toSerialize["Namespace"] = o.Namespace
	}
	if o.Summary != nil {
		toSerialize["Summary"] = o.Summary
	}
	return json.Marshal(toSerialize)
}

type NullableJobSummary struct {
	value *JobSummary
	isSet bool
}

func (v NullableJobSummary) Get() *JobSummary {
	return v.value
}

func (v *NullableJobSummary) Set(val *JobSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableJobSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableJobSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobSummary(val *JobSummary) *NullableJobSummary {
	return &NullableJobSummary{value: val, isSet: true}
}

func (v NullableJobSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


